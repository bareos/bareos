#!/bin/bash
set -e
set -o pipefail
set -u
#
# This systemtest tests the Percona plugin functionality
# of the Bareos FD by using the supplied module
#   BareosFdPluginPerconaXtraBackup.py
#
TestName="$(basename "$(pwd)")"
export TestName


JobName=backup-bareos-fd
#shellcheck source=../environment.in
. ./environment
MYQL_CLIENT="${MYSQL} --defaults-file=mysqldefaults --user=root"

JobName=backup-bareos-fd
#shellcheck source=../scripts/functions
. "${rscripts}"/functions
"${rscripts}"/cleanup
"${rscripts}"/setup

shutdown_mysql_server(){
  [ -f "mysql/data/${HOSTNAME}.pid" ] && kill "$(cat mysql/data/${HOSTNAME}.pid)" || :
# kill running mysqld instance listening on our port
sudo fuser "${test_db_port}"/tcp -k || :
}


shutdown_mysql_server

# kill running mysqld instance listening on our port
sudo fuser "${test_db_port}"/tcp -k || :

rm -Rf mysql/data/*
mkdir -p mysql/data/
# directory for socket, depending on length (socket length is limited)
rm -Rf  ${dbHost}
mkdir -p ${dbHost}


# initialize mysql db

${MYSQLD} --defaults-file=mysqldefaults --initialize-insecure --user="$USER" > mysql/mysql_init.log
# start mysql server
${MYSQLD} --defaults-file=mysqldefaults >mysql/mysql.log 2>&1 &

tries=60
echo "waiting for mysql server to start"
while ! $MYQL_CLIENT <<< "select version();"  > /dev/null 2>&1; do
  [ $((tries-=1)) -eq 0 ] && {
    echo "Could not start mysql server"
    cat mysql/mysql.log
    shutdown_mysql_server
    exit 1
  }
  echo -n "."
  sleep 1
done

xtrabackup_test_db="${db_name}_xtrabackup"

start_test

echo "create database ${xtrabackup_test_db}" | $MYQL_CLIENT
echo "CREATE TABLE test ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT, data VARCHAR(100), created TIMESTAMP DEFAULT NOW())  " | $MYQL_CLIENT "${xtrabackup_test_db}"
echo "insert into test (data) VALUES ('test entry 1') " | $MYQL_CLIENT "${xtrabackup_test_db}"

cat <<END_OF_DATA >"$tmp/bconcmds"
@$out $tmp/log1.out
run job=$JobName yes
wait JobName=$JobName
status dir

run job=$JobName level=Incremental yes
wait JobName=$JobName
status dir

# insert data and run incremental
insert into test (data) VALUES ('test entry 2')

END_OF_DATA
run_bareos "$@"

cat <<END_OF_DATA2 >"$tmp/bconcmds"
# run incremental again without any new data
run job=$JobName yes
wait JobName=$JobName
status dir
wait
messages
quit
END_OF_DATA2
run_bareos "$@"

cat <<END_OF_DATA3 >"$tmp/bconcmds"
restore client=bareos-fd fileset=PerconaXtraBackupTest yes restorejob=RestoreFile select all done
@$out $tmp/log2.out
wait
END_OF_DATA3

run_bareos "$@"

shutdown_mysql_server


# Check if xtrabackup has extracted some files at least
# TODO: verify that xtrabackup --prepare works and eventually do complete datbase restore
ls -lR  "$tmp/bareos-restores/_percona/"
if [ -z "$(ls -A "$tmp"/bareos-restores/_percona/)" ]; then
       echo "No restore data found"
       estat=1
fi



check_for_zombie_jobs storage=File
stop_bareos

check_two_logs

end_test
