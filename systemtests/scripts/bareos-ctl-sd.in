#! /bin/bash
#
# bareos-ctl-sd  This shell script takes care of starting and stopping
#		 the Bareos Storage daemon
#
# description: Backup Archiving REcovery Open Sourced.
#

export PSCMD="@PSCMD@"
export PS="ps"
export AWK="@AWK@"
export PIDOF="@PIDOF@"
export PGREP="@PGREP@"

BAREOS_STORAGEDAEMON_BINARY=${BAREOS_STORAGEDAEMON_BINARY:-@sbindir@/bareos-sd}
export BAREOS_CONFIG_DIR=${BAREOS_CONFIG_DIR:-@confdir@}
BAREOS_SD_PORT=${BAREOS_SD_PORT:-@sd_port@}
BAREOS_SCRIPTS_DIR=${BAREOS_SCRIPTS_DIR:-@scriptdir@}

#
# Source the generic functions.
#
. "${BAREOS_SCRIPTS_DIR}/bareos-ctl-funcs"

case "$1" in
  start)
    if [ -x ${BAREOS_STORAGEDAEMON_BINARY} ]; then
      echo "Starting the Bareos Storage daemon"
      OPTIONS=''
      if [ "${BAREOS_CONFIG_DIR}" != '' ]; then
        OPTIONS="${OPTIONS} -c ${BAREOS_CONFIG_DIR}"
      fi

      check_config sd ${BAREOS_STORAGEDAEMON_BINARY} $2 $3 ${OPTIONS} || exit $?
      if [ "x${VALGRIND_SD}" = "x1" ]; then
        valgrind --leak-check=full ${BAREOS_STORAGEDAEMON_BINARY} -v $2 $3 ${OPTIONS}
      else
        ${BAREOS_STORAGEDAEMON_BINARY} -v $2 $3 ${OPTIONS}
      fi
    fi
    ;;

  stop)
    if [ -x ${BAREOS_STORAGEDAEMON_BINARY} ]; then
      printf "Stopping the Bareos Storage daemon: "
      shift # shift away the stop
      killproc ${BAREOS_STORAGEDAEMON_BINARY} ${BAREOS_SD_PORT} "${@}"
    fi
    ;;

  restart)
    $0 stop
    sleep 5
    $0 start
    ;;

  status)
    [ -x ${BAREOS_STORAGEDAEMON_BINARY} ] && status ${BAREOS_STORAGEDAEMON_BINARY} ${BAREOS_SD_PORT}
    exit $?
    ;;

  *)
    echo "Usage: $0 {start|stop|restart|status}"
    exit 1
    ;;
esac

exit 0
