# CMAKE_CONFIG_TYPE is required on windows, on other OS it needs to be empty
if [[ "$(uname -s)" =~ _NT ]]; then
  # default to config type 'Debug', so that manual running the testrunners on
  # windows works.
  # When the testrunners are started by ctest, CMAKE_CONFIG_TYPE is set by
  # ctest to the value given via the "-C <cfg>, --build-config <cfg>" parameter
  CMAKE_CONFIG_TYPE=${CMAKE_CONFIG_TYPE:-Debug}
else
  CMAKE_CONFIG_TYPE=""
fi
CMAKE_SOURCE_DIR=@CMAKE_SOURCE_DIR@
CMAKE_BINARY_DIR=@CMAKE_BINARY_DIR@
PROJECT_SOURCE_DIR=@PROJECT_SOURCE_DIR@
PROJECT_BINARY_DIR=@PROJECT_BINARY_DIR@
bin=@bin@
sbin=@sbin@

BAREOS_UNITTESTS_BINARY_DIR=$CMAKE_BINARY_DIR/core/src/tests

current_test_directory=${PROJECT_BINARY_DIR}/tests/@TEST_NAME@

conf=${current_test_directory}/etc/bareos
export confdir=${conf}
configs=${conf}

export config_directory_dir_additional_test_config=@config_directory_dir_additional_test_config@

working=${current_test_directory}/working
working_dir=${working}
messagesfile=${working_dir}/bareos-dir.conmsg
tmp=${current_test_directory}/tmp
export BackupDirectory="${tmp}/data"
export RestoreDirectory="${tmp}/bareos-restores"
systemtests_s3_use_https=@systemtests_s3_use_https@

export NULL_DEV=@OS_NULL_DEVICE@

dumps=${current_test_directory}/dumps
rscripts=${PROJECT_BINARY_DIR}/scripts
scripts=@scripts@
cats=${PROJECT_BINARY_DIR}/cats
src=${PROJECT_BINARY_DIR}/src
tmpsrc=${PROJECT_BINARY_DIR}/tmpsrc

DBTYPE=${DBTYPE:-postgresql}

archivedir=@archivedir@
logdir=@logdir@

export backenddir="@backenddir@"
export sd_backenddir="@sd_backenddir@"

export dir_password="@dir_password@"
export sd_password="@sd_password@"
export fd_password="@fd_password@"

# exported variables used by start/stop and other bareos scripts
# to override the defaults
export BAREOS_CONFIG_DIR=${conf}
export BAREOS_LOG_DIR=${logdir}
export BAREOS_SCRIPTS_DIR=${scripts}
export BAREOS_SBIN_DIR=${sbin}
export BAREOS_WORKING_DIR=${working}
export BASEPORT=@BASEPORT@
export BAREOS_DIRECTOR_PORT=@dir_port@
export BAREOS_FD_PORT=@fd_port@
export BAREOS_STORAGE_PORT=@sd_port@
export BAREOS_STORAGE2_PORT=@sd2_port@
export BAREOS_WEBUI_PORT=@php_port@
export MINIO_PORT=@minio_port@

export CMAKE_BINARY_DIR

export BAREOS_DIRECTOR_BINARY=$(dirname "@BAREOS_DIR_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BAREOS_DIR_BINARY@")
export BAREOS_FILEDAEMON_BINARY=$(dirname "@BAREOS_FD_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BAREOS_FD_BINARY@")
export BAREOS_STORAGEDAEMON_BINARY=$(dirname "@BAREOS_SD_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BAREOS_SD_BINARY@")

# normally BAREOS_CTL_FD_RUNNER in unset.
# In some cases, executing bareos-ctl-fd via sudo is required.
# Then we required value is assigned via environment.local.
export BAREOS_CTL_FD_RUNNER=

export BAREOS_BSCAN_BINARY=$(dirname "@BSCAN_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BSCAN_BINARY@")
export BAREOS_BLS_BINARY=$(dirname "@BLS_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BLS_BINARY@")
export BAREOS_BCONSOLE_BINARY=$(dirname "@BCONSOLE_UNSAFE_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BCONSOLE_UNSAFE_BINARY@")
export BAREOS_BEXTRACT_BINARY=$(dirname "@BEXTRACT_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BEXTRACT_BINARY@")
export BAREOS_DBCHECK_BINARY=$(dirname "@BAREOS_DBCHECK_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BAREOS_DBCHECK_BINARY@")
export BAREOS_BCOPY_BINARY=$(dirname "@BCOPY_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BCOPY_BINARY@")
export BAREOS_BDEDUPESTIMATE_BINARY=$(dirname "@BDEDUPESTIMATE_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@BDEDUPESTIMATE_BINARY@")
export BAREOS_GENTESTDATA_BINARY=$(dirname "@GENTESTDATA_BINARY@")/$CMAKE_CONFIG_TYPE/$(basename "@GENTESTDATA_BINARY@")

export archivedir

export scripts
export DBTYPE
export tmp

# DB parameters
export db_name=@db_name@
export db_user=@db_user@
export db_password=@db_password@

# TLS_VERSION = v1.2 is a workaround,
# By default, sslpsk should negotiate the highest
# TLS protocol version.
# This fails with the current version (1.0.0) of sslpsk.
export PYTHON_BAREOS_TLS_VERSION="v1.2"

export PAM_WRAPPER_LIBRARIES=@PAM_WRAPPER_LIBRARIES@

#
# Selenium test
#
export BAREOS_WEBUI_TESTNAME=@BAREOS_WEBUI_TESTNAME@
export BAREOS_WEBUI_PROFILE=@BAREOS_WEBUI_PROFILE@
export BAREOS_WEBUI_CONFDIR=@WEBUICONFDIR@
export BAREOS_WEBUI_BROWSER=chrome
export BAREOS_WEBUI_CHROMEDRIVER_PATH=@CHROMEDRIVER@
export BAREOS_WEBUI_BASE_URL=http://localhost:@php_port@/
export BAREOS_WEBUI_USERNAME=@BAREOS_WEBUI_PROFILE@
export BAREOS_WEBUI_PASSWORD=@BAREOS_WEBUI_PROFILE@
export BAREOS_WEBUI_CLIENT_NAME=bareos-fd
export BAREOS_WEBUI_RESTOREFILE=${PROJECT_BINARY_DIR}
export BAREOS_WEBUI_LOG_PATH=${logdir}
export BAREOS_WEBUI_DELAY=1
export BAREOS_WEBUI_PUBLIC_DIR=@BAREOS_WEBUI_PUBLIC_DIR@

export PHP_EXECUTABLE="@PHP@"
export PYTHON_EXECUTABLE="@PYTHON_EXECUTABLE@"


# On Windows native builds which allow multiple configurations(Debug/Release),
# the binaries are created in a subdirectory named after the configuration type
# below the corresponding CMAKE_BINARY_DIR
PATH=\
../../../core/src/console/${CMAKE_CONFIG_TYPE}:\
../../../core/src/dird/${CMAKE_CONFIG_TYPE}:\
../../../core/src/filed/${CMAKE_CONFIG_TYPE}:\
../../../core/src/stored/${CMAKE_CONFIG_TYPE}:\
../../../core/src/tests/${CMAKE_CONFIG_TYPE}:\
../../../core/src/tools/${CMAKE_CONFIG_TYPE}:\
../../../core/src/plugins/filed/python/python3modules/${CMAKE_CONFIG_TYPE}:\
../../../core/src/plugins/stored/python/python3modules/${CMAKE_CONFIG_TYPE}:\
../../../core/src/plugins/dird/python/python3modules/${CMAKE_CONFIG_TYPE}:\
$PATH
# Real postgres binaries are hidden on debian, instead there are wrappers
# which we do not want for our tests.
# If there are multiple version, select the first.
if [ -d /usr/lib/postgresql  ]; then
  POSTGRES_BINARY_DIR=$(dirname $(find -L /usr/lib/postgresql -name psql | sort | head -n 1))
else
  if [[ "$(uname -s)" =~ _NT ]]; then
    PG_CYGPATH=$(cygpath "@POSTGRES_BIN_PATH@")
    export PATH="$PG_CYGPATH:$PATH"
  fi
  export PATH=/sbin:/usr/sbin:$PATH
fi
export PYTHONPATH=@pythonpath@

gfapi_fd_host=@gfapi_fd_host@
gfapi_fd_testvolume=@gfapi_fd_testvolume@

dbHost="@dbHost@"
test_db_port=@test_db_port@
# enable deprecated database handling in scripts
export BAREOS_TEST_RUNNING=yes

MINIO=@MINIO@
S3CMD="@S3CMD@"
S3CFG="${current_test_directory}/etc/s3cfg"

SYSTEMTEST_LDAP_ADDRESS="@SYSTEMTEST_LDAP_ADDRESS@"
SYSTEMTEST_LDAP_BASEDN="@SYSTEMTEST_LDAP_BASEDN@"
SYSTEMTEST_LDAP_BINDDN="@SYSTEMTEST_LDAP_BINDDN@"
SYSTEMTEST_LDAP_PASSWORD="@SYSTEMTEST_LDAP_PASSWORD@"

# we need to ensure that an utf-8 locale is used
# C.UTF-8 should hopefully always be available
export LANG=C.UTF-8
export LC_ALL=C.UTF-8

# path to real postgres binaries, NOT debian wrappers
POSTGRES_BIN_PATH="@POSTGRES_BIN_PATH@"


XTRABACKUP_BINARY=@XTRABACKUP_BINARY@
MYSQL_DAEMON_BINARY=@MYSQL_DAEMON_BINARY@
MYSQL_CLIENT_BINARY=@MYSQL_CLIENT_BINARY@
MYSQL_INSTALL_DB_SCRIPT=@MYSQL_INSTALL_DB_SCRIPT@

MARIADB_BACKUP_BINARY=@MARIADB_BACKUP_BINARY@
MARIADB_DAEMON_BINARY=@MARIADB_DAEMON_BINARY@
MARIADB_CLIENT_BINARY=@MARIADB_CLIENT_BINARY@
MARIADB_INSTALL_DB_SCRIPT=@MARIADB_INSTALL_DB_SCRIPT@


SUDO=@SUDO@
IP_ADDRESS_TO_ACCESS_NDMP_DATA_AGENT=@IP_ADDRESS_TO_ACCESS_NDMP_DATA_AGENT@
NDMP_DATA_AGENT_ADDRESS=@ndmp_data_agent_address@

if [ -f environment.local ]; then
  source environment.local
fi
