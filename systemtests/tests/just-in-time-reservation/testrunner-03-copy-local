#!/bin/bash

#   BAREOSÂ® - Backup Archiving REcovery Open Sourced
#
#   Copyright (C) 2024-2025 Bareos GmbH & Co. KG
#
#   This program is Free Software; you can redistribute it and/or
#   modify it under the terms of version three of the GNU Affero General Public
#   License as published by the Free Software Foundation and included
#   in the file LICENSE.
#
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#   Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
#   02110-1301, USA.

set -e
set -o pipefail
set -u

TestName="$(basename "$(pwd)")"
export TestName

#shellcheck source=../../environment.in
. ./environment

runner_name="$(basename "$0")"
runner_tmp="${tmp}/${runner_name}"
mkdir -p "${runner_tmp}"

#shellcheck source=../../scripts/functions
. "${BAREOS_SCRIPTS_DIR}"/functions

copy_log="${runner_tmp}/copy_log.out"
query_results="${runner_tmp}/query_results.out"

start_test

cat <<END_OF_DATA >"$tmp/bconcmds"
@$out ${NULL_DEV}
messages
@$out $copy_log
label volume=CopyVol storage=File2 pool=FullCopy
run copy yes
wait
messages
END_OF_DATA

run_bconsole "$tmp/bconcmds"

expect_grep "Termination:.*Copying OK" \
  "$copy_log" \
  "Copy job did not finish well."

expect_grep "BeforeJob: prevjobid=\*None\* newjobid=\*None\*" \
  "$copy_log" \
  "Before runscript does not return expected previous jobid (%O) and new jobid (%N)."

expect_grep "AfterJob: prevjobid=\*None\* newjobid=\*None\*" \
  "$copy_log" \
  "After runscript does not return expected previous jobid (%O) and new jobid (%N)."

expect_grep "New Backup JobId" \
  "$copy_log" \
  "No new backup jobid was created."

new_job_id=$(grep "New Backup JobId:" "$copy_log" | sed -n -e 's/^.*JobId:[[:space:]]*//p')

expect_grep "Using just in time reservation for job" \
  "$copy_log" \
  "Copy job did not use just in time reservation."

expect_grep "BeforeJob: prevjobid=1 newjobid=${new_job_id}" \
  "$copy_log" \
  "Before runscript does not return expected previous jobid (%O) and new jobid (%N)."

expect_grep "AfterJob: prevjobid=1 newjobid=${new_job_id}" \
  "$copy_log" \
  "After runscript does not return expected previous jobid (%O) and new jobid (%N)."

cat <<END_OF_DATA >"$tmp/bconcmds"
@$out $query_results
sqlquery
SELECT type FROM job WHERE jobid=${new_job_id};
END_OF_DATA

run_bconsole "$tmp/bconcmds"

expect_grep "|.*C.*|" \
  "$query_results" \
  "Copy job does not have the expected type."

check_for_zombie_jobs storage=File

end_test
