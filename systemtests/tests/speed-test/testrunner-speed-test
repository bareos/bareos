#!/bin/bash

set -e
set -o pipefail
set -u

TestName="$(basename "$(pwd)")"
export TestName

#shellcheck source=../environment.in
. ./environment

#shellcheck source=../scripts/functions
. "${rscripts}"/functions

source "defs"

bin/bareos stop
bin/bareos start




start_test

backup_log="$tmp"/backups.out
restore_log="$tmp"/restores.out
consolidate_log="$tmp"/consolidate.out
output="$tmp/output.tsv"

rm -rf "$backup_log" "$consolidate_log" "$output"

printf  "Test\tbackup\trestore\n" > "$output"


for clientoptions in "${ClientOptions[@]}"; do
  echo "$clientoptions" > include/etc/bareos/bareos-dir.d/client/bareos-fd.conf
  clientoptions_filenamecompat=$(tr ',=' '_' <<< $clientoptions)

  for filesetoptions in "${FilesetOptions[@]}"; do
  rm storage/* ||:
  echo $filesetoptions > include/etc/bareos/bareos-dir.d/fileset/default.conf
  filesetoptions_filenamecompat=$(tr ',=' '_' <<< $filesetoptions)
	log="$backup_log-$clientoptions_filenamecompat-$filesetoptions_filenamecompat"
  echo > "$log"
	cat <<END_OF_DATA >"$tmp/bconcmds"
@$out /dev/null
messages
@$out $log
reload
show fileset=Default
delete volume=Full-0103 yes
delete volume=Full-0001 yes
delete volume=Full-0002 yes
run job=backup-bareos-fd level=Full yes
wait
messages
END_OF_DATA
cat "$tmp/bconcmds"
	run_bconsole

	expect_grep "Backup OK" \
		    "$log" \
		    "Backup was not ok."
  ToAdd=$(grep -o "[0-9.]* KB/s" "$log")
	echo "... result: $ToAdd"
	#Data+=("$ToAdd")
  printf "$clientoptions-$filesetoptions\t$ToAdd\t"  >> "$output"

# now restore
	log="$restore_log-$clientoptions_filenamecompat-$filesetoptions_filenamecompat"
  echo > "$log"
  # clean restore dir
  sudo rm -Rvf "$tmp/bareos-restores"
  cat <<END_OF_DATA >"$tmp/bconcmds"
@$out /dev/null
messages
@$out $log
reload
restore client=bareos-fd where=$tmp/bareos-restores select all done yes
wait
messages
END_OF_DATA
	run_bconsole
	expect_grep "Restore OK" \
		    "$log" \
		    "Restore was not ok."
  ToAdd=$(grep -o "[0-9.]* KB/s" "$log")
	echo "... result: $ToAdd"
  printf  "$ToAdd\n"  >> "$output"
done
done
printf "\n\nResults:\n------\n"
cat "${output}"
#column -t -s, "${output}"

end_test
