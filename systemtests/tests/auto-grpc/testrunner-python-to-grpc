#!/bin/bash

#   BAREOSÂ® - Backup Archiving REcovery Open Sourced
#
#   Copyright (C) 2024-2025 Bareos GmbH & Co. KG
#
#   This program is Free Software; you can redistribute it and/or
#   modify it under the terms of version three of the GNU Affero General Public
#   License as published by the Free Software Foundation and included
#   in the file LICENSE.
#
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#   Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
#   02110-1301, USA.

#
# Run a simple grpc backup and then restore it via python
#

set -e
set -o pipefail
set -u

TestName="$(basename "$(pwd)")"
export TestName

JobName=backup-bareos-fd

#shellcheck source=../../environment.in
. ./environment

#shellcheck source=../../scripts/functions
. "${BAREOS_SCRIPTS_DIR}"/functions
#shellcheck source=functions
. functions

start_test

grpc_client="bareos-fd"
python_client="bareos-fd2"

cat <<END_OF_DATA >"$tmp/bconcmds"
@$out ${NULL_DEV}
messages
@$out ${runner_tmp}/create-backup.out
setdebug level=200 client=${python_client} trace=1
run job=$JobName client=${python_client} fileset=PythonTest yes
status director
status client=${python_client}
status storage=File
wait
messages
@$out ${runner_tmp}/jobs.out
list jobs
END_OF_DATA

run_bconsole

check_for_zombie_jobs storage=File client="${python_client}"

expect_grep "Backup OK" \
  "${runner_tmp}/create-backup.out" \
  "Backup was not created correctly."

expect_grep "Client:[[:space:]]*\"${python_client}\"" \
  "${runner_tmp}/create-backup.out" \
  "backup job was ran on wrong client"

res_dir="${runner_tmp:?}/python-restores"

cat <<END_OF_DATA >"$tmp/bconcmds"
@$out ${NULL_DEV}
messages
@$out ${runner_tmp}/restore-setup.out
setdebug level=200 client=${python_client} trace=1
status director
status client=${python_client}
status storage=File
wait
messages
@$out ${runner_tmp}/jobs.out
list jobs
@$out ${runner_tmp}/restore-full.out
restore client=${python_client} restoreclient=${grpc_client} fileset=PythonTest \
 where=${res_dir} select all done yes
wait
messages
END_OF_DATA

run_bconsole
check_for_zombie_jobs storage=File client="${grpc_client}"

expect_grep "Start Restore Job" \
  "${runner_tmp}/restore-full.out" \
  "Required restore job was not started."

expect_grep "Restore Client:[[:space:]]*\"${grpc_client}\"" \
  "${runner_tmp}/restore-full.out" \
  "restore job was ran on wrong client"

expect_grep "Restore OK" \
  "${runner_tmp}/restore-full.out" \
  "Restore job was not successful"

check_restore_diff "${BackupDirectory}" "${res_dir}"

end_test
