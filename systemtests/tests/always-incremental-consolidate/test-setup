#!/bin/bash

#   BAREOSÂ® - Backup Archiving REcovery Open Sourced
#
#   Copyright (C) 2024-2025 Bareos GmbH & Co. KG
#
#   This program is Free Software; you can redistribute it and/or
#   modify it under the terms of version three of the GNU Affero General Public
#   License as published by the Free Software Foundation and included
#   in the file LICENSE.
#
#   This program is distributed in the hope that it will be useful, but
#   WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
#   Affero General Public License for more details.
#
#   You should have received a copy of the GNU Affero General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
#   02110-1301, USA.

#
# Run a full backup, followed by 3 accurate incrementals
# then do a consolidation. The first 3 jobs will got consolidated
# the last incremental is kept
# (job->AlwaysIncrementalKeepNumber default is 1)
#
# Run a batch of 3 incrementals with no files
# Run consolidation : jobid with no files will get purged
#
# Run a batch of 3 incrementals the second with no files
# Then a consolidation: VF and last incremental of first run
# plus first incremental of 3rd run are consolidated when
# 2nd increment with no files is purged
# Last incremental is kept as is.
#

TestName="$(basename "$(pwd)")"
export TestName

JobName=ai-backup-bareos-fd

#shellcheck source=../../environment.in
. ./environment

#shellcheck source=../../scripts/functions
. "${rscripts}"/functions
"${rscripts}"/cleanup
"${rscripts}"/setup

# Fill ${BackupDirectory} with data.
setup_data

bin/bareos start
bin/bareos status

# make sure that the director is up and running.
print_debug "$(bin/bconsole <<<"status dir")"
