#
# Bareos Makefile for the File daemon
#
#

@MCOMMON@

srcdir = @srcdir@
VPATH = @srcdir@
.PATH: @srcdir@

fd_group=@fd_group@

# one up
basedir = ..
# top dir
topdir = ../..
# this dir relative to top dir
thisdir = src/filed

DEBUG=@DEBUG@

GETTEXT_LIBS = @LIBINTL@
OPENSSL_LIBS_NONSHARED = @OPENSSL_LIBS_NONSHARED@
GNUTLS_LIBS_NONSHARED = @GNUTLS_LIBS_NONSHARED@

COMPRESS_CPPFLAGS += @ZLIB_INC@ @LZO_INC@ @FASTLZ_INC@

first_rule: all
dummy:

#
SVRSRCS = accurate.c accurate_htable.c accurate_lmdb.c authenticate.c \
	  backup.c compression.c crypto.c dir_cmd.c estimate.c \
	  fd_plugins.c filed_conf.c filed.c fileset.c heartbeat.c \
	  restore.c sd_cmds.c status.c verify_vol.c verify.c
SVROBJS = $(SVRSRCS:.c=.o)

FDLIBS += @LMDB_LIBS@
FDLIBS += @CAP_LIBS@
FDLIBS += @ZLIB_LIBS_NONSHARED@
FDLIBS += @LZO_LIBS_NONSHARED@
FDLIBS += @FASTLZ_LIBS_NONSHARED@
FDLIBS += @AFS_LIBS_NONSHARED@
FDLIBS += @ACL_LIBS_NONSHARED@
FDLIBS += @XATTR_LIBS_NONSHARED@

INCLUDES += -I$(srcdir) -I$(basedir) -I$(basedir)/include -I$(basedir)/lmdb

.SUFFIXES:	.c .o
.PHONY:
.DONTCARE:

# inference rules
.c.o:
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<
#-------------------------------------------------------------------------
compression.o: compression.c
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(COMPRESS_CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

all: Makefile bareos-fd @STATIC_FD@
	@echo "==== Make of filed is good ===="
	@echo " "

win32/winlib.a:
	@if test -f win32/Makefile -a "${GMAKE}" != "none"; then \
	   (cd win32; $(GMAKE) DESTDIR=$(DESTDIR)); \
	fi
	@rm -f bareos-fd.exe

win32/winmain.o:
	@if test -f win32/Makefile -a "${GMAKE}" != "none"; then \
	   (cd win32; $(GMAKE) DESTDIR=$(DESTDIR)); \
	fi
	@rm -f bareos-fd.exe

win32/winres.res:
	@if test -f win32/Makefile -a "${GMAKE}" != "none"; then \
	   (cd win32; $(GMAKE) DESTDIR=$(DESTDIR)); \
	fi
	@rm -f bareos-fd.exe

bareos-fd: Makefile $(SVROBJS) \
	   ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
	   ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	   ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(WLDFLAGS) $(LDFLAGS) -L../lib -L../findlib -o $@ $(SVROBJS) \
	  $(FDLIBS) -lbareosfind -lbareoscfg -lbareos -lm $(LIBS) \
	  $(DLIB) $(WRAPLIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

static-bareos-fd: Makefile $(SVROBJS) \
		  ../findlib/libbareosfind.a \
		  ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
		  ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(WLDFLAGS) $(LDFLAGS) -static -L../lib -L../findlib -o $@ $(SVROBJS) \
	   $(FDLIBS) -lbareosfind -lbareoscfg -lbareos -lm $(LIBS) \
	   $(DLIB) $(WRAPLIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS) $(GNUTLS_LIBS)
	strip $@

Makefile: $(srcdir)/Makefile.in $(topdir)/config.status
	cd $(topdir) \
	  && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libtool-clean:
	@$(RMF) -r .libs _libs

clean:	libtool-clean
	@$(RMF) bareos-fd filed core core.* a.out *.o *.bak *~ *.intpro *.extpro 1 2 3
	@$(RMF) static-bareos-fd
	@if test -f win32/Makefile -a "${GMAKE}" != "none"; then \
	   (cd win32; $(GMAKE) clean); \
	fi

realclean: clean
	@$(RMF) tags bareos-fd.conf

distclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)
	@if test -f win32/Makefile -a "${GMAKE}" != "none"; then \
	   (cd win32; $(GMAKE) distclean); \
	fi

devclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)
	@if test -f win32/Makefile -a "${GMAKE}" != "none"; then \
	   (cd win32; $(GMAKE) devclean); \
	fi

install: all
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bareos-fd $(DESTDIR)$(sbindir)/bareos-fd
	@srcconf=bareos-fd.conf; \
	if  test -f ${DESTDIR}${sysconfdir}/$$srcconf; then \
	   destconf=$$srcconf.new; \
	   echo "  ==> Found existing $$srcconf, installing new conf file as $$destconf"; \
	else \
	   destconf=$$srcconf; \
	fi; \
	echo "${INSTALL_CONFIG} $$srcconf ${DESTDIR}${sysconfdir}/$$destconf"; \
	${INSTALL_CONFIG} $$srcconf ${DESTDIR}${sysconfdir}/$$destconf
	-@if test "x${fd_group}" != "x"; then \
	   chgrp -f ${fd_group} ${DESTDIR}${sysconfdir}/$$destconf ; \
	fi
	@if test -f static-bareos-fd; then \
	   $(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) static-bareos-fd $(DESTDIR)$(sbindir)/static-bareos-fd; \
	fi

# Semi-automatic generation of dependencies:
# Use gcc -MM because X11 `makedepend' doesn't work on all systems
# and it also includes system headers.
# `semi'-automatic since dependencies are generated at distribution time.

depend:
	@$(MV) Makefile Makefile.bak
	@$(SED) "/^# DO NOT DELETE:/,$$ d" Makefile.bak > Makefile
	@$(ECHOCMD) "# DO NOT DELETE: nice dependency list follows" >> Makefile
	@$(CXX) -S -M $(CPPFLAGS) $(XINC) $(INCLUDES) *.c >> Makefile
	@if test -f Makefile ; then \
	    $(RMF) Makefile.bak; \
	else \
	   $(MV) Makefile.bak Makefile; \
	   echo " ===== Something went wrong in make depend ====="; \
	fi

# -----------------------------------------------------------------------
# DO NOT DELETE: nice dependency list follows
