#
# Bareos Tools Makefile
#
@MCOMMON@

srcdir = @srcdir@
VPATH = @srcdir@
.PATH: @srcdir@

# one up
basedir = ..
# top dir
topdir = ../..
# this dir relative to top dir
thisdir = src/tools

DEBUG=@DEBUG@
ZLIB_INC=@ZLIB_INC@
LZO_INC=@LZO_INC@

first_rule: all
dummy:

GETTEXT_LIBS = @LIBINTL@
OPENSSL_LIBS_NONSHARED = @OPENSSL_LIBS_NONSHARED@
GNUTLS_LIBS_NONSHARED = @GNUTLS_LIBS_NONSHARED@

TOOLS = bsmtp drivetype fstype bregex bwild bpluginfo bscrypto timelimit
TOOLS_BIN = bsmtp bwild bregex
TOOLS_SBIN = bpluginfo bscrypto

INCLUDES += -I$(srcdir) -I$(basedir) -I$(basedir)/include

.SUFFIXES:	.c .o
.PHONY:
.DONTCARE:

# inference rules
.c.o:
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<
#-------------------------------------------------------------------------
all: Makefile $(TOOLS)
	@echo "==== Make of tools is good ===="
	@echo " "

bsmtp: Makefile bsmtp.o ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L../lib -o $@ bsmtp.o -lbareos -lm $(DLIB) $(LIBS) \
	$(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

fstype: Makefile fstype.o \
	../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L../lib -L../findlib -o $@ fstype.o -lbareosfind -lbareos -lm \
	  $(DLIB) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

drivetype: Makefile drivetype.o \
	../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L../lib -L../findlib -o $@ drivetype.o -lbareosfind -lbareos -lm \
	  $(DLIB) $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

bregex: Makefile bregex.o \
	../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
	../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -L../lib -o $@ bregex.o \
	  $(DLIB) -lbareos -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

bwild:	Makefile bwild.o ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -L../lib -o $@ bwild.o \
	  $(DLIB) -lbareos -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

bscrypto: Makefile bscrypto.o ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L. -L../lib -o $@ bscrypto.o \
	  $(DLIB) -lbareos -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

bpluginfo.o: bpluginfo.c
	@echo "Compiling $<"
	$(CXX) $(DEFS) $(DEBUG) -c $(CPPFLAGS) $(INCLUDES) -I../filed -I../dird -I../stored $(DINCLUDE) $(CFLAGS) $<

bpluginfo: Makefile bpluginfo.o ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L../lib -o $@ bpluginfo.o -lbareos $(LIBS) \
	$(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

timelimit.o: timelimit.c
	@echo "Compiling $<"
	${CC} ${DEFS} ${DEBUG} $(CFLAGS) -DHAVE_ERRNO_H -DHAVE_SETITIMER -DHAVE_SIGACTION -c timelimit.c

timelimit: timelimit.o
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CC) $(LDFLAGS) -o $@ timelimit.o

Makefile: $(srcdir)/Makefile.in $(topdir)/config.status
	cd $(topdir) \
	  && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libtool-clean:
	@$(RMF) -r .libs _libs

clean:	libtool-clean
	@$(RMF) bsmtp core core.* a.out *.o *.bak *~ *.intpro *.extpro 1 2 3
	@$(RMF) $(TOOLS)

realclean: clean
	@$(RMF) tags

distclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

devclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

installall: $(TOOLS)
	@for tool in ${TOOLS} ; do \
	   $(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) $$tool $(DESTDIR)$(sbindir)/$$tool ; \
	done
	chmod 755 $(DESTDIR)$(sbindir)/bsmtp

installbin: $(TOOLS_BIN)
	$(MKDIR) $(DESTDIR)$(bindir)
	$(MKDIR) $(DESTDIR)$(sbindir)
	@for tool in ${TOOLS_BIN} ; do \
	   $(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) $$tool $(DESTDIR)$(bindir)/$$tool ; \
	   if ! [ -r $(DESTDIR)$(sbindir)/$$tool ]; then $(SYMLINK) $(bindir)/$$tool $(DESTDIR)$(sbindir)/$$tool; fi; \
	done
	# Allow non-root execution of bsmtp for non-root Directors
	chmod 755 $(DESTDIR)$(bindir)/bsmtp

installsbin: $(TOOLS_SBIN)
	$(MKDIR) $(DESTDIR)$(sbindir)
	@for tool in ${TOOLS_SBIN} ; do \
	   $(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) $$tool $(DESTDIR)$(sbindir)/$$tool ; \
	done

install: installbin installsbin

# Semi-automatic generation of dependencies:
# Use gcc -MM because X11 `makedepend' doesn't work on all systems
# and it also includes system headers.
# `semi'-automatic since dependencies are generated at distribution time.

depend:
	@$(MV) Makefile Makefile.bak
	@$(SED) "/^# DO NOT DELETE:/,$$ d" Makefile.bak > Makefile
	@$(ECHOCMD) "# DO NOT DELETE: nice dependency list follows" >> Makefile
	@$(CXX) -S -M $(CPPFLAGS) $(INCLUDES) -I../filed -I../dird -I../stored *.c >> Makefile
	@if test -f Makefile ; then \
	    $(RMF) Makefile.bak; \
	else \
	   $(MV) Makefile.bak Makefile; \
	   echo " ===== Something went wrong in make depend ====="; \
	fi

# -----------------------------------------------------------------------
# DO NOT DELETE: nice dependency list follows
