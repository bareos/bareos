#

@MCOMMON@

LIBTOOL_TAG = CC

# Define library versions
LIBBAREOSLMDB_LT_RELEASE = @LIBBAREOSLMDB_LT_RELEASE@

srcdir = @srcdir@
VPATH = @srcdir@
.PATH: @srcdir@

# one up
basedir = ..
# top dir
topdir = ../..
# this dir relative to top dir
thisdir = src/lmdb

DEBUG = @DEBUG@

first_rule: all
dummy:

#
# include files installed when using libtool
#
INCLUDE_FILES = lmdb.h midl.h

#
# libbareoslmdb
#
LIBBAREOSLMDB_SRCS = mdb.c midl.c
LIBBAREOSLMDB_OBJS = $(LIBBAREOSLMDB_SRCS:.c=.o)
LIBBAREOSLMDB_LOBJS = $(LIBBAREOSLMDB_SRCS:.c=.lo)

INCLUDES += -I. -I$(srcdir) -I$(basedir) -I$(basedir)/include

.SUFFIXES:	.c .cc .o .lo .ch .dvi .pdf .tex .view .w .1
.PHONY:
.DONTCARE:

# inference rules
.c.o:
	@echo "Compiling $<"
	$(NO_ECHO)$(CC) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CFLAGS) $<

.c.lo:
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CC) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CFLAGS) $<

.cc.o:
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

.cc.lo:
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

#-------------------------------------------------------------------------
all: Makefile libbareoslmdb$(DEFAULT_ARCHIVE_TYPE)
	@echo "==== Make of lib is good ===="
	@echo " "

libbareoslmdb.a: $(LIBBAREOSLMDB_OBJS)
	@echo "Making $@ ..."
	$(AR) rc  $@ $(LIBBAREOSLMDB_OBJS)
	$(RANLIB) $@

libbareoslmdb.la: Makefile $(LIBBAREOSLMDB_LOBJS)
	@echo "Making $@ ..."
	$(LIBTOOL_LINK) $(CC) $(DEFS) $(DEBUG) $(LDFLAGS) -o $@ $(LIBBAREOSLMDB_LOBJS) -export-dynamic -rpath $(libdir) -release $(LIBBAREOSLMDB_LT_RELEASE) $(LIBS)

Makefile: $(srcdir)/Makefile.in $(topdir)/config.status
	cd $(topdir) \
	  && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

install-includes:
	$(MKDIR) $(DESTDIR)/$(includedir)/bareos/lmdb
	for I in $(INCLUDE_FILES); do \
	   $(INSTALL_DATA) $$I $(DESTDIR)$(includedir)/bareos/lmdb/`basename $$I`; \
	done

libtool-install: all
	$(MKDIR) $(DESTDIR)$(libdir)
	$(RMF) $(DESTDIR)$(libdir)/libbareoslmdb-*.so $(DESTDIR)$(libdir)/libbareoslmdb.la
	$(LIBTOOL_INSTALL_FINISH) $(INSTALL_LIB) libbareoslmdb.la $(DESTDIR)$(libdir)

install: @LIBTOOL_INSTALL_TARGET@ @INCLUDE_INSTALL_TARGET@

libtool-clean:
	@find . -name '*.lo' -print | xargs $(LIBTOOL_CLEAN) $(RMF)
	@$(RMF) *.la
	@$(RMF) -r .libs _libs

clean:	libtool-clean
	@$(RMF) core a.out *.o *.bak *.tex *.pdf *~ *.intpro *.extpro 1 2 3

realclean: clean
	@$(RMF) tags

distclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

# Semi-automatic generation of dependencies:
# # Use cc -M because X11 `makedepend' doesn't work on all systems
# # and it also includes system headers.
# # `semi'-automatic since dependencies are generated at distribution time.

depend:
	@$(MV) Makefile Makefile.bak
	@$(SED) "/^# DO NOT DELETE:/,$$ d" Makefile.bak > Makefile
	@$(ECHOCMD) "# DO NOT DELETE: nice dependency list follows" >> Makefile
	@for src in $(LIBBAREOSLMDB_SRCS) ; do \
	   $(CC) -S -M -MT `basename $$src .c`$(DEFAULT_OBJECT_TYPE) $(CPPFLAGS) $(XINC) $(INCLUDES) $$src >> Makefile; \
        done
	@if test -f Makefile ; then \
	   $(RMF) Makefile.bak; \
	else \
	   $(MV) Makefile.bak Makefile; \
	   echo " ======= Something went wrong with make depend. ======="; \
	fi

# -----------------------------------------------------------------------
#  # DO NOT DELETE: nice dependency list follows
