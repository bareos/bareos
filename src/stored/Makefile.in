#
@MCOMMON@

srcdir = @srcdir@
VPATH = @srcdir@:backends
.PATH: @srcdir@

sd_group=@sd_group@

# one up
basedir = ..
# top dir
topdir = ../..
# this dir relative to top dir
thisdir = src/stored

DEBUG = @DEBUG@
GETTEXT_LIBS = @LIBINTL@
DB_LIBS = @DB_LIBS@
AFS_LIBS = @AFS_LIBS_NONSHARED@
ACL_LIBS = @ACL_LIBS_NONSHARED@
XATTR_LIBS = @XATTR_LIBS_NONSHARED@
COMPRESS_LIBS = @ZLIB_LIBS_NONSHARED@ @LZO_LIBS_NONSHARED@ @FASTLZ_LIBS_NONSHARED@
OPENSSL_LIBS_NONSHARED = @OPENSSL_LIBS_NONSHARED@
GNUTLS_LIBS_NONSHARED = @GNUTLS_LIBS_NONSHARED@

first_rule: all
dummy:

AVAILABLE_DEVICE_API_SRCS = cephfs_device.c \
			    chunked_device.c \
			    droplet_device.c \
			    elasto_device.c \
			    generic_tape_device.c \
			    gfapi_device.c \
			    rados_device.c \
			    unix_fifo_device.c \
			    unix_tape_device.c
NEEDED_DEVICE_API_SRCS = unix_file_device.c @NEEDED_DEVICE_API_SRCS@

CEPHFS_LIBS = @CEPHFS_LIBS@
ELASTO_LIBS = @ELASTO_LIBS@
DROPLET_LIBS = @DROPLET_LIBS@
GLUSTER_LIBS = @GLUSTER_LIBS@
RADOS_LIBS = @RADOS_STRIPER_LIBS@ @RADOS_LIBS@
AVAILABLE_BACKEND_LIBS = $(CEPHFS_LIBS) $(ELASTO_LIBS) $(DROPLET_LIBS) $(GLUSTER_LIBS) $(RADOS_LIBS)
LIBS += @NEEDED_BACKEND_LIBS@

# objects used in all daemons collected in (shared) library.
LIBBAREOSSD_SRCS = acquire.c ansi_label.c askdir.c autochanger.c block.c bsr.c \
		   butil.c crc32.c dev.c device.c ebcdic.c label.c lock.c \
		   mount.c read_record.c record.c reserve.c scan.c \
		   sd_backends.c sd_plugins.c sd_stats.c spool.c \
		   stored_conf.c vol_mgr.c wait.c $(NEEDED_DEVICE_API_SRCS)
LIBBAREOSSD_OBJS = $(LIBBAREOSSD_SRCS:.c=.o)
LIBBAREOSSD_LOBJS = $(LIBBAREOSSD_SRCS:.c=.lo)
LIBBAREOSSD_LT_RELEASE = @LIBBAREOSSD_LT_RELEASE@

# bareos-sd
SDSRCS = append.c askdir.c authenticate.c dir_cmd.c fd_cmds.c job.c mac.c ndmp_tape.c \
         read.c sd_cmds.c sd_stats.c socket_server.c status.c stored.c
SDOBJS = $(SDSRCS:.c=.o)

# btape
TAPESRCS = btape.c
TAPEOBJS = $(TAPESRCS:.c=.o)

# bls
BLSSRCS = bls.c
BLSOBJS = $(BLSSRCS:.c=.o)

# bextract
BEXTSRCS = bextract.c
BEXTOBJS = $(BEXTSRCS:.c=.o)

# bscan
SCNSRCS = bscan.c
SCNOBJS = $(SCNSRCS:.c=.o)

# bcopy
COPYSRCS = bcopy.c
COPYOBJS = $(COPYSRCS:.c=.o)

SD_LIBS += @CAP_LIBS@
BEXTRACT_LIBS += @ZLIB_LIBS_NONSHARED@
BEXTRACT_LIBS += @LZO_LIBS_NONSHARED@
BEXTRACT_LIBS += @FASTLZ_LIBS_NONSHARED@

CEPHFS_INC = @CEPHFS_INC@
ELASTO_INC = @ELASTO_INC@
DROPLET_INC = @DROPLET_INC@
GLUSTER_INC = @GLUSTER_INC@
RADOS_INC = @RADOS_INC@
INCLUDES += -I$(srcdir) -I$(basedir) -I$(basedir)/include

JANSSON_CPPFLAGS = @JANSSON_INC@

DEBUG = @DEBUG@
GETTEXT_LIBS = @LIBINTL@
DB_LIBS = @DB_LIBS@
ACL_LIBS = @ACL_LIBS@
XATTR_LIBS = @XATTR_LIBS@
NDMP_LIBS = @NDMP_LIBS@

STORED_RESTYPES = autochanger device director ndmp messages storage

.SUFFIXES:	.c .o .lo
.PHONY:
.DONTCARE:

# inference rules
.c.o:
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

.c.lo:
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

#-------------------------------------------------------------------------

all: Makefile libbareossd$(DEFAULT_ARCHIVE_TYPE) bareos-sd @STATIC_SD@ bls bextract bscan btape bcopy
	@echo "===== Make of stored is good ===="
	@echo " "

libbareossd.a: $(LIBBAREOSSD_OBJS)
	@echo "Making $@ ..."
	$(AR) rc $@ $(LIBBAREOSSD_OBJS)
	$(RANLIB) $@

libbareossd.la: Makefile $(LIBBAREOSSD_LOBJS)
	@echo "Making $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(DEFS) $(DEBUG) $(LDFLAGS) -L../lib -o $@ $(LIBBAREOSSD_LOBJS) -export-dynamic -rpath $(libdir) -release $(LIBBAREOSSD_LT_RELEASE) -lbareos -lbareoscfg

dev.lo: dev.c
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CEPHFS_INC) $(ELASTO_INC) $(GLUSTER_INC) $(DROPLET_INC) $(RADOS_INC) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

cephfs_device.lo: cephfs_device.c
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(CEPHFS_INC) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

droplet_device.lo: droplet_device.c
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(DROPLET_INC) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

elasto_device.lo: elasto_device.c
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(ELASTO_INC) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

gfapi_device.lo: gfapi_device.c
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(GLUSTER_INC) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

rados_device.lo: rados_device.c
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) $(RADOS_INC) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

stored_conf.o: stored_conf.c
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(JANSSON_CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

stored_conf.lo: stored_conf.c
	@echo "Compiling $<"
	$(NO_ECHO)$(LIBTOOL_COMPILE) $(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(JANSSON_CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

bareos-sd: Makefile libbareossd$(DEFAULT_ARCHIVE_TYPE) $(SDOBJS) \
	   ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	   ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	   @NDMP_DEPS@
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(WLDFLAGS) $(LDFLAGS) -L. -L../lib -o $@ $(SDOBJS) \
	   $(NDMP_LIBS) -lbareossd -lbareoscfg -lbareos -lm $(DLIB) $(LIBS) $(WRAPLIBS) \
	   $(SD_LIBS) $(GETTEXT_LIBS) $(COMPRESS_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

static-bareos-sd: Makefile libbareossd$(DEFAULT_ARCHIVE_TYPE) $(SDOBJS) \
	          ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	          ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	          @NDMP_DEPS@
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(WLDFLAGS) $(LDFLAGS) -static -L. -L../lib -o $@ $(SDOBJS) \
	   $(NDMP_LIBS) -lbareossd -lbareoscfg -lbareos -lm $(DLIB) $(LIBS) $(WRAPLIBS) \
	   $(SD_LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS) $(GNUTLS_LIBS) $(COMPRESS_LIBS)
	strip $@

ndmp_tape.o: ndmp_tape.c
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) -I../lib $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

btape: Makefile libbareossd$(DEFAULT_ARCHIVE_TYPE) $(TAPEOBJS) \
       ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
       ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L. -L../lib -o $@ $(TAPEOBJS) \
	   -lbareossd -lbareoscfg -lbareos $(DLIB) -lm $(LIBS) $(GETTEXT_LIBS) \
	   $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

bls: Makefile libbareossd$(DEFAULT_ARCHIVE_TYPE) $(BLSOBJS) \
     ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
     ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
     ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L. -L../lib -L../findlib -o $@ $(BLSOBJS) $(DLIB) \
	   -lbareossd -lbareosfind -lbareoscfg -lbareos -lm $(LIBS) $(GETTEXT_LIBS) \
	   $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

bextract: Makefile libbareossd$(DEFAULT_ARCHIVE_TYPE) $(BEXTOBJS) \
          ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
	  ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
          ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L. -L../lib -L../findlib -o $@ $(BEXTOBJS) $(DLIB) \
	   -lbareossd -lbareosfind -lbareoscfg -lbareos -lm $(LIBS) $(SD_LIBS) $(BEXTRACT_LIBS) \
	   $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

bscan:	Makefile libbareossd$(DEFAULT_ARCHIVE_TYPE) $(SCNOBJS) \
        ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
	../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	../cats/libbareossql$(DEFAULT_ARCHIVE_TYPE) \
	../cats/libbareoscats$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L. -L../lib -L../cats -L../findlib -o $@ $(SCNOBJS) \
	   -lbareossql -lbareoscats $(DB_LIBS) -lbareossd -lbareosfind -lbareoscfg -lbareos -lm $(LIBS) $(SD_LIBS) \
	   $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

bcopy:	Makefile libbareossd$(DEFAULT_ARCHIVE_TYPE) $(COPYOBJS) \
	../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(TTOOL_LDFLAGS) $(LDFLAGS) -L. -L../lib -o $@ $(COPYOBJS) \
	   -lbareossd -lbareoscfg -lbareos -lm $(LIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

Makefile: $(srcdir)/Makefile.in $(topdir)/config.status
	cd $(topdir) \
	  && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libtool-install: all
	$(MKDIR) $(DESTDIR)$(libdir)
	$(RMF) $(DESTDIR)$(libdir)/libbareossd-[0-9]*.so $(DESTDIR)$(libdir)/libbareossd.la
	$(LIBTOOL_INSTALL_FINISH) $(INSTALL_LIB) libbareossd.la $(DESTDIR)$(libdir)

install: all @LIBTOOL_INSTALL_TARGET@
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bareos-sd $(DESTDIR)$(sbindir)/bareos-sd
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bls $(DESTDIR)$(sbindir)/bls
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bextract $(DESTDIR)$(sbindir)/bextract
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bcopy $(DESTDIR)$(sbindir)/bcopy
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bscan $(DESTDIR)$(sbindir)/bscan
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) btape $(DESTDIR)$(sbindir)/btape
	# copy configuration resource files to directory structure
	@SRCCONFDIR=../defaultconfigs/bareos-sd.d/; \
	DESTCONFDIR=${DESTDIR}${confdir}/bareos-sd.d/; \
	echo "installing configuration resource files to $$DESTCONFDIR"; \
	$(MKDIR) $$DESTCONFDIR; \
	for RESTYPE in $(STORED_RESTYPES); do \
	   $(MKDIR) "$$DESTCONFDIR/$$RESTYPE"; \
	   for f in $$SRCCONFDIR/$$RESTYPE/*.conf $$SRCCONFDIR/$$RESTYPE/*.conf.example; do \
	      if test -f "$$f"; then \
	         RESDIR="$$DESTCONFDIR/$$RESTYPE"; \
	         RES=`basename "$$f"`; \
	         if test -f "$$RESDIR/$$RES"; then \
	            destconf="$$RESDIR/$$RES.new"; \
	            echo "    $$RESTYPE/$$RES as \"$$destconf\" (keep existing)"; \
	         else \
	            destconf="$$RESDIR/$$RES"; \
	            echo "    $$RESTYPE/$$RES as \"$$destconf\""; \
	         fi; \
	         ${INSTALL_CONFIG} "$$f" "$$destconf"; \
	         if test "x${sd_group}" != "x"; then \
	            chgrp -f ${sd_group} $$destconf || true; \
	         fi; \
	      fi; \
	   done; \
	done
	@if test -f static-bareos-sd; then \
	   $(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) static-bareos-sd $(DESTDIR)$(sbindir)/static-bareos-sd; \
	fi

libtool-clean:
	@find . -name '*.lo' -print | xargs $(LIBTOOL_CLEAN) $(RMF)
	@$(RMF) *.la
	@$(RMF) -r .libs _libs

clean:	libtool-clean
	@$(RMF) bareos-sd stored bls bextract bpool btape shmfree core core.* a.out *.o *.bak *~ *.intpro *.extpro 1 2 3
	@$(RMF) bscan bcopy static-bareos-sd

realclean: clean
	@$(RMF) tags bareos-sd.conf

distclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

devclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

# Semi-automatic generation of dependencies:
# Use cc -M because X11 `makedepend' doesn't work on all systems
# and it also includes system headers.
# `semi'-automatic since dependencies are generated at distribution time.

depend:
	@$(MV) Makefile Makefile.bak
	@$(SED) "/^# DO NOT DELETE:/,$$ d" Makefile.bak > Makefile
	@$(ECHOCMD) "# DO NOT DELETE: nice dependency list follows" >> Makefile
	@$(CXX) -S -M $(CPPFLAGS) $(XINC) $(INCLUDES) *.c >> Makefile
	@if test -f Makefile ; then \
	    $(RMF) Makefile.bak; \
	else \
	   $(MV) Makefile.bak Makefile; \
	   echo " ======= Something went wrong with make depend. ======="; \
	fi

# -----------------------------------------------------------------------
# DO NOT DELETE: nice dependency list follows
