#
#  Bareos Director Makefile
#
@MCOMMON@

srcdir = @srcdir@
VPATH = @srcdir@
.PATH: @srcdir@

dir_group=@dir_group@

# one up
basedir = ..
# top dir
topdir = ../..
# this dir relative to top dir
thisdir = src/dird

DEBUG=@DEBUG@

GETTEXT_LIBS = @LIBINTL@
CAP_LIBS = @CAP_LIBS@
NDMP_LIBS = @NDMP_LIBS@
DB_LIBS=@DB_LIBS@
LMDB_LIBS=@LMDB_LIBS@

PAM_LIBS_NONSHARED = @PAM_LIBS_NONSHARED@
OPENSSL_LIBS_NONSHARED = @OPENSSL_LIBS_NONSHARED@
GNUTLS_LIBS_NONSHARED = @GNUTLS_LIBS_NONSHARED@

first_rule: all
dummy:

SVRSRCS = admin.c archive.c authenticate.c autoprune.c backup.c bsr.c catreq.c \
	  consolidate.c dir_plugins.c dird_conf.c dird.c expand.c fd_cmds.c \
	  getmsg.c inc_conf.c job.c jobq.c migrate.c mountreq.c msgchan.c \
	  ndmp_dma_backup.c ndmp_dma_generic.c ndmp_dma_restore.c \
	  ndmp_dma_storage.c ndmp_fhdb_helpers.c ndmp_fhdb_mem.c ndmp_fhdb_lmdb.c \
	  newvol.c next_vol.c quota.c socket_server.c recycle.c restore.c \
	  run_conf.c sd_cmds.c scheduler.c stats.c storage.c ua_acl.c ua_audit.c \
	  ua_cmds.c ua_configure.c ua_db.c ua_dotcmds.c ua_input.c ua_impexp.c \
	  ua_label.c ua_output.c ua_prune.c ua_purge.c ua_query.c ua_restore.c \
	  ua_run.c ua_select.c ua_server.c ua_status.c ua_tree.c ua_update.c \
	  vbackup.c verify.c
SVROBJS = $(SVRSRCS:.c=.o)

DBCHKSRCS = dbcheck.c dird_conf.c ua_acl.c ua_audit.c run_conf.c inc_conf.c
DBCHKOBJS = $(DBCHKSRCS:.c=.o)

TSTFNDSRCS = testfind.c dird_conf.c ua_acl.c ua_audit.c run_conf.c inc_conf.c
TSTFNDOBJS = $(TSTFNDSRCS:.c=.o)

INCLUDES += -I$(srcdir) -I$(basedir) -I$(basedir)/include -I$(basedir)/lmdb -I$(basedir)/ndmp

JANSSON_CPPFLAGS = @JANSSON_INC@

DIRD_RESTYPES = catalog client console counter director fileset job jobdefs messages pool profile schedule storage

.SUFFIXES:	.c .o
.PHONY:
.DONTCARE:

# inference rules
.c.o:
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<
#-------------------------------------------------------------------------
all: Makefile bareos-dir bareos-dbcheck @STATIC_DIR@
	@echo "==== Make of dird is good ===="
	@echo " "

dird_conf.o: dird_conf.c
	@echo "Compiling $<"
	$(NO_ECHO)$(CXX) $(DEFS) $(DEBUG) -c $(WCFLAGS) $(CPPFLAGS) $(JANSSON_CPPFLAGS) $(INCLUDES) $(DINCLUDE) $(CXXFLAGS) $<

bareos-dir: Makefile $(SVROBJS) \
	    ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	    ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	    ../cats/libbareossql$(DEFAULT_ARCHIVE_TYPE) \
	    ../cats/libbareoscats$(DEFAULT_ARCHIVE_TYPE) \
	    ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
	    @NDMP_DEPS@
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(WLDFLAGS) $(LDFLAGS) -L../lib -L../cats -L../findlib -o $@ $(SVROBJS) \
	      $(NDMP_LIBS) -lbareosfind -lbareossql -lbareoscats -lbareoscfg -lbareos -lm $(DLIB) \
	      $(DB_LIBS) $(LIBS) $(WRAPLIBS) $(GETTEXT_LIBS) $(CAP_LIBS) \
	      $(PAM_LIBS_NONSHARED) $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED) $(LMDB_LIBS)

bareos-dbcheck: Makefile $(DBCHKOBJS) \
	 ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	 ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
	 ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	 ../cats/libbareossql$(DEFAULT_ARCHIVE_TYPE) \
	 ../cats/libbareoscats$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L../lib -L../findlib -L../cats -o $@ $(DBCHKOBJS) \
	      -lbareoscats -lbareossql -lbareoscfg -lbareosfind -lbareos -lm $(DB_LIBS) $(LIBS) $(GETTEXT_LIBS) \
	      $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

testfind: Makefile $(TSTFNDOBJS) \
	 ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	 ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
	 ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	 ../cats/libbareossql$(DEFAULT_ARCHIVE_TYPE) \
	 ../cats/libbareoscats$(DEFAULT_ARCHIVE_TYPE)
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(LDFLAGS) -L../lib -L../findlib -L../cats -o $@ $(TSTFNDOBJS) \
	      -lbareoscats -lbareossql -lbareoscfg -lbareosfind -lbareos -lm $(DB_LIBS) $(LIBS) $(GETTEXT_LIBS) \
	      $(OPENSSL_LIBS_NONSHARED) $(GNUTLS_LIBS_NONSHARED)

static-bareos-dir:  Makefile $(SVROBJS) \
	            ../lib/libbareos$(DEFAULT_ARCHIVE_TYPE) \
	            ../lib/libbareoscfg$(DEFAULT_ARCHIVE_TYPE) \
	            ../cats/libbareossql$(DEFAULT_ARCHIVE_TYPE) \
	            ../cats/libbareoscats$(DEFAULT_ARCHIVE_TYPE) \
	            ../findlib/libbareosfind$(DEFAULT_ARCHIVE_TYPE) \
	            @NDMP_DEPS@
	@echo "Linking $@ ..."
	$(LIBTOOL_LINK) $(CXX) $(WLDFLAGS) $(LDFLAGS) -static -L../lib -L../cats -L../findlib -o $@ $(SVROBJS) \
	      $(NDMP_LIBS) -lbareosfind -lbareossql -lbareoscats -lbareoscfg -lbareos -lm $(DLIB) $(DB_LIBS) $(LIBS) \
	      $(WRAPLIBS) $(GETTEXT_LIBS) $(OPENSSL_LIBS) $(GNUTLS_LIBS) $(CAP_LIBS)
	strip $@

Makefile: $(srcdir)/Makefile.in $(topdir)/config.status
	cd $(topdir) \
	  && CONFIG_FILES=$(thisdir)/$@ CONFIG_HEADERS= $(SHELL) ./config.status

libtool-clean:
	@$(RMF) -r .libs _libs

clean:	libtool-clean
	@$(RMF) dird bareos-dir static-bareos-dir bareos-dbcheck
	@$(RMF) core core.* a.out *.o *.bak *~ *.intpro *.extpro 1 2 3

realclean: clean
	@$(RMF) tags bareos-dir.conf

distclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

devclean: realclean
	if test $(srcdir) = .; then $(MAKE) realclean; fi
	(cd $(srcdir); $(RMF) Makefile)

install: all
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bareos-dir $(DESTDIR)$(sbindir)/bareos-dir
	$(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) bareos-dbcheck $(DESTDIR)$(sbindir)/bareos-dbcheck
	# copy configuration resource files to directory structure
	@SRCCONFDIR=../defaultconfigs/bareos-dir.d/; \
	DESTCONFDIR=${DESTDIR}${confdir}/bareos-dir.d/; \
	echo "installing configuration resource files to $$DESTCONFDIR"; \
	$(MKDIR) $$DESTCONFDIR; \
	for RESTYPE in $(DIRD_RESTYPES); do \
	   $(MKDIR) "$$DESTCONFDIR/$$RESTYPE"; \
	   for f in $$SRCCONFDIR/$$RESTYPE/*.conf; do \
	      if test -f "$$f"; then \
	         RESDIR="$$DESTCONFDIR/$$RESTYPE"; \
	         RES=`basename "$$f"`; \
	         if test -f "$$RESDIR/$$RES"; then \
	            destconf="$$RESDIR/$$RES.new"; \
	            echo "    $$RESTYPE/$$RES as \"$$destconf\" (keep existing)"; \
	         else \
	            destconf="$$RESDIR/$$RES"; \
	            echo "    $$RESTYPE/$$RES as \"$$destconf\""; \
	         fi; \
	         ${INSTALL_CONFIG} "$$f" "$$destconf"; \
	         if test "x${dir_group}" != "x"; then \
	            chgrp -f ${dir_group} $$destconf || true; \
	         fi; \
	      fi; \
	   done; \
	done
	$(MKDIR) ${DESTDIR}${confdir}/bareos-dir-export/client/
	@if  test -f ${DESTDIR}${scriptdir}/query.sql; then \
	   echo "  ==> Saving existing query.sql to query.sql.old"; \
	   $(MV) -f ${DESTDIR}${scriptdir}/query.sql ${DESTDIR}${scriptdir}/query.sql.old; \
	fi
	${INSTALL_DATA} query.sql ${DESTDIR}${scriptdir}/query.sql
	@if test -f static-bareos-dir; then \
	   $(LIBTOOL_INSTALL) $(INSTALL_PROGRAM) static-bareos-dir $(DESTDIR)$(sbindir)/static-bareos-dir; \
	fi

# Semi-automatic generation of dependencies:
# Use gcc -MM because X11 `makedepend' doesn't work on all systems
# and it also includes system headers.
# `semi'-automatic since dependencies are generated at distribution time.

depend:
	@$(MV) Makefile Makefile.bak
	@$(SED) "/^# DO NOT DELETE:/,$$ d" Makefile.bak > Makefile
	@$(ECHOCMD) "# DO NOT DELETE: nice dependency list follows" >> Makefile
	@$(CXX) -S -M $(CPPFLAGS) $(XINC) $(INCLUDES) *.c >> Makefile
	@if test -f Makefile ; then \
	    $(RMF) Makefile.bak; \
	else \
	   $(MV) Makefile.bak Makefile; \
	   echo " ===== Something went wrong in make depend ====="; \
	fi

# -----------------------------------------------------------------------
# DO NOT DELETE: nice dependency list follows
