#! /bin/sh
#
# bareos       This shell script takes care of starting and stopping
#	       the bareos Director daemon
#
# chkconfig: 2345 90 9
# description: Backup Archiving REcovery Open Sourced.
#
#  For Bareos release @VERSION@ (@DATE@) -- @DISTNAME@
# Copyright (C) 2011 Free Software Foundation Europe e.V.
# Modified to work on SuSE 1/31/2004 D. Scott Barninger <barninger at fairfieldcomputers.com>
# Added rc.status functions 3/13/2004 D. Scott Barninger <barninger at fairfieldcomputers.com>
# Added LSB init info 10/14/2004 D. Scott Barninger <barninger at fairfieldcomputers.com>
# Added $remote_fs, add bareos specific daemon user & group Bruno Friedmann <bruno@ioda-net.ch>
# Added config check Philipp Storz <Philipp.Storz@bareos.com>

### BEGIN INIT INFO
# Provides:			 bareos-dir
# Required-Start:	 $local_fs $remote_fs $network $time $syslog
# Should-Start:      postgresql mysql bareos-sd bareos-fd
# Required-Stop:	 $local_fs $remote_fs $network
# Should-Stop:       postgresql mysql bareos-sd bareos-fd
# Default-Start:	 3 5
# Default-Stop: 	 0 1 2 6
# Short-Description:	bareos director
# Description:			Bareos network backup system director daemon
### END INIT INFO

# source process status functions
# this gives us funtion rc_status -v to tell us if we succeed or fail
. /etc/rc.status

function checkcfg () {
   echo "Checking Configuration and Database connection ... "
   su -s /bin/sh @dir_user@ -c "@sbindir@/bareos-dir -f -t -c @sysconfdir@/bareos-dir.conf"
   if [ $? -eq 0 ]; then
      return 0
   else
      return 1
   fi
}

RETVAL=0
case "$1" in
    start)
       checkcfg
       if [ $? -eq 0 ]; then
          echo -n "Starting the Bareos Director: "
          /sbin/startproc -u @dir_user@ -g @dir_group@ @sbindir@/bareos-dir $2 -c @sysconfdir@/bareos-dir.conf
          rc_status -v && touch @subsysdir@/bareos-dir
       else
          echo "Configuration check failed, please check log file for errors"
          rc_failed
       fi
       ;;
    stop)
       echo -n "Stopping the Director daemon: "
       /sbin/killproc @sbindir@/bareos-dir
       rc_status -v && rm -f @subsysdir@/bareos-dir
       ;;
    restart)
       $0 stop
       sleep 5
       $0 start
       ;;
    status)
       echo -n "Checking for Bareos director "
       /sbin/checkproc @sbindir@/bareos-dir
       rc_status -v
       ;;
    *)
       echo "Usage: $0 {start|stop|restart|status}"
       exit 1
       ;;
esac
rc_exit
