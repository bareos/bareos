#!/bin/sh
#
# BAREOSÂ® - Backup Archiving REcovery Open Sourced
#
# Copyright (C) 2000-2011 Free Software Foundation Europe e.V.
# Copyright (C) 2013-2022 Bareos GmbH & Co. KG
#
# This program is Free Software; you can redistribute it and/or
# modify it under the terms of version three of the GNU Affero General Public
# License as published by the Free Software Foundation and included
# in the file LICENSE.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
# 02110-1301, USA.
#
# This routine makes the appropriately configured
# Bareos database for PostgreSQL, Ingres, MySQL, or SQLite.
#

#
# Source the Bareos config functions.
#

# change to root dir
cd /

. "@scriptdir@"/bareos-config-lib.sh

db_name="${db_name:-$(get_database_name @db_name@)}"
db_type="$(get_database_driver_default)"

info "Creating ${db_type} database"

# use SQL_ASCII to be able to put any filename into
# the database even those created with unusual character sets
PGOPTIONS='--client-min-messages=warning' psql -f - -d template1 "$*" << END-OF-DATA
\set ON_ERROR_STOP on
CREATE DATABASE ${db_name} ENCODING 'SQL_ASCII' LC_COLLATE 'C' LC_CTYPE 'C' TEMPLATE template0;
ALTER DATABASE ${db_name} SET datestyle TO 'ISO, YMD';
END-OF-DATA
retval=$?

if PGOPTIONS='--client-min-messages=warning' psql --list --tuples-only --no-align "$*" | grep "^${db_name}|.*|SQL_ASCII|C|C" >/dev/null
then
    info "Database encoding OK"
else
    warn " "
    warn "Database encoding not conform. Do not use this database"
    warn " "
    retval=2
fi

if [ ${retval} -eq 0 ]; then
   info "Creating of ${db_name} database succeeded."
else
   error "Creating of ${db_name} database failed."
fi

exit ${retval}
