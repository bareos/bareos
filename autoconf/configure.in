dnl
dnl Process this file with autoconf to produce a configure script.
dnl
dnl require a recent autoconf
AC_PREREQ(2.61)
AC_INIT([bareos], m4_esyscmd([sed -n -e 's/^.*VERSION.*"\(.*\)"$/\1/p' ../src/include/version.h src/include/version.h 2> /dev/null | tr -d '\n']))
AC_CONFIG_SRCDIR(src/include/version.h)

BUILD_DIR=`pwd`
cd ..
TOP_DIR=`pwd`
cd ${BUILD_DIR}
AC_SUBST(BUILD_DIR)
AC_SUBST(TOP_DIR)
AC_CONFIG_AUX_DIR(${BUILD_DIR}/autoconf)
AC_CONFIG_HEADERS(src/include/config.h:autoconf/config.h.in)

dnl search for true and false programs.
AC_PATH_PROGS(TRUEPRG, true, :)
AC_PATH_PROGS(FALSEPRG, false, :)

dnl bareos version
post_host=
if test "x$BAREOS" != x; then
   post_host=`echo -${BAREOS} | tr 'A-Z ' 'a-z-'`
fi
BAREOS=${BAREOS:-Bareos}
VERSION=`sed -n -e 's/^.*VERSION.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
DATE=`sed -n -e 's/^.*[ \t]*BDATE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
LSMDATE=`sed -n -e 's/^.*LSMDATE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
BDB_VERSION=`sed -n -e 's/^.*BDB_VERSION \(.*\)$/\1/p' ${srcdir}/src/cats/cats.h`
AC_SUBST(VERSION)dnl
AC_SUBST(DATE)dnl
AC_SUBST(LSMDATE)dnl
AC_SUBST(BAREOS)dnl
AC_SUBST(post_host)dnl
AC_SUBST(BDB_VERSION)dnl

dnl src/lib
dnl can be overwritten by specific values from version.h
LIBBAREOS_LT_RELEASE=`sed -n -e 's/^#.*LIBBAREOS_LT_RELEASE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
LIBBAREOSCFG_LT_RELEASE=`sed -n -e 's/^#.*LIBBAREOSCFG_LT_RELEASE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
LIBBAREOS_LT_RELEASE=${LIBBAREOS_LT_RELEASE:-$VERSION}
LIBBAREOSCFG_LT_RELEASE=${LIBBAREOSCFG_LT_RELEASE:-$VERSION}
AC_SUBST(LIBBAREOS_LT_RELEASE)dnl
AC_SUBST(LIBBAREOSCFG_LT_RELEASE)dnl

dnl src/cats
dnl can be overwritten by specific values from version.h
LIBBAREOSSQL_LT_RELEASE=`sed -n -e 's/^#.*LIBBAREOSSQL_LT_RELEASE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
LIBBAREOSCATS_LT_RELEASE=`sed -n -e 's/^#.*LIBBAREOSCATS_LT_RELEASE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
LIBBAREOSSQL_LT_RELEASE=${LIBBAREOSSQL_LT_RELEASE:-$VERSION}
LIBBAREOSCATS_LT_RELEASE=${LIBBAREOSCATS_LT_RELEASE:-$VERSION}
AC_SUBST(LIBBAREOSSQL_LT_RELEASE)dnl
AC_SUBST(LIBBAREOSCATS_LT_RELEASE)dnl

dnl src/findlib
dnl can be overwritten by specific values from version.h
LIBBAREOSFIND_LT_RELEASE=`sed -n -e 's/^#.*LIBBAREOSFIND_LT_RELEASE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
LIBBAREOSFIND_LT_RELEASE=${LIBBAREOSFIND_LT_RELEASE:-$VERSION}
AC_SUBST(LIBBAREOSFIND_LT_RELEASE)dnl

dnl src/ndmp
dnl can be overwritten by specific values from version.h
LIBBAREOSNDMP_LT_RELEASE=`sed -n -e 's/^#.*LIBBAREOSNDMP_LT_RELEASE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
LIBBAREOSNDMP_LT_RELEASE=${LIBBAREOSNDMP_LT_RELEASE:-$VERSION}
AC_SUBST(LIBBAREOSNDMP_LT_RELEASE)dnl

dnl src/lmdb
dnl can be overwritten by specific values from version.h
LIBBAREOSLMDB_LT_RELEASE=`sed -n -e 's/^#.*LIBBAREOSLMDB_LT_RELEASE.*"\(.*\)"$/\1/p' ${srcdir}/src/include/version.h`
LIBBAREOSLMDB_LT_RELEASE=${LIBBAREOSLMDB_LT_RELEASE:-$VERSION}
AC_SUBST(LIBBAREOSLMDB_LT_RELEASE)dnl

echo "configuring for ${BAREOS} $VERSION ($DATE)"

dnl -------------------------------------------------------
dnl Check for compiler.
dnl ------------------------------------------------------

AC_PROG_CC
AC_PROG_CXX
AC_PROG_CC_C_O	       dnl Determine if C compiler support -c -o.
AC_PROG_GCC_TRADITIONAL    dnl Determine if ioctl() need -traditional.

BASECC=`basename $CC`
have_gcc=no
if test "x$BASECC" = xgcc; then
   AC_DEFINE(HAVE_GCC, 1, [Define to 1 if you use gcc.])
   have_gcc=yes
fi
AC_PATH_PROG(CXX, $CXX, $CXX)
if test ! -e $CXX; then
   AC_MSG_ERROR(Unable to find C++ compiler)
fi

dnl -------------------------------------------------------
dnl Check for programs.
dnl ------------------------------------------------------
AC_PROG_INSTALL
AC_PATH_PROG(MV, mv, [])
dnl Alert !!!
dnl If we name the variable RM it will shadow the RM variable in the configure script and we overwrite the
dnl value with the name of the rm command and not rm -f which is its normal content. This gives all kind
dnl of strange output of the configure script (like things don't exist etc.).
dnl So we name it REMOVE (more software has run into this problem)
AC_PATH_PROG(REMOVE, rm, [])
dnl Alert !!!
dnl If we name the variable ECHO it will shadow the ECHO variable in the configure script
dnl This gives all kind of strange output in the make depend on some platforms
dnl So we name it ECHOCMD (more software has run into this problem)
AC_PATH_PROG(ECHOCMD, echo, [])
AC_PATH_PROG(CP, cp, [])
AC_PATH_PROG(SED, sed, [])
AC_PATH_PROG(CMP, cmp, [])
AC_PATH_PROG(TBL, tbl, [])
AC_PATH_PROG(AR, ar, [])
AC_PATH_PROG(OPENSSL, openssl, [])
AC_PATH_PROG(MTX, mtx, [], [$PATH$PATH_SEPARATOR/usr/sbin$PATH_SEPARATOR/sbin])
AC_PATH_PROG(DD, dd, [])
AC_PATH_PROG(PYTHON, python, [])
AC_PATH_PROG(PKGCONFIG, pkg-config, [])
AC_PATH_PROG(QMAKE, qmake, [])
AC_PATH_PROG(GMAKE, gmake, [])
AC_PATH_PROG(PIDOF, pidof, [])
AC_PATH_PROG(PGREP, pgrep, [])
AC_PATH_PROG(GCORE, gcore, [])
AC_PATH_PROG(GDB, gdb, [])
AC_PATH_PROG(DBX, dbx, [])
AC_PATH_PROG(MDB, mdb, [])

AC_PROG_AWK
# Some AWK programs fail, so test it and warn the user
if echo xfoo | $AWK 'BEGIN { prog=ARGV[1]; ARGC=1 }
      { if ((prog == $2) || (("(" prog ")") == $2) ||
      (("[" prog "]") == $2) ||
      ((prog ":") == $2)) { print $1 ; exit 0 } }' xfoo>/dev/null; then :;
else
  AC_MSG_ERROR([!!!!!!!!! WARNING !!!!!!!!!!!!!!
   The regex engine of $AWK is too broken to be used you
   might want to install GNU AWK.
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!])
fi
THE_AWK=$AWK
AC_PATH_PROG(AWK, $THE_AWK, $THE_AWK)

test -n "$ARFLAG" || ARFLAGS="cr"
AC_SUBST(ARFLAGS)

MAKE_SHELL=/bin/sh
AC_SUBST(MAKE_SHELL)

AC_SUBST(LOCAL_LIBS)
AC_SUBST(LOCAL_CFLAGS)
AC_SUBST(LOCAL_LDFLAGS)
AC_SUBST(LOCAL_DEFS)

dnl --------------------------------------------------
dnl Libtool config
dnl --------------------------------------------------
use_libtool=yes
AC_ARG_ENABLE(libtool,
   AC_HELP_STRING([--enable-libtool], [enable building using GNU libtool @<:@default=yes@:>@]),
   [
       if test x$enableval = xno; then
	  use_libtool=no
       fi
   ]
)
LT_INIT([shared disable-static])
LT_LIB_DLLOAD
LT_LANG([C++])

if test x$use_libtool != xno; then
   DEFAULT_OBJECT_TYPE=".lo"
   DEFAULT_ARCHIVE_TYPE=".la"
   DEFAULT_SHARED_OBJECT_TYPE=".la"
   LIBTOOL="\$(LIBTOOL)"
   LIBTOOL_INSTALL_TARGET="libtool-install"
   LIBTOOL_CLEAN_TARGET="libtool-clean"
   QMAKE_LIBTOOL="${BUILD_DIR}/libtool"
   FD_PLUGIN_DIR="src/plugins/filed"
   SD_PLUGIN_DIR="src/plugins/stored"
   DIR_PLUGIN_DIR="src/plugins/dird"
   have_plugins=yes
else
   DEFAULT_OBJECT_TYPE=".o"
   DEFAULT_ARCHIVE_TYPE=".a"
   DEFAULT_SHARED_OBJECT_TYPE=".so"
   LIBTOOL="# \$(LIBTOOL)"
   LIBTOOL_INSTALL_TARGET=""
   LIBTOOL_CLEAN_TARGET=""
   QMAKE_LIBTOOL="# ${BUILD_DIR}/libtool"
   FD_PLUGIN_DIR=""
   SD_PLUGIN_DIR=""
   DIR_PLUGIN_DIR=""
   have_plugins=no
fi

AC_SUBST(DEFAULT_OBJECT_TYPE)
AC_SUBST(DEFAULT_ARCHIVE_TYPE)
AC_SUBST(DEFAULT_SHARED_OBJECT_TYPE)
AC_SUBST(LIBTOOL)
AC_SUBST(LIBTOOL_INSTALL_TARGET)
AC_SUBST(LIBTOOL_CLEAN_TARGET)
AC_SUBST(QMAKE_LIBTOOL)
AC_SUBST(FD_PLUGIN_DIR)

dnl --------------------------------------------------
dnl Include file handling
dnl --------------------------------------------------
AC_ARG_ENABLE(includes,
   AC_HELP_STRING([--enable-includes], [enable installing of include files @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  install_includes=yes
       fi
   ]
)

dnl It only makes sense to install include files when you install libraries which only happens when
dnl libtool is enabled

if test x$use_libtool != xno -a x$install_includes = xyes; then
   INCLUDE_INSTALL_TARGET="install-includes"
else
   INCLUDE_INSTALL_TARGET=""
fi
AC_SUBST(INCLUDE_INSTALL_TARGET)

dnl --------------------------------------------------
dnl Bareos OP Sys determination (see aclocal.m4)
dnl --------------------------------------------------
BA_CHECK_OPSYS

dnl -----------------------------------------------------------
dnl Bareos OPSys Distribution determination (see aclocal.m4)
dnl ----------------------------------------------------------
BA_CHECK_OPSYS_DISTNAME

dnl --------------------------------------------------
dnl Suppport for gettext (translations)
dnl By default, $datarootdir is ${prefix}/share
dnl --------------------------------------------------
AM_GNU_GETTEXT([external])

dnl ------------------------------------------------------------------
dnl If the user has not set --prefix, we set our default to nothing.
dnl In this case, if the user has not set --sysconfdir, we set it
dnl to the package default of /etc/bareos.  If either --prefix or
dnl --sysconfdir is set, we leave sysconfdir alone except to eval it.
dnl If the user has not set --libdir, we set it to the package
dnl default of /usr/lib. If either --prefix or --libdir is set,
dnl we leave libdir alone except to eval it. If the user has not set
dnl --includedir, we set it to the package default of /usr/include.
dnl If either --prefix or --includedir is set, we leave includedir
dnl alone except to eval it
dnl ------------------------------------------------------------------
os_name=`uname -s 2>/dev/null`
if test x${prefix} = xNONE ; then
   if test `eval echo ${sysconfdir}` = NONE/etc ; then
      sysconfdir=/etc/bareos
   fi

   if test `eval echo ${libdir}` = NONE/lib ; then
      case ${os_name} in
      Linux)
	 os_processor=`uname -p 2>/dev/null`
	 case ${os_processor} in
	 x86_64)
	    libdir=/usr/lib64
	    ;;
	 *)
	    libdir=/usr/lib
	    ;;
	 esac
	 ;;
      *)
	 libdir=/usr/lib
	 ;;
      esac
   fi

   if test `eval echo ${includedir}` = NONE/include ; then
      includedir=/usr/include
   fi

   if test `eval echo ${datarootdir}` = NONE/share ; then
      datarootdir=/usr/share
   fi
   prefix=
fi

dnl -------------------------------------------------------------------------
dnl  If the user has not set --exec-prefix, we default to ${prefix}
dnl -------------------------------------------------------------------------
if test x${exec_prefix} = xNONE ; then
   exec_prefix=${prefix}
fi

sysconfdir=`eval echo ${sysconfdir}`
datarootdir=`eval echo ${datarootdir}`
docdir=`eval echo ${docdir}`
htmldir=`eval echo ${htmldir}`
libdir=`eval echo ${libdir}`
includedir=`eval echo ${includedir}`
localedir=`eval echo ${datarootdir}/locale`
AC_DEFINE_UNQUOTED(LIBDIR, "$libdir", [Where are shared libs stored])
AC_DEFINE_UNQUOTED(SYSCONFDIR, "$sysconfdir", [Where are config files stored])
AC_DEFINE_UNQUOTED(LOCALEDIR, "$localedir", [Where are locale files stored])

dnl ------------------------------------------------------------------
dnl If the user has not set --sbindir, we set our default as /sbin
dnl ------------------------------------------------------------------
if test x$sbindir = x'${exec_prefix}/sbin' ; then
   sbindir=${exec_prefix}/sbin
fi
sbindir=`eval echo ${sbindir}`

dnl -------------------------------------------------------------------------
dnl  If the user has not set --mandir, we default to /usr/share/man
dnl -------------------------------------------------------------------------
if test x$mandir = x'${prefix}/man' ; then
   mandir=/usr/share/man
fi

dnl -------------------------------------------------------------------------
dnl  If the user has not set --htmldir, we default to /usr/share/doc/bareos/html
dnl -------------------------------------------------------------------------
if test x$htmldir = x${docdir} ; then
   htmldir=`eval echo ${docdir}/html`
fi

dnl -------------------------------------------------------------------------
dnl  If the user has not set --docdir, we default to /usr/share/doc/
dnl -------------------------------------------------------------------------
if test x$docdir = x'/usr/share/doc/' ; then
   docdir=`eval echo ${docdir}bareos`
fi


AC_PATH_PROGS(MSGFMT, msgfmt, no)
if test "$MSGFMT" = "no"
then
   echo 'msgfmt program not found, disabling NLS !'
   USE_NLS=no
   USE_INCLUDED_LIBINTL=no
#else
   AM_GNU_GETTEXT
fi

support_smartalloc=yes
support_readline=yes
support_conio=yes
support_bat=no
support_traymonitor=no
support_static_tools=no
support_static_fd=no
support_static_sd=no
support_static_dir=no
support_static_cons=no
support_python=no
build_client_only=no
build_dird=yes
build_stored=yes
db_backends=""
batch_insert_db_backends=""
support_lockmgr=no
support_lmdb=no
support_ndmp=no

dnl --------------------------------------------------------------------------
dnl CHECKING COMMAND LINE OPTIONS
dnl --------------------------------------------------------------------------

dnl -------------------------------------------
dnl bat (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(bat,
   AC_HELP_STRING([--enable-bat], [enable build of bat Qt4 GUI @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  AC_DEFINE(HAVE_BAT, 1, [Define to 1 if bat Qt4 GUI support should be enabled])
	  support_bat=yes
       fi
   ]
)

BAT_DIR=
if test x$support_bat = xyes; then
   abc=`$PKGCONFIG --atleast-version=4.6 QtGui`
   pkg=$?
   if test $pkg = 0; then
      BAT_DIR=src/qt-console
   else
      AC_MSG_ERROR(Unable to find suitable Qt4 installation needed by bat)
   fi
fi

AC_SUBST(BAT_DIR)

dnl -------------------------------------------
dnl tray-monitor (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(traymonitor,
   AC_HELP_STRING([--enable-traymonitor], [enable build of traymonitor @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
          AC_DEFINE(HAVE_TRAYMONITOR, 1, [Define to 1 if tray-monitor Qt4 GUI support should be enabled])
          support_traymonitor=yes
       fi
   ]
)

TRAY_MONITOR_DIR=
if test x$support_traymonitor = xyes; then
   abc=`$PKGCONFIG --atleast-version=4.6 QtGui`
   pkg=$?
   if test $pkg = 0; then
      TRAY_MONITOR_DIR=src/qt-tray-monitor
   else
      AC_MSG_ERROR(Unable to find suitable Qt4 installation needed by tray-monitor)
   fi
fi

AC_SUBST(TRAY_MONITOR_DIR)


dnl -------------------------------------------
dnl smartalloc (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(smartalloc,
   AC_HELP_STRING([--enable-smartalloc], [enable smartalloc debugging support @<:@default=no@:>@]),
   [
       if test x$enableval = xno; then
	  support_smartalloc=no
       fi
   ]
)

if test x$support_smartalloc = xyes; then
   AC_DEFINE(SMARTALLOC, 1, [Define to 1 if you want Smartalloc enabled])
fi

dnl -------------------------------------------
dnl Lock Manager (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(lockmgr,
   AC_HELP_STRING([--enable-lockmgr], [enable lock manager support @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  support_lockmgr=yes
       fi
   ]
)

if test x$support_lockmgr = xyes; then
   AC_DEFINE(_USE_LOCKMGR, 1, [Define to 1 if you want Lock Manager enabled])
fi


dnl -------------------------------------------
dnl static-tools (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(static-tools,
   AC_HELP_STRING([--enable-static-tools], [enable static tape tools @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  if test x$use_libtool = xyes; then
	     AC_MSG_ERROR([Libtool is enabled, not compatible with static tools,
  please rerun configure with --disable-libtool])
	  fi
	  support_static_tools=yes
       fi
   ]
)

TTOOL_LDFLAGS=
if test x$support_static_tools = xyes; then
   TTOOL_LDFLAGS="-static"
fi
AC_SUBST(TTOOL_LDFLAGS)

dnl -------------------------------------------
dnl static-fd	 (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(static-fd,
   AC_HELP_STRING([--enable-static-fd], [enable static File daemon @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  if test x$use_libtool = xyes; then
	     AC_MSG_ERROR([Libtool is enabled, not compatible with static tools,
  please rerun configure with --disable-libtool])
	  fi
	  support_static_fd=yes
       fi
   ]
)

STATIC_FD=
if test x$support_static_fd = xyes; then
   STATIC_FD="static-bareos-fd"
fi
AC_SUBST(STATIC_FD)

dnl -------------------------------------------
dnl static-sd	 (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(static-sd,
   AC_HELP_STRING([--enable-static-sd], [enable static Storage daemon @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  if test x$use_libtool = xyes; then
	     AC_MSG_ERROR([Libtool is enabled, not compatible with static tools,
  please rerun configure with --disable-libtool])
	  fi
	  support_static_sd=yes
       fi
   ]
)

STATIC_SD=
if test x$support_static_sd = xyes; then
   STATIC_SD="static-bareos-sd"
fi
AC_SUBST(STATIC_SD)

dnl -------------------------------------------
dnl static-dir	 (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(static-dir,
   AC_HELP_STRING([--enable-static-dir], [enable static Director @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  if test x$use_libtool = xyes; then
	     AC_MSG_ERROR([Libtool is enabled, not compatible with static tools,
  please rerun configure with --disable-libtool])
	  fi
	  support_static_dir=yes
       fi
   ]
)

STATIC_DIR=
if test x$support_static_dir = xyes; then
   STATIC_DIR="static-bareos-dir"
fi
AC_SUBST(STATIC_DIR)

dnl -------------------------------------------
dnl static-cons  (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(static-cons,
   AC_HELP_STRING([--enable-static-cons], [enable static Console @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  if test x$use_libtool = xyes; then
	     AC_MSG_ERROR([Libtool is enabled, not compatible with static tools,
  please rerun configure with --disable-libtool])
	  fi
	  support_static_cons=yes
       fi
   ]
)

STATIC_CONS=
if test x$support_static_cons = xyes; then
   STATIC_CONS="static-bconsole"
fi
AC_SUBST(STATIC_CONS)

dnl -------------------------------------------
dnl client_only  (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(client-only,
   AC_HELP_STRING([--enable-client-only], [build client (File daemon) only @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  build_client_only=yes
	  db_backends="None"
	  DB_BACKENDS="none"
       fi
   ]
)
if test x$build_client_only = xno; then
   ALL_DIRS="subdirs"
else
   ALL_DIRS=""
fi
AC_SUBST(ALL_DIRS)

dnl -------------------------------------------
dnl director  (default on)
dnl -------------------------------------------
AC_ARG_ENABLE(build-dird,
   AC_HELP_STRING([--enable-build-dird], [enable building of dird (Director) @<:@default=yes@:>@]),
   [
       if test x$enableval = xno; then
	  build_dird=no
       fi
   ]
)
if test x$build_dird = xyes; then
   DIRD_DIR="src/dird"
else
   DIRD_DIR=""
   DIR_PLUGIN_DIR=""
fi
AC_SUBST(DIRD_DIR)
AC_SUBST(DIR_PLUGIN_DIR)

dnl -------------------------------------------
dnl stored  (default on)
dnl -------------------------------------------
AC_ARG_ENABLE(build-stored,
   AC_HELP_STRING([--enable-build-stored], [enable building of stored (Storage daemon) @<:@default=yes@:>@]),
   [
      if test x$enableval = xno; then
	 build_stored=no
      fi
   ]
)
if test x$build_stored = xyes; then
   STORED_DIR="src/stored"
else
   STORED_DIR=""
   SD_PLUGIN_DIR=""
fi
AC_SUBST(STORED_DIR)
AC_SUBST(SD_PLUGIN_DIR)

dnl ---------------------------------------------------
dnl Check for conio (Bareos readline substitute)(
dnl ---------------------------------------------------
dnl this allows you to turn it completely off
AC_ARG_ENABLE(conio,
   AC_HELP_STRING([--disable-conio], [disable conio support @<:@default=no@:>@]),
   [
       if test x$enableval = xno; then
	  support_conio=no
       fi
   ]
)


dnl ---------------------------------------------------
dnl Check for IPv6 support
dnl ---------------------------------------------------
dnl this allows you to turn it completely off
support_ipv6=yes
AC_ARG_ENABLE(ipv6,
   AC_HELP_STRING([--enable-ipv6], [enable ipv6 support @<:@default=yes@:>@]),
   [
       if test x$enableval = xno; then
	  support_ipv6=no
       fi
   ]
)

if test x$support_ipv6 = xyes; then
    AC_TRY_LINK([ #include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>], [struct sockaddr_in6 s; struct in6_addr t=in6addr_any; int i=AF_INET6; s; t.s6_addr[0] = 0;],
      [support_ipv6=yes], [support_ipv6=no])
fi

if test x$support_ipv6 = xyes; then
   AC_DEFINE(HAVE_IPV6, 1, [Define to 1 if IPv6 support should be enabled])
fi

TERM_LIB=""
AC_CHECK_HEADER(curses.h, [
    AC_CHECK_LIB(tinfo, tgetent, [ TERM_LIB="-ltinfo" ], [
      AC_CHECK_LIB(ncurses, tgetent, [ TERM_LIB="-lncurses" ], [
	AC_CHECK_LIB(termcap, tgetent, [ TERM_LIB="-ltermcap" ])
    ])
  ])
  ],
  [  AC_CHECK_HEADERS(curses.h)
     AC_CHECK_HEADER(term.h,
       [ AC_CHECK_LIB(curses, tgetent,
	 [ TERM_LIB="-lcurses" ] )
       ])
  ])


got_conio="no"
if test x$support_conio = xyes; then
   if test x$TERM_LIB != x; then
      CONS_LIBS=$TERM_LIB
      CONS_SRC="conio.c"
      got_conio="yes"
      support_readline=no
      AC_DEFINE(HAVE_CONIO, 1, [Define to 1 if Bareos conio support enabled])
   else
      echo " "; echo "Required libraries not found. CONIO turned off ..."; echo " "
   fi
fi


dnl ---------------------------------------------------
dnl Check for readline support/directory (default off)
dnl ---------------------------------------------------
dnl this allows you to turn it completely off
AC_ARG_ENABLE(readline,
   AC_HELP_STRING([--disable-readline], [disable readline support @<:@default=yes@:>@]),
   [
       if test x$enableval = xno; then
	  support_readline=no
       fi
   ]
)
if test x$TERM_LIB = x ; then
   support_readline=no
fi

got_readline="no"
READLINE_SRC=
if test x$support_readline = xyes; then
   AC_ARG_WITH(readline,
      AC_HELP_STRING([--with-readline@<:@=DIR@:>@], [specify readline library directory]),
      [
	  case "$with_readline" in
	  no)
	     :
	     ;;
	  yes|*)
	     if test -f ${with_readline}/readline.h; then
		CONS_INC="-I${with_readline}"
		CONS_LDFLAGS="-L$with_readline"
	     elif test -f ${with_readline}/include/readline/readline.h; then
		CONS_INC="-I${with_readline}/include/readline"
		CONS_LDFLAGS="-L${with_readline}/lib"
		with_readline="${with_readline}/include/readline"
	     else
		CONS_INC="-I/usr/include/readline"
		with_readline="/usr/include/readline"
	     fi

	     AC_CHECK_HEADER(${with_readline}/readline.h,
		[
		    AC_DEFINE(HAVE_READLINE, 1, [Define to 1 if readline support should be enabled])
		    CONS_LIBS="-lreadline -lhistory $TERM_LIB"
		    got_readline="yes"
		], [
		    echo " "
		    echo "readline.h not found. readline turned off ..."
		    echo " "
		]
	     )
	     ;;
	  esac
      ],[
	 dnl check for standard readline library
	 AC_CHECK_HEADER(/usr/include/readline/readline.h,
	    [
		AC_DEFINE(HAVE_READLINE, 1, [Define to 1 if readline support should be enabled])
		got_readline="yes"
		CONS_INC="-I/usr/include/readline"
		CONS_LIBS="-lreadline $TERM_LIB"
	    ], [
		dnl Did not find standard library, so try Bareos's default
		AC_CHECK_HEADER(${TOP_DIR}/depkgs/readline/readline.h,
		    [
		        AC_DEFINE(HAVE_READLINE, 1, [Define to 1 if readline support should be enabled])
			got_readline="yes"
			CONS_INC="-I${TOP_DIR}/depkgs/readline"
			CONS_LIBS="-lreadline -lhistory $TERM_LIB"
			CONS_LDFLAGS="-L${TOP_DIR}/depkgs/readline"
			PRTREADLINE_SRC="${TOP_DIR}/depkgs/readline"
		    ], [
			echo " "
			echo "readline.h not found. readline turned off ..."
			echo " "
		    ]
		)
	    ]
	 )
      ]
   )
fi

AC_SUBST(CONS_INC)
AC_SUBST(CONS_SRC)
AC_SUBST(CONS_LIBS)
AC_SUBST(CONS_LDFLAGS)
AC_SUBST(READLINE_SRC)

dnl End of readline/conio stuff
dnl -----------------------------------------------------------------------

dnl Minimal stuff for readline Makefile configuration
MAKE_SHELL=/bin/sh
AC_SUBST(MAKE_SHELL)
AC_HEADER_STAT
AC_HEADER_DIRENT
AC_CHECK_HEADER(poll.h, [AC_DEFINE(HAVE_POLL_H, 1, [Define to 1 if you have the <poll.h> header file.])] , )
AC_CHECK_HEADER(sys/poll.h, [AC_DEFINE(HAVE_SYS_POLL_H, 1, [Define to 1 if you have the <sys/poll.h> header file.])] , )
AC_CHECK_FUNCS(strcasecmp select poll setenv putenv tcgetattr lstat lchown)
AC_CHECK_FUNCS(nanosleep nl_langinfo)
AC_CHECK_HEADERS(varargs.h)

dnl -----------------------------------------------------------------------
dnl  Check for Python support
dnl
AC_MSG_CHECKING(for Python support)
AC_ARG_WITH(python,
   AC_HELP_STRING([--with-python@<:@=DIR@:>@], [Include Python support. DIR is the Python base install directory, default is to search through a number of common places for the Python files.]),
   [
       PYTHON_INC=
       PYTHON_LIBS=
       if test "$withval" != "no"; then
	  if test "$withval" = "yes"; then
	     if test -e /usr/bin/python-config ; then
		PYTHON_INC=`/usr/bin/python-config --includes`
		PYTHON_LIBS=`/usr/bin/python-config --libs`
	     else
		for python_root in /usr /usr/local /usr/sfw; do
		   for ver in python2.2 python2.3 python2.4 python2.5 python2.6 python2.7 python3; do
		      if test -f $python_root/include/${ver}/Python.h; then
			 PYTHON_INC=-I$python_root/include/${ver}
			 if test -d $python_root/lib64/${ver}/config; then
			    PYTHON_LIBS="-L$python_root/lib64/${ver}/config -l${ver}"
			 else
			    PYTHON_LIBS="-L$python_root/lib/${ver}/config -l${ver}"
			 fi
			 break
		      fi
		   done
		done

		if test x$PYTHON_INC = x; then
		   if test -f $prefix/include/Python.h; then
		      PYTHON_INC=-I$prefix/include
		      if test -d $prefix/lib64/config; then
			 PYTHON_LIBS="-L$prefix/lib64/config -lpython"
		      else
			 PYTHON_LIBS="-L$prefix/lib/config -lpython"
		      fi
		   else
		      AC_MSG_RESULT(no)
		      AC_MSG_ERROR(Unable to find Python.h in standard locations)
		   fi
		fi
	     fi
	  else
	     if test -e $withval/bin/python-config ; then
		PYTHON_INC=`$withval/bin/python-config --includes`
		PYTHON_LIBS=`$withval/bin/python-config --libs`
	     elif test -f $withval/Python.h; then
		PYTHON_INC=-I$withval
		PYTHON_LIBS="-L$withval/config -lpython"
	     elif test -f $withval/include/Python.h; then
		PYTHON_INC=-I$withval/include
		if test -d $withval/lib64/config; then
		   PYTHON_LIBS="-L$withval/lib64/config -lpython"
		else
		   PYTHON_LIBS="-L$withval/lib/config -lpython"
		fi
	     elif test -f $withval/include/python/Python.h; then
		PYTHON_INC=-I$withval/include/python
		if test -d $withval/lib64/python/config; then
		   PYTHON_LIBS="-L$withval/lib64/python/config -lpython"
		else
		   PYTHON_LIBS="-L$withval/lib/python/config -lpython"
		fi
	     else
		AC_MSG_RESULT(no)
		AC_MSG_ERROR(Invalid Python directory $withval - unable to find Python.h under $withval)
	     fi
	  fi

	  AC_DEFINE(HAVE_PYTHON, 1, [Define to 1 if python support should be enabled])
	  AC_MSG_RESULT(yes)
	  support_python=yes
	  AC_MSG_NOTICE(checking for more Python libs)
	  saved_LIBS="$LIBS"; LIBS=
	  AC_SEARCH_LIBS(shm_open, [rt])
	  AC_CHECK_LIB(util, openpty)
	  PYTHON_LIBS="$PYTHON_LIBS $LIBS"
	  LIBS="$saved_LIBS"
       else
	  AC_MSG_RESULT(no)
       fi
   ],[
       AC_MSG_RESULT(no)
   ]
)
AC_SUBST(PYTHON_LIBS)
AC_SUBST(PYTHON_INC)

dnl
dnl Find where sockets are (especially for Solaris)
dnl Do this before the TCP Wrappers test since tcp wrappers
dnl uses the socket library and some linkers are stupid.
dnl
AC_CHECK_FUNC(socket,
    AC_MSG_RESULT(using socket from libc),
    [
        AC_CHECK_LIB(socket, socket,
            [
	        LIBS="-lsocket $LIBS"
	        SOCKLIBS="-lsocket $LIBS"
            ], [
                AC_CHECK_LIB(xnet, socket,
                    [
	                LIBS="-lxnet $LIBS"
	                SOCKLIBS="-lxnet $LIBS"
                    ], [
                        AC_CHECK_LIB(inet, socket,
                            [
	                        LIBS="-linet $LIBS"
	                        SOCKLIBS="-linet $LIBS"
                            ]
                        )
                    ]
                )
            ]
        )
    ]
)

dnl -----------------------------------------------------------
dnl Check whether user wants TCP wrappers support (default off)
dnl -----------------------------------------------------------
TCPW_MSG="no"
WRAPLIBS=""
AC_ARG_WITH(tcp-wrappers,
   AC_HELP_STRING([--with-tcp-wrappers@<:@=DIR@:>@], [enable tcpwrappers support]),
   [
       if test "x$withval" != "xno" ; then
	  saved_LIBS="$LIBS"
	  LIBS="$saved_LIBS -lwrap"
	  AC_SEARCH_LIBS(nanosleep, [rt])
	  AC_MSG_CHECKING(for libwrap)
	  AC_TRY_LINK(
	     [
	       #include <sys/types.h>
	       #include <tcpd.h>
	       int deny_severity = 0;
	       int allow_severity = 0;
	       struct request_info *req;
	     ], [
		hosts_access(req);
	     ], [
		 AC_MSG_RESULT(yes)
		 AC_DEFINE(HAVE_LIBWRAP, 1, [Define to 1 if libwrap support should be enabled])
		 TCPW_MSG="yes"
		 LIBS="$saved_LIBS"
		 WRAPLIBS="-lwrap"
	     ], [
		 LIBS="$saved_LIBS -lwrap -lnsl"
		 WRAPLIBS="$saved_LIBS -lwrap -lnsl"
		 AC_TRY_LINK(
		   [
		       #include <sys/types.h>
		       #include <tcpd.h>
		       int deny_severity = 0;
		       int allow_severity = 0;
		       struct request_info *req;
		   ], [
		       hosts_access(req);
		   ], [
		      AC_MSG_RESULT(yes)
		      AC_DEFINE(HAVE_LIBWRAP, 1, [Set to enable libwrap support])
		      TCPW_MSG="yes"
		      LIBS="$saved_LIBS"
		      WRAPLIBS="-lwrap"
		   ], [
		      AC_MSG_ERROR([*** libwrap missing])
		   ]
		)
	     ]
	  )
       fi
   ]
)

dnl -----------------------------------------------------------
dnl Check if crypto support is wanted
dnl -----------------------------------------------------------
support_crypto=auto
AC_ARG_ENABLE(crypto,
   AC_HELP_STRING([--disable-crypto], [disable crypto support @<:@default=auto@:>@]),
   [
       if test x$enableval = xyes; then
	  support_crypto=yes
       elif test x$enableval = xno; then
	  support_crypto=no
       fi
   ]
)

dnl -----------------------------------------------------------
dnl Check if TLS support is wanted
dnl -----------------------------------------------------------
support_tls=auto
AC_ARG_ENABLE(tls,
   AC_HELP_STRING([--disable-tls], [disable TLS support @<:@default=auto@:>@]),
   [
       if test x$enableval = xyes; then
	  support_tls=yes
       elif test x$enableval = xno; then
	  support_tls=no
       fi
   ]
)

dnl -----------------------------------------------------------
dnl Default settings unless proven otherwise.
dnl -----------------------------------------------------------
have_crypto=no
have_tls=no

dnl -----------------------------------------------------------
dnl Check whether OpenSSL is available
dnl -----------------------------------------------------------
AC_MSG_CHECKING([for OpenSSL])
dnl The following uses quadrigraphs:
dnl '@<:@' = '['
dnl '@:>@' = ']'
AC_ARG_WITH(openssl,
    AC_HELP_STRING([--with-openssl@<:@=DIR@:>@], [Include OpenSSL support. DIR is the OpenSSL base]),
    [
	with_openssl_directory=${withval}
    ]
)

dnl See if crypto or tls support is wanted
if test "x$support_crypto" != "xno" -o "x$support_tls" != "xno"; then
   if test "x$with_openssl_directory" != "xno"; then
      OPENSSL_LIBS="-lssl -lcrypto"
      OPENSSL_INC=""

      if test "x$with_openssl_directory" != "xyes" && test x"${with_openssl_directory}" != "x"; then
         #
         # Make sure the $with_openssl_directory also makes sense
         #
         if test -d "$with_openssl_directory/lib" -a -d "$with_openssl_directory/include"; then
	    OPENSSL_LIBS="-L$with_openssl_directory/lib $OPENSSL_LIBS"
            OPENSSL_INC="-I$with_openssl_directory/include $OPENSSL_INC"
         fi
      fi

      saved_LIBS="${LIBS}"
      saved_CFLAGS="${CFLAGS}"
      saved_CPPFLAGS="${CFLAGS}"
      LIBS="${saved_LIBS} ${OPENSSL_LIBS}"
      CFLAGS="${saved_CFLAGS} ${OPENSSL_INC}"
      CPPFLAGS="${saved_CPPFLAGS} ${OPENSSL_INC}"

      AC_TRY_LINK(
         [
	     #include <openssl/engine.h>
         ], [
	      ENGINE_load_pk11();
         ], [
	      AC_DEFINE(HAVE_ENGINE_LOAD_PK11, 1, [Define to 1 if OpenSSL library has ENGINE_load_pk11 available])
         ]
      )

      AC_TRY_LINK(
         [
	     #include <openssl/ssl.h>
         ], [
	      CRYPTO_set_id_callback(NULL);
         ], [
             have_openssl="yes"
         ], [
             have_openssl="no"
         ]
      )

      AC_TRY_LINK(
         [
	     #include <openssl/evp.h>
         ], [
	     EVP_sha512();
         ], [
	     ac_cv_openssl_sha2="yes"
         ], [
	     ac_cv_openssl_sha2="no"
         ]
      )

      dnl Solaris disables greater than 128+ bit encryption in their OpenSSL
      dnl implementation, presumably for export reasons. If 192bit AES
      dnl is available, we assume that we're running with a 'non-export'
      dnl openssl library.
      AC_TRY_LINK(
         [
	     #include <openssl/evp.h>
         ], [
	     EVP_aes_192_cbc();
         ], [
	     ac_cv_openssl_export="no"
         ], [
	     ac_cv_openssl_export="yes"
         ]
      )

      AC_MSG_RESULT([$have_crypto])

      if test "$have_openssl" = "yes"; then
         AC_DEFINE(HAVE_OPENSSL, 1, [Define to 1 if OpenSSL library is available])
      fi

      if test "$support_crypto" != "no" -a "$have_openssl" = "yes"; then
         have_crypto="yes"
         AC_DEFINE(HAVE_CRYPTO, 1, [Define to 1 if encryption support should be enabled])
      fi

      if test "$support_tls" != "no" -a "$have_openssl" = "yes"; then
         have_tls="yes"
         AC_DEFINE(HAVE_TLS, 1, [Define to 1 if TLS support should be enabled])
      fi

      if test "$ac_cv_openssl_sha2" = "yes"; then
         AC_DEFINE(HAVE_SHA2, 1, [Define to 1 if the SHA-2 family of digest algorithms is available])
      fi

      if test "$ac_cv_openssl_export" = "yes"; then
         AC_DEFINE(HAVE_OPENSSL_EXPORT_LIBRARY, 1, [Define to 1 if the OpenSSL library is export-contrained to 128bit ciphers])
      fi

      LIBS="${saved_LIBS}"
      CFLAGS="${saved_CFLAGS}"
      CPPFLAGS="${saved_CPPFLAGS}"
   else
      have_openssl="no"
      AC_MSG_RESULT(no)
   fi
fi

if test "$have_openssl" = "no"; then
   OPENSSL_LIBS=""
   OPENSSL_INC=""
fi

if test x$use_libtool != xno; then
   OPENSSL_LIBS_NONSHARED=""
else
   OPENSSL_LIBS_NONSHARED="${OPENSSL_LIBS}"
fi

AC_SUBST(OPENSSL_LIBS)
AC_SUBST(OPENSSL_INC)
AC_SUBST(OPENSSL_LIBS_NONSHARED)

dnl -----------------------------------------------------------
dnl Check whether GNUTLS is available
dnl -----------------------------------------------------------
with_gnutls_directory=no
AC_ARG_WITH(gnutls,
    AC_HELP_STRING([--with-gnutls@<:@=DIR@:>@], [Include GNUTLS support. DIR is the GNUTLS base]),
    [
	with_gnutls_directory=${withval}
    ]
)

dnl See if crypto or tls support is wanted
if test "x$support_crypto" != "xno" -o "x$support_tls" != "xno"; then
   dnl When openssl was alread found and enabled use that.
   if test "x$have_openssl" != "xyes" -a "x$with_gnutls_directory" != "xno"; then
      GNUTLS_LIBS="-lgnutls"
      GNUTLS_INC=""
      if test "x$with_gnutls_directory" != "xyes" && test x"${with_gnutls_directory}" != "x"; then
         #
         # Make sure the $with_gnutls_directory also makes sense
         #
         if test -d "$with_gnutls_directory/lib" -a -d "$with_gnutls_directory/include"; then
	    GNUTLS_LIBS="-L$with_gnutls_directory/lib $GNUTLS_LIBS"
	    GNUTLS_INC="-I$with_gnutls_directory/include $GNUTLS_INC"
         fi
      fi

      saved_LIBS="${LIBS}"
      saved_CFLAGS="${CFLAGS}"
      saved_CPPFLAGS="${CFLAGS}"
      LIBS="${saved_LIBS} ${GNUTLS_LIBS}"
      CFLAGS="${saved_CFLAGS} ${GNUTLS_INC}"
      CPPFLAGS="${saved_CPPFLAGS} ${GNUTLS_INC}"

      AC_CHECK_HEADERS(gnutls/gnutls.h)

      if test $ac_cv_header_gnutls_gnutls_h = yes ; then
         AC_CHECK_LIB(gnutls, gnutls_init,
            [
	        have_gnutls="yes"
            ], [
	        have_gnutls="no"
            ]
         )
      fi

      if test "$have_gnutls" = "yes"; then
         AC_DEFINE(HAVE_GNUTLS, 1, [Define to 1 if GNUTLS library is available])
      fi

      if test "$support_tls" != "no" -a "$have_gnutls" = "yes"; then
         have_tls="yes"
         AC_DEFINE(HAVE_TLS, 1, [Define to 1 if TLS support should be enabled])
      fi

      LIBS="${saved_LIBS}"
      CFLAGS="${saved_CFLAGS}"
      CPPFLAGS="${saved_CPPFLAGS}"
   else
      have_gnutls="no"
   fi
fi

if test "$have_gnutls" = "no"; then
   GNUTLS_LIBS=""
   GNUTLS_INC=""
fi

if test x$use_libtool != xno; then
   GNUTLS_LIBS_NONSHARED=""
else
   GNUTLS_LIBS_NONSHARED="${GNUTLS_LIBS}"
fi

AC_SUBST(GNUTLS_LIBS)
AC_SUBST(GNUTLS_INC)
AC_SUBST(GNUTLS_LIBS_NONSHARED)

dnl -----------------------------------------------------------
dnl dlopen is needed for plugins
dnl -----------------------------------------------------------
AC_SEARCH_LIBS(dlopen, [dl])

dnl ------------------------------------------
dnl Where to place working dir
dnl ------------------------------------------
working_dir=`eval echo ${prefix}/var/bareos/working`
AC_ARG_WITH(working-dir,
   AC_HELP_STRING([--with-working-dir=PATH], [specify path of Bareos working directory]),
   [
       if test "x$withval" != "xno" ; then
	 working_dir=$withval
       fi
   ]
)

AC_DEFINE_UNQUOTED(_PATH_BAREOS_WORKINGDIR, "$working_dir", [Directory for daemon files])
AC_SUBST(working_dir)

dnl ------------------------------------------------------------------
dnl If the user has not set archivedir, we set our default as /tmp
dnl ------------------------------------------------------------------
archivedir=/tmp
AC_ARG_WITH(archivedir,
   AC_HELP_STRING([--with-archivedir=PATH], [specify path of SD archive directory]),
   [
       if test "x$withval" != "xno" ; then
	  archivedir=$withval
       fi
   ]
)

AC_SUBST(archivedir)

dnl ------------------------------------------------------------------
dnl Allow the user to specify the daemon resource name default hostname
dnl ------------------------------------------------------------------
basename=`hostname`
AC_ARG_WITH(basename,
   AC_HELP_STRING([--with-basename=RESNAME], [specify base resource name for daemons]),
   [
       if test "x$withval" != "xno" ; then
	  basename=$withval
       fi
   ]
)

AC_SUBST(basename)

dnl ------------------------------------------------------------------
dnl Allow the user to override the hostname (default = machine hostname)
dnl ------------------------------------------------------------------
hostname=`uname -n | cut -d '.' -f 1`
if test x${hostname} = x ; then
  hostname="localhost"
fi
dnl Make sure hostname is resolved
ping -c 1 $hostname 2>/dev/null 1>/dev/null
if test ! $? = 0; then
  hostname="localhost"
fi
AC_ARG_WITH(hostname,
   AC_HELP_STRING([--with-hostname=RESNAME], [specify host name for daemons]),
   [
       if test "x$withval" != "xno" ; then
	 hostname=$withval
       fi
   ]
)

AC_SUBST(hostname)


dnl ------------------------------------------
dnl Where to place scriptdir (script files)
dnl ------------------------------------------
scriptdir=`eval echo ${sysconfdir}`
AC_ARG_WITH(scriptdir,
   AC_HELP_STRING([--with-scriptdir=PATH], [specify path of Bareos scripts directory]),
   [
       if test "x$withval" != "xno" ; then
	  scriptdir=$withval
       fi
   ]
)

AC_SUBST(scriptdir)


dnl ------------------------------------------
dnl Where to place bsrdir (bsr files)
dnl ------------------------------------------
bsrdir=`eval echo ${prefix}/var/bareos/working`
AC_ARG_WITH(bsrdir,
   AC_HELP_STRING([--with-bsrdir=PATH], [specify path of Bareos bsrs directory]),
   [
       if test "x$withval" != "xno" ; then
	  bsrdir=$withval
       fi
   ]
)

AC_SUBST(bsrdir)

dnl ------------------------------------------
dnl Where to place logdir (bsr files)
dnl ------------------------------------------
logdir=`eval echo ${prefix}/var/bareos/logs`
AC_ARG_WITH(logdir,
   AC_HELP_STRING([--with-logdir=PATH], [specify path of Bareos logs directory]),
   [
       if test "x$withval" != "xno" ; then
	  logdir=$withval
       fi
   ]
)

AC_SUBST(logdir)


# ------------------------------------------
# Where to place plugindir (plugin files)
# ------------------------------------------
plugindir=`eval echo ${libdir}`
AC_ARG_WITH(plugindir,
   AC_HELP_STRING([--with-plugindir=PATH], [specify path of Bareos plugins directory]),
   [
       if test "x$withval" != "xno" ; then
	  plugindir=$withval
       fi
   ]
)

AC_SUBST(plugindir)

dnl ------------------------------------------
dnl Where to send dump email
dnl ------------------------------------------
dump_email=root@localhost
AC_ARG_WITH(dump-email,
   AC_HELP_STRING([--with-dump-email=EMAIL], [dump email address]),
   [
       if test "x$withval" != "xno" ; then
	  dump_email=$withval
       fi
   ]
)

AC_SUBST(dump_email)

dnl ------------------------------------------
dnl Where to send job email
dnl ------------------------------------------
job_email=root@localhost
AC_ARG_WITH(job-email,
   AC_HELP_STRING([--with-job-email=EMAIL], [job output email address]),
   [
       if test "x$withval" != "xno" ; then
	  job_email=$withval
       fi
   ]
)

AC_SUBST(job_email)

dnl ------------------------------------------
dnl Where to find smtp host
dnl ------------------------------------------
smtp_host=localhost
AC_ARG_WITH(smtp_host,
   AC_HELP_STRING([--with-smtp-host=HOST], [SMTP mail host address]),
   [
       if test "x$withval" != "xno" ; then
	  smtp_host=$withval
       fi
   ]
)

AC_SUBST(smtp_host)

dnl ------------------------------------
dnl Where to place pid files
dnl ------------------------------------
piddir=/var/run
AC_ARG_WITH(pid-dir,
   AC_HELP_STRING([--with-pid-dir=PATH], [specify location of Bareos pid files]),
   [
       if test "x$withval" != "xno" ; then
	  piddir=$withval
       fi
   ]
)

AC_DEFINE_UNQUOTED(_PATH_BAREOS_PIDDIR, "$piddir", [Directory for PID files])
AC_SUBST(piddir)

dnl ------------------------------------
dnl Where to place subsys "lock file"
dnl ------------------------------------
subsysdir=/var/run/subsys
if test -d /var/run/subsys; then
   subsysdir=/var/run/subsys
elif test -d /var/lock/subsys; then
   subsysdir=/var/lock/subsys
else
   subsysdir=/var/run/subsys
fi
AC_ARG_WITH(subsys-dir,
   AC_HELP_STRING([--with-subsys-dir=PATH], [specify location of Bareos subsys file]),
   [
       if test "x$withval" != "xno" ; then
	  subsysdir=$withval
       fi
   ]
)

AC_SUBST(subsysdir)

dnl ------------------------------------
dnl Where to start assigning ports
dnl ------------------------------------
baseport=9101
AC_ARG_WITH(baseport,
   AC_HELP_STRING([--with-baseport=PORT], [specify base port address for daemons]),
   [
       if test "x$withval" != "xno" ; then
	  baseport=$withval
       fi
   ]
)

AC_SUBST(baseport)
dir_port=`expr $baseport`
fd_port=`expr $baseport + 1`
sd_port=`expr $fd_port + 1`

AC_SUBST(dir_port)
AC_SUBST(fd_port)
AC_SUBST(sd_port)

dnl ------------------------------------------
dnl Generate passwords
dnl ------------------------------------------
dir_password=
AC_ARG_WITH(dir-password,
   AC_HELP_STRING([--with-dir-password=PASSWORD], [specify Director's password]),
   [
       if test "x$withval" != "xno" ; then
	  dir_password=$withval
       fi
   ]
)

if test "x$dir_password" = "x" ; then
   if test "x$OPENSSL" = "xnone" ; then
      key=`autoconf/randpass 33`
   else
      key=`openssl rand -base64 33`
   fi
   dir_password=$key
fi

fd_password=
AC_ARG_WITH(fd-password,
   AC_HELP_STRING([--with-fd-password=PASSWORD], [specify Client's password]),
   [
       if test "x$withval" != "xno" ; then
	  fd_password=$withval
       fi
   ]
)

if test "x$fd_password" = "x" ; then
   if test "x$OPENSSL" = "xnone" ; then
      key=`autoconf/randpass 37`
   else
      key=`openssl rand -base64 33`
   fi
   fd_password=$key
fi

sd_password=
AC_ARG_WITH(sd-password,
   AC_HELP_STRING([--with-sd-password=PASSWORD], [specify Storage daemon's password]),
   [
       if test "x$withval" != "xno" ; then
	  sd_password=$withval
       fi
   ]
)

if test "x$sd_password" = "x" ; then
   if test "x$OPENSSL" = "xnone" ; then
      key=`autoconf/randpass 41`
   else
      key=`openssl rand -base64 33`
   fi
   sd_password=$key
fi

mon_dir_password=
AC_ARG_WITH(mon-dir-password,
   AC_HELP_STRING([--with-mon-dir-password=PASSWORD], [specify Director's password used by the monitor]),
   [
       if test "x$withval" != "xno" ; then
	  mon_dir_password=$withval
       fi
   ]
)

if test "x$mon_dir_password" = "x" ; then
   if test "x$OPENSSL" = "xnone" ; then
      key=`autoconf/randpass 33`
   else
      key=`openssl rand -base64 33`
   fi
   mon_dir_password=$key
fi

mon_fd_password=
AC_ARG_WITH(mon-fd-password,
   AC_HELP_STRING([--with-mon-fd-password=PASSWORD], [specify Client's password used by the monitor]),
   [
       if test "x$withval" != "xno" ; then
	  mon_fd_password=$withval
       fi
   ]
)

if test "x$mon_fd_password" = "x" ; then
   if test "x$OPENSSL" = "xnone" ; then
      key=`autoconf/randpass 37`
   else
      key=`openssl rand -base64 33`
   fi
   mon_fd_password=$key
fi

mon_sd_password=
AC_ARG_WITH(mon-sd-password,
   AC_HELP_STRING([--with-mon-sd-password=PASSWORD], [specify Storage daemon's password used by the monitor]),
   [
       if test "x$withval" != "xno" ; then
	  mon_sd_password=$withval
       fi
   ]
)

if test "x$mon_sd_password" = "x" ; then
   if test "x$OPENSSL" = "xnone" ; then
      key=`autoconf/randpass 41`
   else
      key=`openssl rand -base64 33`
   fi
   mon_sd_password=$key
fi

AC_SUBST(dir_password)
AC_SUBST(fd_password)
AC_SUBST(sd_password)
AC_SUBST(mon_dir_password)
AC_SUBST(mon_fd_password)
AC_SUBST(mon_sd_password)

dnl
dnl Pickup any database name
dnl
db_name=bareos
AC_ARG_WITH(db_name,
   AC_HELP_STRING([--with-db-name=DBNAME], [specify database name @<:@default=bareos@:>@]),
   [
       if test "x$withval" != "x" ; then
	  db_name=$withval
       fi
   ]
)
AC_SUBST(db_name)

db_user=bareos
AC_ARG_WITH(db_user,
   AC_HELP_STRING([--with-db-user=UNAME], [specify database user @<:@default=bareos@:>@]),
   [
       if test "x$withval" != "x" ; then
	  db_user=$withval
       fi
   ]
)
AC_SUBST(db_user)

db_password=
AC_ARG_WITH(db_password,
   AC_HELP_STRING([--with-db-password=PWD], [specify database password @<:@default=*none*@:>@]),
   [
       if test "x$withval" != "x" ; then
	  db_password=$withval
       fi
   ]
)
AC_SUBST(db_password)

dnl
dnl Pickup a database port
dnl
db_port=" "
AC_ARG_WITH(db_port,
   AC_HELP_STRING([--with-db-port=DBPORT], [specify a database port @<:@default=null@:>@]),
   [
       if test "x$withval" != "x" ; then
	  db_port=$withval
       fi
   ]
)
AC_SUBST(db_port)

#
# Handle users and groups for each daemon
#
dir_user=
AC_ARG_WITH(dir_user,
   AC_HELP_STRING([--with-dir-user=USER], [specify user for Director daemon]),
   [
       if test "x$withval" != "x" ; then
	   dir_user=$withval
       fi
   ]
)

dir_group=
AC_ARG_WITH(dir_group,
   AC_HELP_STRING([--with-dir-group=GROUP], [specify group for Director daemon]),
   [
       if test "x$withval" != "x" ; then
	  dir_group=$withval
       fi
   ]
)

sd_user=
AC_ARG_WITH(sd_user,
   AC_HELP_STRING([--with-sd-user=USER], [specify user for Storage daemon]),
   [
       if test "x$withval" != "x" ; then
	  sd_user=$withval
       fi
   ]
)

sd_group=
AC_ARG_WITH(sd_group,
   AC_HELP_STRING([--with-sd-group=GROUP], [specify group for Storage daemon]),
   [
       if test "x$withval" != "x" ; then
	  sd_group=$withval
       fi
   ]
)

fd_user=
AC_ARG_WITH(fd_user,
   AC_HELP_STRING([--with-fd-user=USER], [specify user for File daemon]),
   [
       if test "x$withval" != "x" ; then
	  fd_user=$withval
       fi
   ]
)

fd_group=
AC_ARG_WITH(fd_group,
   AC_HELP_STRING([--with-fd-group=GROUP], [specify group for File daemon]),
   [
       if test "x$withval" != "x" ; then
	  fd_group=$withval
       fi
   ]
)

AC_SUBST(dir_user)
AC_SUBST(dir_group)
AC_SUBST(sd_user)
AC_SUBST(sd_group)
AC_SUBST(fd_user)
AC_SUBST(fd_group)

dnl
dnl allow setting default executable permissions
dnl
SBINPERM=0750
AC_ARG_WITH(sbin-perm,
   AC_HELP_STRING([--with-sbin-perm=MODE], [specify permissions for sbin binaries @<:@default=0750@:>@]),
   [
       if test "x$withval" != "x" ; then
	  SBINPERM=$withval
       fi
   ]
)

AC_SUBST(SBINPERM)

dnl -------------------------------------------
dnl NDMP (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(ndmp,
   AC_HELP_STRING([--enable-ndmp], [enable build of NDMP support @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  AC_DEFINE(HAVE_NDMP, 1, [Define to 1 if NDMP support should be enabled])
	  support_ndmp=yes
       fi
   ]
)

if test x$support_ndmp = xyes; then
   NDMP_DIR="src/ndmp"
   NDMP_LIBS="-L../ndmp -lbareosndmp"
   NDMP_DEPS="../ndmp/libbareosndmp\$(DEFAULT_ARCHIVE_TYPE)"
else
   NDMP_DIR=""
   NDMP_LIBS=""
   NDMP_DEPS=""
fi
AC_SUBST(NDMP_DIR)
AC_SUBST(NDMP_LIBS)
AC_SUBST(NDMP_DEPS)

dnl -------------------------------------------
dnl LMDB (default off)
dnl -------------------------------------------
AC_ARG_ENABLE(lmdb,
   AC_HELP_STRING([--enable-lmdb], [enable build of LMDB support @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  AC_DEFINE(HAVE_LMDB, 1, [Define to 1 if LMDB support should be enabled])
	  support_lmdb=yes
       fi
   ]
)

if test x$support_lmdb = xyes; then
   LMDB_DIR="src/lmdb"
   LMDB_LIBS="-L../lmdb -lbareoslmdb"
   LMDB_DEPS="../lmdb/libbareoslmdb\$(DEFAULT_ARCHIVE_TYPE)"
else
   LMDB_DIR=""
   LMDB_LIBS=""
   LMDB_DEPS=""
fi
AC_SUBST(LMDB_DIR)
AC_SUBST(LMDB_LIBS)
AC_SUBST(LMDB_DEPS)

dnl -------------------------------------------
dnl enable batch attribute DB insert (default on)
dnl -------------------------------------------
support_batch_insert=yes
AC_ARG_ENABLE(batch-insert,
   AC_HELP_STRING([--enable-batch-insert], [enable the DB batch insert code @<:@default=yes@:>@]),
   [
       if test x$enableval = xno; then
	  support_batch_insert=no
       fi
   ]
)

if test x$support_batch_insert = xyes; then
   AC_DEFINE(USE_BATCH_FILE_INSERT, 1, [Define to 1 if DB batch insert code enabled])
fi

dnl --------------------------------------------------
dnl dynamic loading of catalog backends
dnl --------------------------------------------------
use_dynamic_cats_backends=no
AC_ARG_ENABLE(dynamic-cats-backends,
   AC_HELP_STRING([--enable-dynamic-cats-backends], [enable dynamic loading of catalog backends @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
          use_dynamic_cats_backends=yes
          AC_DEFINE(HAVE_DYNAMIC_CATS_BACKENDS, 1, [Define to 1 if dynamic loading of catalog backends is enabled])
       fi
   ]
)

if test "x$use_libtool" != "xyes" -a "x$use_dynamic_cats_backends" = "xyes"; then
   echo ""
   echo "You specified --enable-dynamic-cats-plugins but disabled libtool with --disable-libtool"
   echo "We only support dynamic loading using libtool so either disable dynamic loading or enable libtool"
   echo ""
   echo "Aborting the configuration ..."
   echo " "
   echo " "
   exit 1
fi

dnl --------------------------------------------------
dnl sql pooling support
dnl --------------------------------------------------
use_sql_pooling=no
AC_ARG_ENABLE(sql-pooling,
   AC_HELP_STRING([--enable-sql-pooling], [enable sql pooling support @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
          use_sql_pooling=yes
          AC_DEFINE(HAVE_SQL_POOLING, 1, [Define to 1 if sql pooling is enabled])
       fi
   ]
)

dnl ------------------------------------------------
dnl Bareos check for various SQL database engines
dnl ------------------------------------------------

dnl
dnl Set uncomment_dbi by default to '#' if DBI is enabled this will get reset
dnl
uncomment_dbi="#"

BA_CHECK_POSTGRESQL_DB

BA_CHECK_MYSQL_DB

BA_CHECK_SQLITE3_DB

#BA_CHECK_INGRES_DB

#BA_CHECK_DBI_DB

#BA_CHECK_DBI_DRIVER

dnl -------------------------------------------
dnl If no batch insert backend are enable set
dnl variable to None
dnl -------------------------------------------
if test -z "${batch_insert_db_backends}"; then
   batch_insert_db_backends="None"
fi

dnl -------------------------------------------
dnl Check to see if we are only building a client then we can skip
dnl all of these checks as no backend is build anyhow.
dnl -------------------------------------------
if test x$build_client_only != xyes; then
   dnl -------------------------------------------
   dnl Make sure at least one database backend is found
   dnl -------------------------------------------
   if test "x${db_backends}" = "x" ; then
      echo " "
      echo " "
      echo "You have not specified either --enable-client-only or one of the"
      echo "supported databases: MySQL, PostgreSQL, or SQLite3."
      echo "This is not permitted. Please reconfigure."
      echo " "
      echo "Aborting the configuration ..."
      echo " "
      echo " "
      exit 1
   fi

   dnl -------------------------------------------
   dnl See how many catalog backends are configured.
   dnl -------------------------------------------
   case `echo $DB_BACKENDS | wc -w | sed -e 's/^ *//'` in
      1)
         DEFAULT_DB_TYPE="${DB_BACKENDS}"
         if test x$use_libtool = xno; then
	    SHARED_CATALOG_TARGETS=""
         else
	    SHARED_CATALOG_TARGETS="libbareoscats-${DEFAULT_DB_TYPE}.la"
         fi
         ;;
      *)
         dnl ------------------------------------------------
         dnl Set the default backend to the first backend found
         dnl ------------------------------------------------
         DEFAULT_DB_TYPE=`echo ${DB_BACKENDS} | cut -d' ' -f1`

         dnl ------------------------------------------------
         dnl For multiple backend we need libtool support.
         dnl ------------------------------------------------
         if test x$use_libtool = xno; then
	    echo " "
	    echo " "
	    echo "You have specified two or more of the"
	    echo "supported databases: MySQL, PostgreSQL, or SQLite3."
	    echo "This is not permitted when not using libtool Please reconfigure."
	    echo " "
	    echo "Aborting the configuration ..."
	    echo " "
	    echo " "
	    exit 1
         fi

         SHARED_CATALOG_TARGETS=""
         for db_type in ${DB_BACKENDS}
         do
	    if test -z "${SHARED_CATALOG_TARGETS}"; then
	       SHARED_CATALOG_TARGETS="libbareoscats-${db_type}.la"
	    else
	       SHARED_CATALOG_TARGETS="${SHARED_CATALOG_TARGETS} libbareoscats-${db_type}.la"
	    fi
         done
         ;;
   esac
fi

dnl -------------------------------------------
dnl When we are using dynamic catalog backends
dnl disable the install of a default catalog backend
dnl -------------------------------------------
if test x$use_dynamic_cats_backends = xyes; then
   LIBTOOL_INSTALL_DEFAULT_BACKEND_TARGET=""
else
   LIBTOOL_INSTALL_DEFAULT_BACKEND_TARGET="libtool-install-default-backend"
fi

dnl -------------------------------------------
dnl Unset DB_LIBS when using libtool as we link the
dnl shared library using the right database lib no need to
dnl set DB_LIBS which is only used for non shared versions
dnl of the backends.
dnl -------------------------------------------
if test x$use_libtool = xyes; then
   DB_LIBS=""
fi

AC_SUBST(uncomment_dbi)
AC_SUBST(DB_BACKENDS)
AC_SUBST(DB_LIBS)
AC_SUBST(DEFAULT_DB_TYPE)
AC_SUBST(LIBTOOL_INSTALL_DEFAULT_BACKEND_TARGET)
AC_SUBST(SHARED_CATALOG_TARGETS)

AC_DEFINE(PROTOTYPES, 1, [Define if you need function prototypes])

dnl --------------------------------------------------------------------------
dnl Supply default CFLAGS, if not specified by `CFLAGS=flags ./configure'
dnl
if test -z "$CFLAGS" -o "$CFLAGS" = "-g -O2"; then
   if test -z "$CCOPTS"; then
      CCOPTS='-g -O2 -Wall'
   fi
   CFLAGS="$CCOPTS"
fi

dnl A few others
AC_EXEEXT

dnl See if we can use 64 bit file addresses
largefile_support="no"
AC_BRS_LARGEFILE

AC_PATH_XTRA

dnl --------------------------------------------------------------------------
dnl CHECKING FOR HEADER FILES
dnl --------------------------------------------------------------------------
AC_CHECK_HEADERS( \
   assert.h \
   dl.h \
   dlfcn.h \
   fcntl.h \
   grp.h \
   pwd.h \
   libc.h \
   limits.h \
   stdarg.h \
   stdlib.h \
   stdint.h \
   inttypes.h \
   string.h \
   strings.h \
   termios.h \
   termcap.h \
   term.h \
   unistd.h \
   sys/bitypes.h \
   sys/byteorder.h \
   sys/ioctl.h \
   sys/select.h \
   sys/socket.h \
   sys/sockio.h \
   sys/stat.h \
   sys/time.h \
   sys/types.h \
   arpa/nameser.h \
   mtio.h \
   sys/dl.h \
   sys/mtio.h \
   sys/tape.h \
   regex.h \
)
AC_HEADER_STDC
AC_HEADER_MAJOR
AC_HEADER_DIRENT
AC_HEADER_STAT
AC_HEADER_SYS_WAIT
AC_HEADER_TIME
AC_STRUCT_ST_BLKSIZE
AC_STRUCT_ST_BLOCKS
AC_STRUCT_TIMEZONE

dnl --------------------------------------------------------------------------
dnl Check for utime.h structure
dnl --------------------------------------------------------------------------
AC_CACHE_CHECK(for utime.h, ba_cv_header_utime_h,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	      #include <utime.h>
	  ], [
	      struct utimbuf foo
	  ], [
	      ba_cv_header_utime_h=yes
	  ], [
	      ba_cv_header_utime_h=no
	  ]
       )
   ]
)
test $ba_cv_header_utime_h = yes && AC_DEFINE(HAVE_UTIME_H, 1, [Define to 1 if you have the <utime.h> header file.])

dnl --------------------------------------------------------------------------
dnl Check for socklen_t
dnl --------------------------------------------------------------------------
AC_CACHE_CHECK(for socklen_t, ba_cv_header_socklen_t,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	      #include <sys/socket.h>
	  ], [
	      socklen_t x
	  ], [
	     ba_cv_header_socklen_t=yes
	  ], [
	     ba_cv_header_socklen_t=no
	  ]
       )
   ]
)
test $ba_cv_header_socklen_t = yes && AC_DEFINE(HAVE_SOCKLEN_T, 1, [Define to 1 if socklen_t exists])

dnl --------------------------------------------------------------------------
dnl Check for ioctl request type
dnl --------------------------------------------------------------------------
AC_LANG(C++)
AC_CACHE_CHECK(for ioctl_req_t, ba_cv_header_ioctl_req_t,
   [
       AC_TRY_COMPILE(
	  [
	      #include <unistd.h>
	      #include <sys/types.h>
	      #include <sys/ioctl.h>
	  ], [
	      int (*d_ioctl)(int fd, unsigned long int request, ...);
	      d_ioctl = ::ioctl;
	  ], [
	     ba_cv_header_ioctl_req_t=yes
	  ], [
	     ba_cv_header_ioctl_req_t=no
	  ]
       )
   ]
)
test $ba_cv_header_ioctl_req_t = yes && AC_DEFINE(HAVE_IOCTL_ULINT_REQUEST, 1, [Define to 1 if ioctl request is unsigned long int])

dnl Note: it is more correct to use AC_LANG(C++) but some of the older
dnl   *BSD systems still use old style C prototypes, which are wrong with
dnl   compiled with a C++ compiler.
AC_LANG(C)

dnl --------------------------------------------------------------------------
dnl Check for typeof()
dnl --------------------------------------------------------------------------
AC_LANG_PUSH(C++)
AC_CACHE_CHECK(for typeof, ba_cv_have_typeof,
   [
       AC_TRY_RUN(
	  [
	      main(){char *a = 0; a = (typeof a)a;}
	  ], [
	      ba_cv_have_typeof=yes
	  ], [
	      ba_cv_have_typeof=no
	  ], [
	      ba_cv_have_typeof=no
	  ]
       )
   ]
)
test $ba_cv_have_typeof = yes && AC_DEFINE([HAVE_TYPEOF], 1, [Define to 1 if compiler has typeof])
AC_LANG_POP(C++)

AC_C_CONST

AC_C_BIGENDIAN([AC_DEFINE(HAVE_BIG_ENDIAN, 1, [Big Endian])], [AC_DEFINE(HAVE_LITTLE_ENDIAN, 1, [Little Endian])])

dnl --------------------------------------------------------------------------
dnl CHECKING FOR FILESYSTEM TYPE
dnl --------------------------------------------------------------------------
AC_MSG_CHECKING(how to get filesystem type)
fstype=no
# The order of these tests is important.
AC_TRY_CPP(
   [
       #include <sys/statvfs.h>
       #include <sys/fstyp.h>
   ],
   AC_DEFINE(FSTYPE_STATVFS, 1, [Define to 1 if you have SVR4 statvfs to get filesystem type]) fstype=SVR4
)
if test $fstype = no; then
   AC_TRY_CPP(
      [
	  #include <sys/statfs.h>
	  #include <sys/fstyp.h>
      ],
      AC_DEFINE(FSTYPE_USG_STATFS, 1, [Define to 1 if you have SVR3.2 statfs to get filesystem type]) fstype=SVR3
   )
fi
if test $fstype = no; then
   AC_TRY_CPP(
      [
	  #include <sys/statfs.h>
	  #include <sys/vmount.h>
      ],
      AC_DEFINE(FSTYPE_AIX_STATFS, 1, [Define to 1 if you have AIX3 statfs to get filesystem type]) fstype=AIX
   )
fi
if test $fstype = no; then
   AC_TRY_CPP(
      [
	  #include <mntent.h>
      ],
      AC_DEFINE(FSTYPE_MNTENT, 1, [Define to 1 if you have 4.3BSD getmntent to get filesystem type]) fstype=4.3BSD
   )
fi
if test $fstype = no; then
   AC_EGREP_HEADER(f_type;, sys/mount.h, AC_DEFINE(FSTYPE_STATFS, 1, [Define to 1 if you have 4.4BSD and OSF1 statfs to get filesystem type]) fstype=4.4BSD/OSF1)
fi
if test $fstype = no; then
   AC_TRY_CPP(
      [
	  #include <sys/mount.h>
	  #include <sys/fs_types.h>
      ],
      AC_DEFINE(FSTYPE_GETMNT, 1, [Define to 1 if you have Ultrix getmnt to get filesystem type]) fstype=Ultrix
   )
fi
AC_MSG_RESULT($fstype)

AC_CHECK_HEADER(sys/statvfs.h, [AC_DEFINE(HAVE_SYS_STATVFS_H, 1, [Define to 1 if you have the <sys/statvfs.h> header file.])] , )

dnl --------------------------------------------------------------------------
dnl CHECKING FOR TYPEDEFS, STRUCTURES, AND COMPILER CHARACTERISTICS.
dnl --------------------------------------------------------------------------
AC_TYPE_SIGNAL
SIGNAL_CHECK
AC_TYPE_MODE_T
AC_TYPE_UID_T
AC_TYPE_SIZE_T
AC_TYPE_PID_T
AC_TYPE_OFF_T
AC_TYPE_INTPTR_T
AC_TYPE_UINTPTR_T
AC_CHECK_TYPE(ino_t, unsigned long)
AC_CHECK_TYPE(dev_t, unsigned long)
AC_CHECK_TYPE(daddr_t, long)
AC_CHECK_TYPE(major_t, int)
AC_CHECK_TYPE(minor_t, int)
AC_CHECK_TYPE(ssize_t, int)
AC_STRUCT_ST_BLOCKS
AC_STRUCT_ST_RDEV
AC_STRUCT_TM
AC_C_CONST

AC_CHECK_SIZEOF(char, 1)
AC_CHECK_SIZEOF(short int, 2)
AC_CHECK_SIZEOF(int, 4)
AC_CHECK_SIZEOF(long int, 4)
AC_CHECK_SIZEOF(long long int, 8)
AC_CHECK_SIZEOF(int *, 4)

dnl Check for sys/types.h types
AC_CACHE_CHECK([for u_int type], ac_cv_have_u_int,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	  ], [
	      u_int a; a = 1;
	  ], [
	      ac_cv_have_u_int="yes"
	  ], [
	      ac_cv_have_u_int="no"
	  ]
       )
   ]
)
if test "x$ac_cv_have_u_int" = "xyes" ; then
   AC_DEFINE(HAVE_U_INT, 1, [Define to 1 if you have u_int])
   have_u_int=1
fi

AC_CACHE_CHECK([for intmax_t type], ac_cv_have_intmax_t,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	  ], [
	      intmax_t a; a = 1;
	  ], [
	      ac_cv_have_intmax_t="yes"
	  ], [
	      AC_TRY_COMPILE(
		 [
		     #include <stdint.h>
		 ], [
		     intmax_t a; a = 1;
		 ], [
		     ac_cv_have_intmax_t="yes"
		 ], [
		     ac_cv_have_intmax_t="no"
		 ]
	      )
	  ]
       )
   ]
)
if test "x$ac_cv_have_intmax_t" = "xyes" ; then
   AC_DEFINE(HAVE_INTMAX_T, 1, [Define to 1 if you have intmax_t])
   have_intmax_t=1
fi

AC_CACHE_CHECK([for u_intmax_t type], ac_cv_have_u_intmax_t,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	  ], [
	      u_intmax_t a; a = 1;
	  ], [
	      ac_cv_have_u_intmax_t="yes"
	  ], [
	      AC_TRY_COMPILE(
		 [
		     #include <stdint.h>
		 ], [
		    u_intmax_t a; a = 1;
		 ], [
		    ac_cv_have_u_intmax_t="yes"
		 ], [
		    ac_cv_have_u_intmax_t="no"
		 ]
	      )
	  ]
       )
   ]
)
if test "x$ac_cv_have_u_intmax_t" = "xyes" ; then
   AC_DEFINE(HAVE_U_INTMAX_T, 1, [Define to 1 if you have u_intmax_t])
   have_u_intmax_t=1
fi

AC_CACHE_CHECK([for intXX_t types], ac_cv_have_intxx_t,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	  ], [
	      int8_t a; int16_t b; int32_t c; a = b = c = 1;
	  ], [
	      ac_cv_have_intxx_t="yes"
	  ], [
	      ac_cv_have_intxx_t="no"
	  ]
       )
   ]
)
if test "x$ac_cv_have_intxx_t" = "xyes" ; then
   AC_DEFINE(HAVE_INTXX_T, 1, [Define to 1 if you have intxx_t])
   have_intxx_t=1
fi

AC_CACHE_CHECK([for int64_t type], ac_cv_have_int64_t,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	  ], [
	      int64_t a; a = 1;
	  ], [
	      ac_cv_have_int64_t="yes"
	  ], [
	      ac_cv_have_int64_t="no"
	  ]
       )
   ]
)
if test "x$ac_cv_have_int64_t" = "xyes" ; then
   AC_DEFINE(HAVE_INT64_T, 1, [Define to 1 if you have int64_t])
   have_int64_t=1
fi

AC_CACHE_CHECK([for u_intXX_t types], ac_cv_have_u_intxx_t,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	  ], [
	      u_int8_t a; u_int16_t b; u_int32_t c; a = b = c = 1;
	  ], [
	     ac_cv_have_u_intxx_t="yes"
	  ], [
	     ac_cv_have_u_intxx_t="no"
	  ]
       )
   ]
)
if test "x$ac_cv_have_u_intxx_t" = "xyes" ; then
   AC_DEFINE(HAVE_U_INTXX_T, 1, [Define to 1 if you have u_intxx_t])
   have_u_intxx_t=1
fi

AC_CACHE_CHECK([for u_int64_t types], ac_cv_have_u_int64_t,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/types.h>
	  ], [
	      u_int64_t a; a = 1;
	  ], [
	     ac_cv_have_u_int64_t="yes"
	  ], [
	     ac_cv_have_u_int64_t="no"
	  ]
       )
   ]
)
if test "x$ac_cv_have_u_int64_t" = "xyes" ; then
   AC_DEFINE(HAVE_U_INT64_T, 1, [Define to 1 if you have u_int64_t])
   have_u_int64_t=1
fi

if (test -z "$have_u_intxx_t" || test -z "$have_intxx_t" && \
    test "x$ac_cv_header_sys_bitypes_h" = "xyes")
then
   AC_MSG_CHECKING([for intXX_t and u_intXX_t types in sys/bitypes.h])
   AC_TRY_COMPILE(
      [
	  #include <sys/bitypes.h>
      ], [
	  int8_t a; int16_t b; int32_t c;
	  u_int8_t e; u_int16_t f; u_int32_t g;
	  a = b = c = e = f = g = 1;
      ], [
	  AC_DEFINE(HAVE_U_INTXX_T, 1, [Define to 1 if you have u_intxx_t])
	  AC_DEFINE(HAVE_INTXX_T, 1, [Define to 1 if you have intxx_t])
	  AC_DEFINE(HAVE_SYS_BITYPES_H, 1, [Define to 1 if you have the <sys/bitypes.h> header file.])
	  AC_MSG_RESULT(yes)
      ], [
	  AC_MSG_RESULT(no)
      ]
   )
fi

if test -z "$have_u_intxx_t" ; then
   AC_CACHE_CHECK([for uintXX_t types], ac_cv_have_uintxx_t,
      [
	  AC_TRY_COMPILE(
	     [
		 #include <sys/types.h>
	     ], [
		 uint8_t a; uint16_t b;
		 uint32_t c; a = b = c = 1;
	     ], [
		ac_cv_have_uintxx_t="yes"
	     ], [
		ac_cv_have_uintxx_t="no"
	     ]
	  )
      ]
   )
   if test "x$ac_cv_have_uintxx_t" = "xyes" ; then
      AC_DEFINE(HAVE_UINTXX_T, 1, [Define to 1 if you have uintxx_t])
   fi
fi

if (test -z "$have_u_int64_t" || test -z "$have_int64_t" && \
    test "x$ac_cv_header_sys_bitypes_h" = "xyes")
then
   AC_MSG_CHECKING([for int64_t and u_int64_t types in sys/bitypes.h])
   AC_TRY_COMPILE(
      [
	  #include <sys/bitypes.h>
      ], [
	  int64_t a; u_int64_t b;
	  a = b = 1;
      ], [
	  AC_DEFINE(HAVE_U_INT64_T, 1, [Define to 1 if you have u_int64_t])
	  AC_DEFINE(HAVE_INT64_T, 1, [Define to 1 if you have int64_t])
	  AC_MSG_RESULT(yes)
      ], [
	  AC_MSG_RESULT(no)
      ]
   )
fi

if (test -z "$have_uintxx_t" && \
    test "x$ac_cv_header_sys_bitypes_h" = "xyes")
then
   AC_MSG_CHECKING([for uintXX_t types in sys/bitypes.h])
   AC_TRY_COMPILE(
      [
	  #include <sys/bitypes.h>
      ], [
	  uint8_t a; uint16_t b;
	  uint32_t c; a = b = c = 1;
      ], [
	  AC_DEFINE(HAVE_UINTXX_T, 1, [Define to 1 if you have uintxx_t])
	  AC_MSG_RESULT(yes)
      ], [
	  AC_MSG_RESULT(no)
      ]
   )
fi

dnl --------------------------------------------------------------------------
dnl CHECKING FOR REQUIRED LIBRARY FUNCTIONS
dnl --------------------------------------------------------------------------
AC_CHECK_FUNCS( \
   fork \
   getcwd \
   gethostname \
   getpid \
   gettimeofday \
   setpgid \
   setpgrp \
   setsid \
   signal \
   strerror \
   strncmp \
   strncpy \
   vfprintf \
   ,,
   [echo 'configure: cannot find needed function.'; exit 1]
)

AC_CHECK_DECL(
    F_CLOSEM,
    AC_DEFINE(HAVE_FCNTL_F_CLOSEM, 1, [Define to 1 if you have the fcntl F_CLOSEM flag]),
    ,
    [#include <fcntl.h>]
)

AC_CHECK_FUNC(bcopy, [AC_DEFINE(HAVE_BCOPY, 1, [Define to 1 if you have the `bcopy' function.])])
AC_CHECK_FUNC(closefrom, [AC_DEFINE(HAVE_CLOSEFROM, 1, [Define to 1 if you have the `closefrom' function.])])
AC_CHECK_FUNC(getpagesize, [AC_DEFINE(HAVE_GETPAGESIZE, 1, [Define to 1 if you have the `getpagesize' function.])])
AC_CHECK_FUNC(malloc_trim, [AC_DEFINE(HAVE_MALLOC_TRIM, 1, [Define to 1 if you have the `malloc_trim' function.])])

dnl --------------------------------------------------------------------------
dnl On Solaris check for availability of libumem a very suitable memory
dnl allocator for multithreaded programs (e.g. Bareos)
dnl --------------------------------------------------------------------------
if test x${HAVE_SUN_OS_TRUE} = x; then
    AC_CHECK_HEADER(umem.h, [AC_DEFINE(HAVE_UMEM_H, 1, [Define to 1 if you have the <umem.h> header file.])] , )
    AC_CHECK_LIB(umem, malloc,
	 [
	     LIBS="-lumem $LIBS"
	 ]
      )
fi

dnl --------------------------------------------------------------------------
dnl Checking for backtrace dump support
dnl --------------------------------------------------------------------------
AC_CHECK_FUNC(backtrace_symbols, [AC_DEFINE(HAVE_BACKTRACE_SYMBOLS, 1, [Define to 1 if you have the `backtrace_symbols' function.])] , )
AC_CHECK_FUNC(backtrace, [AC_DEFINE(HAVE_BACKTRACE, 1, [Define to 1 if you have the `backtrace' function.])] , )
AC_CHECK_HEADER(execinfo.h, [AC_DEFINE(HAVE_EXECINFO_H, 1, [Define to 1 if you have the <execinfo.h> header file.])] , )

dnl --------------------------------------------------------------------------
dnl Check explicit using C++ the cxxabi.h header which doesn't get detected
dnl otherwise.
dnl --------------------------------------------------------------------------
AC_LANG_PUSH(C++)
AC_CHECK_HEADER(cxxabi.h, [AC_DEFINE(HAVE_CXXABI_H, 1, [Define to 1 if you have the <cxxabi.h> header file.])] , )
AC_LANG_POP(C++)

dnl --------------------------------------------------------------------------
dnl Specific tests for Solaris
dnl --------------------------------------------------------------------------
if test x${HAVE_SUN_OS_TRUE} = x; then
    AC_CHECK_FUNC(addrtosymstr, [AC_DEFINE(HAVE_ADDRTOSYMSTR, 1, [Set if addrtosymstr exists])] , )
    AC_CHECK_HEADER(ucontext.h, [AC_DEFINE(HAVE_UCONTEXT_H, 1, [Define to 1 if you have the <ucontext.h> header file.])] , )
    if test X"$GCC" != "Xyes" ; then
        AC_CHECK_HEADER(demangle.h, [AC_DEFINE(HAVE_DEMANGLE_H, 1, [Define to 1 if you have the <demangle.h> header file.])] , )
        AC_CHECK_LIB(demangle, cplus_demangle,
	     [
                 AC_DEFINE(HAVE_CPLUS_DEMANGLE, 1, [Define to 1 if cplus_demangle exists in libdemangle])
	         LIBS="-ldemangle $LIBS"
	     ]
          )
   fi
fi

AC_CHECK_FUNC(fchdir, [AC_DEFINE(HAVE_FCHDIR, 1, [Define to 1 if you have the `fchdir' function.])])
AC_CHECK_FUNC(strtoll, [AC_DEFINE(HAVE_STRTOLL, 1, [Define to 1 if you have the `strtoll' function.])])
AC_CHECK_FUNC(posix_fadvise, [AC_DEFINE(HAVE_POSIX_FADVISE, 1, [Define to 1 if you have the `posix_fadvise' function.])])
AC_CHECK_FUNC(fdatasync, [AC_DEFINE(HAVE_FDATASYNC, 1, [Define to 1 if you have the `fdatasync' function.])])
AC_CHECK_FUNC(chflags, [AC_DEFINE(HAVE_CHFLAGS, 1, [Define to 1 if you have the `chflags' function.])])

AC_CHECK_FUNCS(snprintf vsnprintf gethostid fseeko)

AC_CACHE_CHECK(for va_copy, ba_cv_va_copy,
   [
       AC_TRY_LINK(
	  [
	      #include <stdarg.h>
	      void use_va_copy(va_list args){va_list args2; va_copy(args2,args); va_end(args2);}
	      void call_use_va_copy(int junk,...){va_list args; va_start(args,junk); use_va_copy(args); va_end(args);}
	  ], [
	      call_use_va_copy(1,2,3)
	  ], [
	      ba_cv_va_copy=yes
	  ], [
	      ba_cv_va_copy=no
	  ]
       )
   ]
)
test $ba_cv_va_copy = yes && AC_DEFINE(HAVE_VA_COPY, 1, [Set if va_copy exists])

dnl --------------------------------------------------------------------------
dnl CHECKING FOR THREAD SAFE FUNCTIONS
dnl --------------------------------------------------------------------------
AC_CHECK_FUNCS(localtime_r readdir_r strerror_r)

dnl --------------------------------------------------------------------------
dnl If resolver functions are not in libc check for -lnsl or -lresolv.
dnl --------------------------------------------------------------------------
AC_CHECK_FUNC(gethostbyname_r,
    [
        AC_DEFINE(HAVE_GETHOSTBYNAME_R, 1, [Define to 1 if you have the `gethostbyname_r' function.])
        AC_MSG_RESULT(using gethostbyname_r from resolver in libc)
    ], [
        AC_CHECK_LIB(nsl, gethostbyname_r,
            [
                AC_DEFINE(HAVE_GETHOSTBYNAME_R, 1, [Define to 1 if you have the `gethostbyname_r' function.])
                LIBS="-lnsl $LIBS"
	        SOCKLIBS="-lnsl $LIBS"
            ], [
                AC_CHECK_LIB(resolv, gethostbyname_r,
                    [
                        AC_DEFINE(HAVE_GETHOSTBYNAME_R, 1, [Define to 1 if you have the `gethostbyname_r' function.])
                        LIBS="-lresolv $LIBS"
	                SOCKLIBS="-lresolv $LIBS"
                    ]
                )
            ]
        )
    ]
)

AC_CHECK_FUNC(inet_pton, [AC_DEFINE(HAVE_INET_PTON, 1, [Define to 1 if you have the `inet_pton' function.])])
AC_CHECK_FUNC(inet_ntop, [AC_DEFINE(HAVE_INET_NTOP, 1, [Define to 1 if you have the `inet_ntop' function.])])
AC_CHECK_FUNC(gethostbyname2, [AC_DEFINE(HAVE_GETHOSTBYNAME2, 1, [Define to 1 if you have the `gethostbyname2' function.])])

dnl ----------------------------
dnl check sa_len of sockaddr
dnl ----------------------------
AC_CACHE_CHECK(for struct sockaddr has a sa_len field, ac_cv_struct_sockaddr_sa_len,
   [
       AC_TRY_COMPILE(
	  [
	      #include <sys/socket.h>
	  ], [
	      struct sockaddr s; s.sa_len;
	  ], [
	     ac_cv_struct_sockaddr_sa_len=yes
	  ], [ac_cv_struct_sockaddr_sa_len=no
	  ]
       )
   ]
)

if test $ac_cv_struct_sockaddr_sa_len = yes; then
  AC_DEFINE(HAVE_SA_LEN, 1, [Define to 1 if sa_len field exists in struct sockaddr])
fi

dnl
dnl check for working getaddrinfo()
dnl
dnl Note that if the system doesn't have gai_strerror(), we
dnl can't use getaddrinfo() because we can't get strings
dnl describing the error codes.
dnl
AC_CACHE_CHECK(for working getaddrinfo, ac_cv_working_getaddrinfo,
   [
       AC_TRY_RUN(
	  [
	      #include <netdb.h>
	      #include <string.h>
	      #include <sys/types.h>
	      #include <sys/socket.h>

	      void main(void) {
		  struct addrinfo hints, *ai;
		  int error;

		  memset(&hints, 0, sizeof(hints));
		  hints.ai_family = AF_UNSPEC;
		  hints.ai_socktype = SOCK_STREAM;
		  error = getaddrinfo("127.0.0.1", NULL, &hints, &ai);
		  if (error) {
		      exit(1);
		  }
		  if (ai->ai_addr->sa_family != AF_INET) {
		      exit(1);
		  }
		  exit(0);
	      }
	  ],[
	      ac_cv_working_getaddrinfo="yes"
	  ],[
	      ac_cv_working_getaddrinfo="no"
	  ],[
	      ac_cv_working_getaddrinfo="yes"
	  ]
       )
   ]
)
AC_CHECK_FUNC(gai_strerror, [AC_DEFINE(HAVE_GAI_STRERROR, 1, [Define to 1 if you have the `gai_strerror' function.])])

if test "$ac_cv_working_getaddrinfo" = "yes"; then
  if test "$ac_cv_func_gai_strerror" != "yes"; then
    ac_cv_working_getaddrinfo="no"
  else
    AC_DEFINE(HAVE_GETADDRINFO, 1, [Define to 1 if you have the `getaddrinfo' function.])
  fi
fi

AC_FUNC_STRFTIME
AC_FUNC_VPRINTF
AC_FUNC_ALLOCA
AC_FUNC_GETMNTENT
AC_CHECK_FUNC(getmntinfo, [AC_DEFINE(HAVE_GETMNTINFO, 1, [Define to 1 if you have the `getmntinfo' function.])])
AC_FUNC_CLOSEDIR_VOID
AC_FUNC_SETPGRP 	    dnl check for BSD setpgrp.
# AC_FUNC_FNMATCH    dnl use local version

AC_CHECK_LIB(intl, gettext, [LIBS="$LIBS -lintl"])

AC_CHECK_LIB(sun, getpwnam)

dnl
dnl Check for zlib
dnl
ZLIB_LIBS="-lz"
ZLIB_INC=""
have_zlib=no
AC_ARG_WITH(zlib,
   AC_HELP_STRING([--with-zlib@<:@=DIR@:>@], [Directory holding zlib includes/libs]),
   with_zlib_directory=${withval}
)

if test "x${with_zlib_directory}" != "xyes" && test x"${with_zlib_directory}" != "x"; then
   #
   # Make sure the $with_zlib_directory also makes sense
   #
   if test -d "${with_zlib_directory}/lib" -a -d "${with_zlib_directory}/include"; then
      ZLIB_LIBS="-L${with_zlib_directory}/lib ${ZLIB_LIBS}"
      ZLIB_INC="-I${with_zlib_directory}/include ${ZLIB_INC}"
   fi
fi

saved_LIBS="${LIBS}"
saved_CFLAGS="${CFLAGS}"
saved_CPPFLAGS="${CPPFLAGS}"
LIBS="${saved_LIBS} ${ZLIB_LIBS}"
CFLAGS="${saved_CFLAGS} ${ZLIB_INC}"
CPPFLAGS="${saved_CPPFLAGS} ${ZLIB_INC}"

AC_CHECK_HEADERS(zlib.h)

AC_MSG_CHECKING(for compressBound in zlib library)
AC_TRY_LINK(
   [
       #include <zlib.h>
   ], [
       compressBound(0);
   ], [
       AC_MSG_RESULT(yes)
       AC_DEFINE(HAVE_COMPRESS_BOUND, 1, [Define to 1 if you have compressBound])
   ], [
       AC_MSG_RESULT(no)
   ]
)

AC_MSG_CHECKING(for deflate in zlib library)
AC_TRY_LINK(
   [
       #include <zlib.h>
   ], [
       deflate(Z_NULL, 0);
   ], [
       AC_MSG_RESULT(yes)
       have_zlib="yes"
   ], [
       AC_MSG_RESULT(no)
       have_zlib="no"
   ]
)

LIBS="${saved_LIBS}"
CFLAGS="${saved_CFLAGS}"
CPPFLAGS="${saved_CPPFLAGS}"

if test "x${have_zlib}" = "xyes"; then
   AC_DEFINE(HAVE_LIBZ, 1, [Define to 1 if you have zlib])
else
   ZLIB_LIBS=""
   ZLIB_INC=""
fi

if test x$use_libtool != xno; then
   ZLIB_LIBS_NONSHARED=""
else
   ZLIB_LIBS_NONSHARED="${ZLIB_LIBS}"
fi

AC_SUBST(ZLIB_INC)
AC_SUBST(ZLIB_LIBS)
AC_SUBST(ZLIB_LIBS_NONSHARED)

dnl
dnl Check for lzo
dnl
LZO_LIBS="-llzo2"
LZO_INC=""
have_lzo=no
AC_ARG_WITH(lzo,
   AC_HELP_STRING([--with-lzo@<:@=DIR@:>@], [Directory holding lzo includes/libs]),
   with_lzo_directory=${withval}
)

if test "x${with_lzo_directory}" != "xyes" && test x"${with_lzo_directory}" != "x"; then
   #
   # Make sure the $with_lzo_directory also makes sense
   #
   if test -d "${with_lzo_directory}/lib" -a -d "${with_lzo_directory}/include"; then
      LZO_LIBS="-L${with_lzo_directory}/lib ${LZO_LIBS}"
      LZO_INC="-I${with_lzo_directory}/include ${LZO_INC}"
   fi
fi

saved_LIBS="${LIBS}"
saved_CFLAGS="${CFLAGS}"
saved_CPPFLAGS="${CPPFLAGS}"
LIBS="${saved_LIBS} ${LZO_LIBS}"
CFLAGS="${saved_CFLAGS} ${LZO_INC}"
CPPFLAGS="${saved_CPPFLAGS} ${LZO_INC}"

AC_CHECK_HEADERS(lzo/lzoconf.h)
AC_CHECK_HEADERS(lzo/lzo1x.h)

AC_MSG_CHECKING(for lzo1x_1_compress in lzo library)
AC_TRY_LINK(
   [
       #include <lzo/lzoconf.h>
       #include <lzo/lzo1x.h>
   ], [
       lzo1x_1_compress(NULL, 0, NULL, NULL, NULL);
   ], [
       AC_MSG_RESULT(yes)
       have_lzo="yes"
   ], [
       AC_MSG_RESULT(no)
       have_lzo="no"
   ]
)

LIBS="${saved_LIBS}"
CFLAGS="${saved_CFLAGS}"
CPPFLAGS="${saved_CPPFLAGS}"

if test "x${have_lzo}" = "xyes"; then
   AC_DEFINE(HAVE_LZO, 1, [Define to 1 if you have lzo lib])
else
   LZO_LIBS=""
   LZO_INC=""
fi

if test x$use_libtool != xno; then
   LZO_LIBS_NONSHARED=""
else
   LZO_LIBS_NONSHARED="${LZO_LIBS}"
fi

AC_SUBST(LZO_INC)
AC_SUBST(LZO_LIBS)
AC_SUBST(LZO_LIBS_NONSHARED)


dnl
dnl Check for fastlz
dnl
FASTLZ_LIBS="-lfastlz"
FASTLZ_INC=""
have_fastlz=no
AC_ARG_WITH(fastlz,
   AC_HELP_STRING([--with-fastlz@<:@=DIR@:>@], [Directory holding fastlz includes/libs]),
   with_fastlz_directory=${withval}
)

if test "x${with_fastlz_directory}" != "xyes" && test x"${with_fastlz_directory}" != "x"; then
   #
   # Make sure the $with_fastlz_directory also makes sense
   #
   if test -d "${with_fastlz_directory}/lib" -a -d "${with_fastlz_directory}/include"; then
      FASTLZ_LIBS="-L${with_fastlz_directory}/lib ${FASTLZ_LIBS}"
      FASTLZ_INC="-I${with_fastlz_directory}/include ${FASTLZ_INC}"
   fi
fi

saved_LIBS="${LIBS}"
saved_CFLAGS="${CFLAGS}"
saved_CPPFLAGS="${CPPFLAGS}"
LIBS="${saved_LIBS} ${FASTLZ_LIBS}"
CFLAGS="${saved_CFLAGS} ${FASTLZ_INC}"
CPPFLAGS="${saved_CPPFLAGS} ${FASTLZ_INC}"

AC_CHECK_HEADERS(fastlzlib.h)

AC_MSG_CHECKING(for fastlzlibCompress in fastlz library)
AC_TRY_LINK(
   [
       #include <fastlzlib.h>
   ], [
       fastlzlibCompress(Z_NULL, 0);
   ], [
       AC_MSG_RESULT(yes)
       have_fastlz="yes"
   ], [
       AC_MSG_RESULT(no)
       have_fastlz="no"
   ]
)

LIBS="${saved_LIBS}"
CFLAGS="${saved_CFLAGS}"
CPPFLAGS="${saved_CPPFLAGS}"

if test "x${have_fastlz}" = "xyes"; then
   AC_DEFINE(HAVE_FASTLZ, 1, [Define to 1 if you have fastlz lib])
else
   FASTLZ_LIBS=""
   FASTLZ_INC=""
fi

if test x$use_libtool != xno; then
   FASTLZ_LIBS_NONSHARED=""
else
   FASTLZ_LIBS_NONSHARED="${FASTLZ_LIBS}"
fi

AC_SUBST(FASTLZ_INC)
AC_SUBST(FASTLZ_LIBS)
AC_SUBST(FASTLZ_LIBS_NONSHARED)

dnl
dnl Check if we have AFS on this system
dnl
AFS_CFLAGS=""
AFS_LIBS=""
support_afs=auto
AC_ARG_ENABLE(afs,
   AC_HELP_STRING([--disable-afs], [disable afs support @<:@default=auto@:>@]),
   [
       if test x$enableval = xyes; then
	  support_afs=yes
       elif test x$enableval = xno; then
	  support_afs=no
       fi
   ]
)

have_afs=no
if test x$support_afs = xyes -o x$support_afs = xauto; then
   AC_ARG_WITH(afsdir,
      AC_HELP_STRING([--with-afsdir@<:@=DIR@:>@], [Directory holding AFS includes/libs]),
      with_afsdir=$withval
   )

   dnl
   dnl Search in standard places, or --with-afsdir not specified
   dnl
   if test x$with_afsdir = x; then
      for root in /usr /usr/local; do
	 if test -d ${root}/include/afs/ ; then
	    with_afsdir=${root}
	    break
	 fi
	 if test -d ${root}/include/openafs/afs/ ; then
	    with_afsdir=${root}
	    break
	 fi
      done
   fi

   if test -d ${with_afsdir}/include/afs/ ; then
      AFS_CFLAGS="-I${with_afsdir}/include"
   else
      if test -d ${with_afsdir}/include/openafs/afs/ ; then
         AFS_CFLAGS="-I${with_afsdir}/include/openafs"
      fi
   fi

   saved_CFLAGS="${CFLAGS}"
   saved_CPPFLAGS="${CPPFLAGS}"
   CFLAGS="${AFS_CFLAGS} ${saved_CFLAGS}"
   CPPFLAGS="${AFS_CFLAGS} ${saved_CPPFLAGS}"

   AC_CHECK_HEADERS(afs/afsint.h)
   AC_TRY_CPP(
       [
          #include <afs/afsint.h>
          #include <afs/venus.h>
       ],
       AC_DEFINE(HAVE_AFS_VENUS_H,1,[Define to 1 if you have the <afs/venus.h> header file.])
   )

   CFLAGS="${saved_CFLAGS}"
   CPPFLAGS="${saved_CPPFLAGS}"

   dnl
   dnl See if we can find a libsys with the pioctl symbol in there
   dnl
   AC_MSG_CHECKING(for pioctl in AFS libsys)
   for dir in ${with_afsdir}/lib \
              ${with_afsdir}/lib/afs \
              ${with_afsdir}/lib/openafs \
              ${with_afsdir}/lib64 \
              ${with_afsdir}/lib64/afs \
              ${with_afsdir}/lib64/openafs
   do
      for arch_type in .a .so
      do
	 A=`test -f ${dir}/libsys${arch_type} && nm ${dir}/libsys${arch_type} 2>/dev/null | grep pioctl`
	 pkg=$?
	 if test $pkg = 0; then
	    have_afs=yes
	    AFS_LIBS="-L${dir} -lsys -lrx -llwp"
	    break
	 fi
      done
   done

   if test $have_afs = yes; then
      AC_MSG_RESULT(yes)
   else
      AC_MSG_RESULT(no)
   fi

   if test x$support_afs = xyes -a $have_afs != yes; then
      AC_MSG_ERROR([afs support explicitly enabled but no supported afs implementation found,
  please either load the afs libraries or rerun configure without --enable-afs])
   else
      if test $have_afs = yes; then
	 AC_DEFINE(HAVE_AFS,1,[Define to 1 if your system has AFS support])
	 AC_DEFINE(HAVE_AFS_ACL,1,[Andrew FileSystem ACL support])
      fi
   fi
fi

if test x$use_libtool != xno; then
   AFS_LIBS_NONSHARED=""
else
   AFS_LIBS_NONSHARED="${AFS_LIBS}"
fi

AC_SUBST(AFS_CFLAGS)
AC_SUBST(AFS_LIBS)
AC_SUBST(AFS_LIBS_NONSHARED)

dnl
dnl Check for ACL support and libraries
dnl
ACL_LIBS=""
support_acl=auto
AC_ARG_ENABLE(acl,
   AC_HELP_STRING([--disable-acl], [disable acl support @<:@default=auto@:>@]),
   [
       if test x$enableval = xyes; then
	  support_acl=yes
       elif test x$enableval = xno; then
	  support_acl=no
       fi
   ]
)

have_acl=no
have_extended_acl=no
if test x$support_acl = xyes -o x$support_acl = xauto; then
   AC_CHECK_HEADER(sys/acl.h, [ AC_DEFINE(HAVE_SYS_ACL_H, 1, [Define to 1 if you have the <sys/acl.h> header file.])] , )

   dnl
   dnl First check for acl_get_file in libc
   dnl
   AC_CHECK_FUNC(acl_get_file,
      [
	  have_acl=yes
      ]
   )

   dnl
   dnl Check for acl_get_file in libacl (Linux)
   dnl
   if test $have_acl = no; then
      AC_CHECK_LIB(acl, acl_get_file,
	 [
	     have_acl=yes
             if test $have_afs = yes; then
                dnl
                dnl Because of possible naming conflict with AFS libacl make sure we use the one in /usr/lib64 or /usr/lib !!!
                dnl
                if test -d /usr/lib64/; then
                   ACL_LIBS="-L/usr/lib64 -lacl $ACL_LIBS"
                else
                   ACL_LIBS="-L/usr/lib -lacl $ACL_LIBS"
                fi
             else
                ACL_LIBS="-lacl $ACL_LIBS"
             fi
	 ]
      )
   fi

   dnl
   dnl Check for acl_get_file in libpacl (OSF1)
   dnl and if ACL_TYPE_DEFAULT_DIR is defined.
   dnl
   if test $have_acl = no -a \
	   x${HAVE_OSF1_OS_TRUE} = x; then
      AC_CHECK_LIB(pacl, acl_get_file,
	 [
	     have_acl=yes
	     ACL_LIBS="-lpacl $ACL_LIBS"
	 ]
      )

      AC_MSG_CHECKING(for ACL_TYPE_DEFAULT_DIR in acl.h include file)
      grep ACL_TYPE_DEFAULT_DIR /usr/include/sys/acl.h > /dev/null 2>&1
      if test $? = 0; then
         AC_DEFINE(HAVE_ACL_TYPE_DEFAULT_DIR,1,[Defines if your system have the ACL_TYPE_DEFAULT_DIR acl type])
         AC_MSG_RESULT(yes)
      else
         AC_MSG_RESULT(no)
      fi
   fi

   dnl
   dnl On OSX check for availability of ACL_TYPE_EXTENDED
   dnl
   if test $have_acl = yes -a \
           x${HAVE_DARWIN_OS_TRUE} = x; then
      AC_MSG_CHECKING(for ACL_TYPE_EXTENDED in acl.h include file)
      grep ACL_TYPE_EXTENDED /usr/include/sys/acl.h > /dev/null 2>&1
      if test $? = 0; then
         AC_DEFINE(HAVE_ACL_TYPE_EXTENDED,1,[Defines if your system have the ACL_TYPE_EXTENDED acl type])
         AC_MSG_RESULT(yes)
      else
         AC_MSG_RESULT(no)
      fi
   fi

   dnl
   dnl On FreeBSD check for availability of ACL_TYPE_NFS4
   dnl
   if test $have_acl = yes -a \
           x${HAVE_FREEBSD_OS_TRUE} = x; then
      AC_MSG_CHECKING(for ACL_TYPE_NFS4 in acl.h include file)
      grep ACL_TYPE_NFS4 /usr/include/sys/acl.h > /dev/null 2>&1
      if test $? = 0; then
         AC_DEFINE(HAVE_ACL_TYPE_NFS4,1,[Defines if your system have the ACL_TYPE_NFS4 acl type])
         AC_MSG_RESULT(yes)
      else
         AC_MSG_RESULT(no)
      fi
   fi

   dnl
   dnl Check for acltotext and acl_totext (Solaris)
   dnl
   if test $have_acl = no -a \
	   x${HAVE_SUN_OS_TRUE} = x; then
      AC_CHECK_LIB(sec, acltotext,
	 [
	     have_acl=yes
	     ACL_LIBS="-lsec $ACL_LIBS"

	     AC_CHECK_LIB(sec, acl_totext,
		[
		    have_extended_acl=yes
		]
	     )
	 ]
      )
   fi

   dnl
   dnl Check for acl_get and aclx_get (AIX)
   dnl
   if test $have_acl = no -a \
	   x${HAVE_AIX_OS_TRUE} = x; then
      AC_CHECK_FUNC(acl_get,
	 [
	     have_acl=yes

	     AC_CHECK_FUNC(aclx_get,
		[
		    have_extended_acl=yes
		]
	     )
	 ]
      )
   fi

   if test x$support_acl = xyes -a $have_acl != yes; then
      AC_MSG_ERROR([acl support explicitly enabled but no supported acl implementation found,
  please either load the acl libraries or rerun configure without --enable-acl])
   else
      if test $have_acl = yes; then
	 AC_DEFINE([HAVE_ACL], 1, [Define to 1 if you want Normal acl support])
      fi

      if test $have_extended_acl = yes; then
	 AC_DEFINE([HAVE_EXTENDED_ACL], 1, [Define to 1 if you want Extended acl support])
      fi
   fi
fi

if test x$use_libtool != xno; then
   ACL_LIBS_NONSHARED=""
else
   ACL_LIBS_NONSHARED="${ACL_LIBS}"
fi

AC_SUBST(ACL_LIBS)
AC_SUBST(ACL_LIBS_NONSHARED)

dnl
dnl Check for XATTR support
dnl
XATTR_LIBS=""
support_xattr=auto
AC_ARG_ENABLE(xattr,
   AC_HELP_STRING([--disable-xattr], [disable xattr support @<:@default=auto@:>@]),
   [
       if test x$enableval = xyes; then
	  support_xattr=yes
       elif test x$enableval = xno; then
	  support_xattr=no
       fi
   ]
)

have_xattr=no
if test x$support_xattr = xyes -o x$support_xattr = xauto; then
   dnl
   dnl First check for *BSD support
   dnl When running on a BSD variant
   dnl
   if test x${HAVE_FREEBSD_OS_TRUE} = x -o \
	   x${HAVE_NETBSD_OS_TRUE} = x -o \
	   x${HAVE_OPENBSD_OS_TRUE} = x; then
      AC_CHECK_HEADER(sys/extattr.h, [AC_DEFINE(HAVE_SYS_EXTATTR_H, 1, [Define to 1 if you have the <sys/extattr.h> header file.])] , )
      AC_CHECK_HEADER(libutil.h, [AC_DEFINE(HAVE_LIBUTIL_H, 1, [Define to 1 if you have the <libutil.h> header file.])] , )
      AC_CHECK_FUNCS(extattr_get_link extattr_set_link extattr_list_link,
	 [
	     have_xattr=yes
	     AC_DEFINE([HAVE_EXTATTR_GET_LINK], 1, [Define to 1 if you have the `extattr_get_link' function.])
	     AC_DEFINE([HAVE_EXTATTR_SET_LINK], 1, [Define to 1 if you have the `extattr_set_link' function.])
	     AC_DEFINE([HAVE_EXTATTR_LIST_LINK], 1, [Define to 1 if you have the `extattr_list_link' function.])
	 ]
      )

      if test $have_xattr = no; then
	 AC_CHECK_FUNCS(extattr_get_file extattr_set_file extattr_list_file,
	    [
		have_xattr=yes
		AC_DEFINE([HAVE_EXTATTR_GET_FILE], 1, [Define to 1 if you have the `extattr_get_file' function.])
		AC_DEFINE([HAVE_EXTATTR_SET_FILE], 1, [Define to 1 if you have the `extattr_set_file' function.])
		AC_DEFINE([HAVE_EXTATTR_LIST_FILE], 1, [Define to 1 if you have the `extattr_list_file' function.])
	    ]
	 )
      fi

      if test $have_xattr = yes; then
	 have_extattr_string_in_libc=no
	 AC_CHECK_FUNCS(extattr_namespace_to_string extattr_string_to_namespace,
	    [
		have_extattr_string_in_libc=yes
		AC_DEFINE([HAVE_EXTATTR_NAMESPACE_TO_STRING], 1, [Define to 1 if you have the `extattr_namespace_to_string' function.])
		AC_DEFINE([HAVE_EXTATTR_STRING_TO_NAMESPACE], 1, [Define to 1 if you have the `extattr_string_to_namespace' function.])
	    ]
	 )

	 dnl
	 dnl If extattr_namespace_to_string and extattr_string_to_namespace are not in libc see if they are in libutil
	 dnl
	 if test $have_extattr_string_in_libc = no; then
	    AC_CHECK_LIB(util, extattr_namespace_to_string extattr_string_to_namespace,
	       [
		   AC_DEFINE([HAVE_EXTATTR_NAMESPACE_TO_STRING], 1, [Define to 1 if you have the `extattr_namespace_to_string' function.])
		   AC_DEFINE([HAVE_EXTATTR_STRING_TO_NAMESPACE], 1, [Define to 1 if you have the `extattr_string_to_namespace' function.])
		   XATTR_LIBS="-lutil $XATTR_LIBS"
	       ]
	    )
	 fi
      fi
   fi

   dnl
   dnl If we failed to find *BSD support try the AIX implementation of extented attributes (EA)
   dnl When running on AIX
   dnl
   if test $have_xattr = no -a \
	   x${HAVE_AIX_OS_TRUE} = x; then
      AC_CHECK_HEADER(sys/ea.h, [AC_DEFINE(HAVE_SYS_EA_H, 1, [Define to 1 if you have the <sys/ea.h> header file.])] , )
      AC_CHECK_FUNCS(llistea lgetea lsetea,
	 [
	     have_xattr=yes
	     AC_DEFINE([HAVE_LLISTEA], 1, [Define to 1 if you have the `llistea' function.])
	     AC_DEFINE([HAVE_LGETEA], 1, [Define to 1 if you have the `lgetea' function.])
	     AC_DEFINE([HAVE_LSETEA], 1, [Define to 1 if you have the `lsetea' function.])
	 ]
      )

      if test $have_xattr = no; then
	 AC_CHECK_FUNCS(listea getea setea,
	    [
		have_xattr=yes
		AC_DEFINE([HAVE_LISTEA], 1, [Define to 1 if you have the `listea' function.])
		AC_DEFINE([HAVE_GETEA], 1, [Define to 1 if you have the `getea' function.])
		AC_DEFINE([HAVE_SETEA], 1, [Define to 1 if you have the `setea' function.])
	    ]
	 )
      fi
   fi

   dnl
   dnl If we failed to find AIX support try the TRU64 implementation of extented attributes
   dnl when running on a TRU64 OS.
   dnl
   if test $have_xattr = no -a \
	   x${HAVE_OSF1_OS_TRUE} = x; then
      AC_CHECK_HEADER(sys/proplist.h, [AC_DEFINE(HAVE_SYS_PROPLIST_H, 1, [Define to 1 if you have the <sys/proplist.h> header file.])] , )
      AC_CHECK_FUNCS(getproplist get_proplist_entry sizeof_proplist_entry add_proplist_entry setproplist,
	 [
	     have_xattr=yes
	     AC_DEFINE([HAVE_GETPROPLIST], 1, [Define to 1 if you have the `getproplist' function.])
	     AC_DEFINE([HAVE_GET_PROPLIST_ENTRY], 1, [Define to 1 if you have the `get_proplist_entry' function.])
	     AC_DEFINE([HAVE_SIZEOF_PROPLIST_ENTRY], 1, [Define to 1 if you have the `sizeof_proplist_entry' function.])
	     AC_DEFINE([HAVE_ADD_PROPLIST_ENTRY], 1, [Define to 1 if you have the `add_proplist_entry' function.])
	     AC_DEFINE([HAVE_SETPROPLIST], 1, [Define to 1 if you have the `setproplist' function.])
	 ]
      )
   fi

   dnl
   dnl If we failed to find TRU64 support try the SOLARIS implementation of extented and extensible attributes
   dnl when running on a Solaris.
   dnl
   if test $have_xattr = no -a \
	   x${HAVE_SUN_OS_TRUE} = x; then
      AC_CHECK_HEADER(sys/attr.h, [AC_DEFINE(HAVE_SYS_ATTR_H, 1, [Define to 1 if you have the <sys/attr.h> header file.])] , )
      AC_CHECK_HEADER(sys/nvpair.h, [AC_DEFINE(HAVE_SYS_NVPAIR_H, 1, [Define to 1 if you have the <sys/nvpair.h> header file.])] , )
      AC_CHECK_HEADER(attr.h, [AC_DEFINE(HAVE_ATTR_H, 1, [Define to 1 if you have the <attr.h> header file.])] , )

      AC_CHECK_FUNCS(openat fstatat unlinkat fchownat futimesat,
	 [
	     have_xattr=yes
	     AC_DEFINE([HAVE_OPENAT], 1, [Define to 1 if you have the `openat' function.])
	     AC_DEFINE([HAVE_FSTATAT], 1, [Define to 1 if you have the `fstatat' function.])
	     AC_DEFINE([HAVE_UNLINKAT], 1, [Define to 1 if you have the `unlinkat' function.])
	     AC_DEFINE([HAVE_FCHOWNAT], 1, [Define to 1 if you have the `fchownat' function.])
	     AC_DEFINE([HAVE_FUTIMESAT], 1, [Define to 1 if you have the `futimesat' function.])
	 ]
      )

      if test $have_xattr = yes; then
	 AC_CHECK_LIB(nvpair, nvlist_next_nvpair,
	    [
		AC_DEFINE([HAVE_NVLIST_NEXT_NVPAIR], 1, [Define to 1 if you have the `nvlist_next_nvpair' function.])
		XATTR_LIBS="-lnvpair $XATTR_LIBS"
	    ]
	 )
      fi
   fi

   dnl
   dnl If we failed to find Solaris support try the generic xattr support code
   dnl
   if test $have_xattr = no; then
      AC_CHECK_HEADER(sys/xattr.h, [AC_DEFINE(HAVE_SYS_XATTR_H, 1, [Define to 1 if you have the <sys/xattr.h> header file.])] , )
      AC_CHECK_FUNCS(llistxattr lgetxattr lsetxattr,
	 [
	     have_xattr=yes
	     AC_DEFINE([HAVE_LLISTXATTR], 1, [Define to 1 if you have the `llistxattr' function.])
	     AC_DEFINE([HAVE_LGETXATTR], 1, [Define to 1 if you have the `lgetxattr' function.])
	     AC_DEFINE([HAVE_LSETXATTR], 1, [Define to 1 if you have the `lsetxattr' function.])
	 ]
      )

      if test $have_xattr = no; then
	 AC_CHECK_FUNCS(listxattr getxattr setxattr,
	    [
		have_xattr=yes
		AC_DEFINE([HAVE_LISTXATTR], 1, [Define to 1 if you have the `listxattr' function.])
		AC_DEFINE([HAVE_GETXATTR], 1, [Define to 1 if you have the `getxattr' function.])
		AC_DEFINE([HAVE_SETXATTR], 1, [Define to 1 if you have the `setxattr' function.])
	    ]
	 )
      fi
   fi

   if test x$support_xattr = xyes -a $have_xattr != yes; then
      AC_MSG_ERROR([xattr support explicitly enabled but no supported xattr implementation found,
  please either load the xattr libraries or rerun configure without --enable-xattr])
   else
      if test $have_xattr = yes; then
	 AC_DEFINE([HAVE_XATTR], 1, [Extended Attributes support])
      fi
   fi
fi

if test x$use_libtool != xno; then
   XATTR_LIBS_NONSHARED=""
else
   XATTR_LIBS_NONSHARED="${XATTR_LIBS}"
fi

AC_SUBST(XATTR_LIBS)
AC_SUBST(XATTR_LIBS_NONSHARED)

dnl
dnl Check for SCSI Crypto support
dnl
support_scsi_crypto=no
AC_ARG_ENABLE(scsi-crypto,
   AC_HELP_STRING([--enable-scsi-crypto], [enable low level SCSI crypto support @<:@default=no@:>@]),
   [
       if test x$enableval = xyes; then
	  support_scsi_crypto=yes
       fi
   ]
)

CAM_LIBS=""
have_scsi_crypto=no
if test x$support_scsi_crypto = xyes; then
   if test x${HAVE_LINUX_OS_TRUE} = x; then
      AC_CHECK_HEADER(scsi/sg.h, [AC_DEFINE(HAVE_SCSI_SG_H, 1, [Define to 1 if you have the <scsi/sg.h> header file.])] , )
      AC_CHECK_HEADER(scsi/scsi.h, [AC_DEFINE(HAVE_SCSI_SCSI_H, 1, [Define to 1 if you have the <scsi/scsi.h> header file.])] , )

      if test x$ac_cv_header_scsi_sg_h = xyes -a \
              x$ac_cv_header_scsi_scsi_h = xyes; then
         have_scsi_crypto=yes
      fi
   fi

   if test $have_scsi_crypto = no -a \
	   x${HAVE_SUN_OS_TRUE} = x; then
      AC_CHECK_HEADER(sys/scsi/impl/uscsi.h, [AC_DEFINE(HAVE_SYS_SCSI_IMPL_USCSI_H, 1, [Define to 1 if you have the <sys/scsi/impl/uscsi.h> header file.])] , )

      if test x$ac_cv_header_sys_scsi_impl_uscsi_h = xyes; then
         have_scsi_crypto=yes
      fi
   fi

   if test $have_scsi_crypto = no -a \
	   x${HAVE_FREEBSD_OS_TRUE} = x; then
      AC_CHECK_HEADER(camlib.h, [AC_DEFINE(HAVE_CAMLIB_H, 1, [Define to 1 if you have the <camlib.h> header file.])] , )
      AC_CHECK_HEADER(cam/scsi/scsi_message.h, [AC_DEFINE(HAVE_CAM_SCSI_SCSI_MESSAGE_H, 1, [Define to 1 if you have the <cam/scsi/scsi_message.h> header file.])] , )

      if test x$ac_cv_header_camlib_h = xyes -a \
              x$ac_cv_header_cam_scsi_scsi_message_h = xyes; then
         CAM_LIBS="-lcam"
         have_scsi_crypto=yes
      fi
   fi

   if test $have_scsi_crypto = no -a \
           x${HAVE_NETBSD_OS_TRUE} = x; then
      AC_CHECK_HEADER(dev/scsipi/scsipi_all.h, [AC_DEFINE(HAVE_DEV_SCSIPI_SCSIPI_ALL_H, 1, [Define to 1 if you have the <dev/scsipi/scsipi_all.h> header file.])] , )

      if test x$ac_cv_header_dev_scsipo_scsipo_all_h = xyes; then
         have_scsi_crypto=yes
      fi
   fi

   if test $have_scsi_crypto = no -a \
	   x${HAVE_OPENBSD_OS_TRUE} = x; then
      AC_CHECK_HEADER(scsi/uscsi_all.h, [AC_DEFINE(HAVE_USCSI_ALL_H, 1, [Define to 1 if you have the <scsi/uscsi_all.h> header file.])] , )

      if test x$ac_cv_header_scsi_uscsi_all_h = xyes; then
         have_scsi_crypto=yes
      fi
   fi

   if test x$support_scsi_crypto = xyes -a $have_scsi_crypto != yes; then
      AC_MSG_ERROR([scsi crypto support explicitly enabled but no supported scsi crypto implementation found,
  please rerun configure without --enable-scsi-crypto])
   else
      AC_DEFINE([HAVE_LOWLEVEL_SCSI_INTERFACE], 1, [Low level SCSI Interface support])
   fi
fi
AC_SUBST(CAM_LIBS)

dnl
dnl Check for GlusterFS via gfapi.
dnl
GLUSTER_LIBS="-lgfapi"
GLUSTER_INC=""
have_glusterfs=no
AC_ARG_WITH(glusterfs,
   AC_HELP_STRING([--with-glusterfs@<:@=DIR@:>@], [Directory holding GLUSTERFS includes/libs]),
      with_glusterfs_directory=$withval
)

if test "x${with_glusterfs_directory}" != "xyes" && test x"${with_glusterfs_directory}" != "x"; then
   #
   # Make sure the $with_glusterfs_directory also makes sense
   #
   if test -d "${with_glusterfs_directory}/lib" -a -d "${with_glusterfs_directory}/include"; then
      GLUSTER_LIBS="-L${with_glusterfs_directory}/lib ${GLUSTER_LIBS}"
      GLUSTER_INC="-I${with_glusterfs_directory}/include ${GLUSTER_INC}"
   fi
else
   GLUSTER_INC="-I/usr/include/glusterfs"
fi

saved_LIBS="${LIBS}"
saved_CFLAGS="${CFLAGS}"
saved_CPPFLAGS="${CPPFLAGS}"
LIBS="${saved_LIBS} ${GLUSTER_LIBS}"
CFLAGS="${saved_CFLAGS} ${GLUSTER_INC}"
CPPFLAGS="${saved_CPPFLAGS} ${GLUSTER_INC}"

AC_CHECK_HEADER(api/glfs.h)

AC_MSG_CHECKING(for glfs_init in gfapi library)
AC_TRY_LINK(
   [
       #include <api/glfs.h>
   ], [
       glfs_new("volumename");
   ], [
       AC_MSG_RESULT(yes)
       have_glusterfs="yes"
   ], [
       AC_MSG_RESULT(no)
       have_glusterfs="no"
   ]
)

LIBS="${saved_LIBS}"
CFLAGS="${saved_CFLAGS}"
CPPFLAGS="${saved_CPPFLAGS}"

if test "x${have_glusterfs}" = "xyes"; then
   AC_DEFINE(HAVE_GFAPI, 1, [Define to 1 if you have gfapi lib])
else
   GLUSTER_LIBS=""
   GLUSTER_INC=""
fi

AC_SUBST(GLUSTER_INC)
AC_SUBST(GLUSTER_LIBS)

dnl
dnl Check for Object storage via libdroplet.
dnl
DROPLET_LIBS="-ldroplet"
DROPLET_INC=""
have_droplet=no
AC_ARG_WITH(droplet,
   AC_HELP_STRING([--with-droplet@<:@=DIR@:>@], [Directory holding DROPLET includes/libs]),
      with_droplet_directory=$withval
)

if test "x${with_droplet_directory}" != "xyes" && test x"${with_droplet_directory}" != "x"; then
   #
   # Make sure the $with_droplet_directory also makes sense
   #
   if test -d "${with_droplet_directory}/lib" -a -d "${with_droplet_directory}/include"; then
      DROPLET_LIBS="-L${with_droplet_directory}/lib ${DROPLET_LIBS}"
      DROPLET_INC="-I${with_droplet_directory}/include ${DROPLET_INC}"
   fi
fi

saved_LIBS="${LIBS}"
saved_CFLAGS="${CFLAGS}"
saved_CPPFLAGS="${CPPFLAGS}"
LIBS="${saved_LIBS} ${DROPLET_LIBS}"
CFLAGS="${saved_CFLAGS} ${DROPLET_INC}"
CPPFLAGS="${saved_CPPFLAGS} ${DROPLET_INC}"

AC_CHECK_HEADER(droplet.h)

AC_MSG_CHECKING(for dpl_ctx_new in libdroplet library)
AC_TRY_LINK(
   [
       #include <droplet.h>
   ], [
       dpl_ctx_new(NULL, NULL);
   ], [
       AC_MSG_RESULT(yes)
       have_droplet="yes"
   ], [
       AC_MSG_RESULT(no)
       have_droplet="no"
   ]
)

LIBS="${saved_LIBS}"
CFLAGS="${saved_CFLAGS}"
CPPFLAGS="${saved_CPPFLAGS}"

if test "x${have_droplet}" = "xyes"; then
   AC_DEFINE(HAVE_OBJECTSTORE, 1, [Define to 1 if you have libdroplet lib])
else
   DROPLET_LIBS=""
   DROPLET_INC=""
fi

AC_SUBST(DROPLET_INC)
AC_SUBST(DROPLET_LIBS)

dnl
dnl Check for CEPH via librados.
dnl
RADOS_LIBS="-lrados"
RADOS_INC=""
have_ceph=no
AC_ARG_WITH(rados,
   AC_HELP_STRING([--with-rados@<:@=DIR@:>@], [Directory holding RADOS includes/libs]),
      with_rados_directory=$withval
)

if test "x${with_rados_directory}" != "xyes" && test x"${with_rados_directory}" != "x"; then
   #
   # Make sure the $with_rados_directory also makes sense
   #
   if test -d "${with_rados_directory}/lib" -a -d "${with_rados_directory}/include"; then
      RADOS_LIBS="-L${with_rados_directory}/lib ${RADOS_LIBS}"
      RADOS_INC="-I${with_rados_directory}/include ${RADOS_INC}"
   fi
fi

saved_LIBS="${LIBS}"
saved_CFLAGS="${CFLAGS}"
saved_CPPFLAGS="${CPPFLAGS}"
LIBS="${saved_LIBS} ${RADOS_LIBS}"
CFLAGS="${saved_CFLAGS} ${RADOS_INC}"
CPPFLAGS="${saved_CPPFLAGS} ${RADOS_INC}"

AC_CHECK_HEADER(rados/librados.h)

AC_MSG_CHECKING(for glfs_init in gfapi library)
AC_TRY_LINK(
   [
       #include <rados/librados.h>
   ], [
      rados_t cluster;

      rados_create(&cluster, NULL);
   ], [
       AC_MSG_RESULT(yes)
       have_ceph="yes"
   ], [
       AC_MSG_RESULT(no)
       have_ceph="no"
   ]
)

LIBS="${saved_LIBS}"
CFLAGS="${saved_CFLAGS}"
CPPFLAGS="${saved_CPPFLAGS}"

if test "x${have_ceph}" = "xyes"; then
   AC_DEFINE(HAVE_RADOS, 1, [Define to 1 if you have rados lib])
else
   RADOS_LIBS=""
   RADOS_INC=""
fi

AC_SUBST(RADOS_INC)
AC_SUBST(RADOS_LIBS)

dnl
dnl Check for pthread libraries
dnl
PTHREAD_LIB=""
AC_CHECK_LIB(pthread, pthread_create, PTHREAD_LIB="-lpthread",
   [
       AC_CHECK_LIB(pthreads, pthread_create, PTHREAD_LIB="-lpthreads",
	  [
	      AC_CHECK_LIB(c_r, pthread_create, PTHREAD_LIB="-lc_r",
		 [
		     AC_CHECK_FUNC(pthread_create)
		 ]
	      )
	  ]
       )
   ]
)

dnl
dnl Check for headers, functions and libraries required to support
dnl keeping readall capabilities
dnl
AC_CHECK_HEADERS(sys/prctl.h sys/capability.h)
AC_CHECK_FUNCS(prctl setreuid)
AC_CHECK_LIB([cap], [cap_set_proc], [CAP_LIBS="-lcap"], [CAP_LIBS=])
if test x$CAP_LIBS = x-lcap; then
   AC_DEFINE(HAVE_LIBCAP, 1, [Define to 1 if you have libcap])
fi
AC_SUBST(CAP_LIBS)

CFLAGS=${CFLAGS--O}

if test x$have_gcc = xyes ; then
   CPPFLAGS="$CPPFLAGS -fno-strict-aliasing -fno-exceptions"
   CFLAGS="$CFLAGS -fno-strict-aliasing -fno-exceptions"
   CXXFLAGS="$CFLAGS -fno-strict-aliasing -fno-exceptions -fno-rtti"
fi
LDFLAGS=${LDFLAGS--O}
CPPFLAGS="$CPPFLAGS"
CFLAGS="$CFLAGS"
CXXFLAGS="$CXXFLAGS"
AC_SUBST(DEBUG)
AC_SUBST(DINCLUDE)
AC_SUBST(CFLAGS)
AC_SUBST(CPPFLAGS)
AC_SUBST(CXXFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(X_CFLAGS)
AC_SUBST(DEFS)
AC_SUBST(LIBS)
AC_SUBST(DLIB)
AC_SUBST(X_LIBS)
AC_SUBST(X_EXTRA_LIBS)
AC_SUBST(WCFLAGS)
AC_SUBST(WLDFLAGS)
AC_SUBST(WRAPLIBS)
AC_SUBST(SOCKLIBS)

lld="lld"
llu="llu"

WCFLAGS=
WLDFLAGS=

dnl
dnl Finally we set appropriate distribution specific
dnl  variables and defaults
dnl
dnl PFILES are platform specific files
PFILES="platforms/Makefile"
PSCMD="ps -e"
MACOSX=
COMPRESS_MANPAGES=yes

case "$DISTNAME" in
aix)
   TAPEDRIVE="/dev/rmt0.1"
   PSCMD="ps -e -o pid,comm"
   PFILES="${PFILES} \
      platforms/aix/Makefile"
   largefile_support="yes"
  ;;
alpha)
   PTHREAD_LIB="-lpthread -lexc"
   if test "${CC}" = "gcc" ; then
      lld="lld"
      llu="llu"
   else
      lld="ld"
      llu="lu"
   fi
   TAPEDRIVE="/dev/nrmt0"
  ;;
bsdi)
   TAPEDRIVE="/dev/nrmt0"
   PTHREAD_LIB="-pthread"
   CFLAGS="${CFLAGS} -pthread"
   CXXFLAGS="${CXXFLAGS} -pthread"
   PSCMD="ps -ax -o pid,command"
   lld="qd"
   llu="qu"
   PFILES="${PFILES} \
       platforms/bsdi/Makefile \
       platforms/bsdi/bareos-fd \
       platforms/bsdi/bareos-sd \
       platforms/bsdi/bareos-dir"
   largefile_support="yes"
  ;;
darwin)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   MACOSX=macosx
   PFILES="${PFILES} \
      platforms/darwin/Makefile"
  ;;
osx)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   MACOSX=macosx
   PFILES="${PFILES} \
      platforms/osx/Makefile"
  ;;
debian)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
    platforms/debian/Makefile \
    platforms/debian/set_dbconfig_vars.sh"
  ;;
freebsd)
   VER=`echo $DISTVER | cut -c 1`
   if test x$VER = x4 ; then
      PTHREAD_LIB="${PTHREAD_LIBS:--pthread}"
      CFLAGS="${CFLAGS} ${PTHREAD_CFLAGS:--pthread}"
      CXXFLAGS="${CXXFLAGS} ${PTHREAD_CFLAGS:--pthread}"
   fi
   lld="qd"
   llu="qu"
   TAPEDRIVE="/dev/nrsa0"
   PSCMD="ps -ax -o pid,command"
   PFILES="${PFILES} \
       platforms/freebsd/Makefile \
       platforms/freebsd/bareos-fd \
       platforms/freebsd/bareos-sd \
       platforms/freebsd/bareos-dir"
   largefile_support="yes"
  ;;
hurd)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
       platforms/hurd/Makefile \
       platforms/hurd/bareos-fd \
       platforms/hurd/bareos-sd \
       platforms/hurd/bareos-dir"
  ;;
hpux)
   PSCMD="UNIX95=1; ps -e -o pid,comm"
   CFLAGS="${CFLAGS} -D_XOPEN_SOURCE_EXTENDED=1"
   CXXFLAGS="${CXXFLAGS} -D_XOPEN_SOURCE_EXTENDED=1"
   TAPEDRIVE="/dev/rmt/0hnb"
   PTHREAD_LIB="-lpthread"
   AC_DEFINE(_INCLUDE_LONGLONG, 1, [Needed on HP-UX/g++ systems to support long long ints (int64)])
  ;;
irix)
   TAPEDRIVE="/dev/rmt/0cbn"
   PSCMD="ps -e -o pid,comm"
   PFILES="${PFILES} \
       platforms/irix/Makefile \
       platforms/irix/bareos-fd \
       platforms/irix/bareos-sd \
       platforms/irix/bareos-dir"
  ;;
netbsd)
   lld="qd"
   llu="qu"
   TAPEDRIVE="/dev/nrst0"
   PSCMD="ps -ax -o pid,command"
   PTHREAD_LIB="-pthread"
   CFLAGS="${CFLAGS} -pthread"
   CXXFLAGS="${CXXFLAGS} -pthread"
  ;;
openbsd)
   lld="qd"
   llu="qu"
   TAPEDRIVE="/dev/nrst0"
   PSCMD="ps -ax -o pid,command"
   PTHREAD_LIB="-pthread"
   CFLAGS="${CFLAGS} -pthread"
   CXXFLAGS="${CXXFLAGS} -pthread"
   PFILES="${PFILES} \
       platforms/openbsd/Makefile \
       platforms/openbsd/bareos-fd \
       platforms/openbsd/bareos-sd \
       platforms/openbsd/bareos-dir"
  ;;
redhat)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
       platforms/redhat/Makefile \
       platforms/redhat/bareos-fd \
       platforms/redhat/bareos-sd \
       platforms/redhat/bareos-dir
       "
  ;;
mandrake)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
       platforms/mandrake/Makefile \
       platforms/mandrake/bareos-fd \
       platforms/mandrake/bareos-sd \
       platforms/mandrake/bareos-dir \
       "
  ;;
gentoo)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
       platforms/gentoo/Makefile \
       platforms/gentoo/bareos-init \
       platforms/gentoo/bareos-fd \
       platforms/gentoo/bareos-sd \
       platforms/gentoo/bareos-dir"
  ;;
slackware)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
       platforms/slackware/Makefile \
       platforms/slackware/rc.bareos-fd \
       platforms/slackware/rc.bareos-sd \
       platforms/slackware/rc.bareos-dir\
       platforms/slackware/functions.bareos"
  ;;
solaris)
   TAPEDRIVE="/dev/rmt/0cbn"
   PSCMD="ps -e -o pid,comm"
   PFILES="${PFILES} \
       platforms/solaris/Makefile \
       platforms/solaris/bareos-fd \
       platforms/solaris/bareos-sd \
       platforms/solaris/bareos-dir"
   COMPRESS_MANPAGES=
   case ${DISTVER} in
   5.5|5.6)
      AC_DEFINE(HAVE_OLD_SOCKOPT, 1, [Define to 1 to use the old sockopt option])
      AC_DEFINE(USE_THR_SETCONCURRENCY, 1, [Define to 1 to use the thr_setconcurrency function])
      AC_DEFINE(HAVE_NON_WORKING_WALKCONTEXT, 1, [Define to 1 to when walkcontext does not work])
      ;;
   5.7|5.8)
      AC_DEFINE(USE_THR_SETCONCURRENCY, 1, [Define to 1 to use the thr_setconcurrency function])
      AC_DEFINE(HAVE_NON_WORKING_WALKCONTEXT, 1, [Define to 1 to when walkcontext does not work])
      ;;
   5.9)
      AC_DEFINE(HAVE_NON_WORKING_WALKCONTEXT, 1, [Define to 1 to when walkcontext does not work])
      ;;
   *)
      ;;
   esac
   LIBS="$LIBS -lresolv -lrt"
  ;;
suse)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
       platforms/suse/Makefile \
       platforms/suse/bareos-fd \
       platforms/suse/bareos-sd \
       platforms/suse/bareos-dir \
       platforms/suse/bareos"
  ;;
ubuntu)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
    platforms/ubuntu/Makefile \
    platforms/debian/Makefile \
    platforms/debian/set_dbconfig_vars.sh"
  ;;
univention)
   TAPEDRIVE="/dev/nst0"
   PSCMD="ps -e -o pid,command"
   PFILES="${PFILES} \
     platforms/univention/Makefile \
     platforms/debian/Makefile \
     platforms/debian/set_dbconfig_vars.sh"
  ;;
unknown)
   TAPEDRIVE="/dev/nst0"
  ;;
*)
  echo " === Something went wrong. Unknown DISTNAME $DISTNAME ==="
  ;;
esac

dnl -------------------------------------------
dnl systemd (default off)
dnl -------------------------------------------
AC_MSG_CHECKING(for systemd support)
AC_ARG_WITH(systemd,
   AC_HELP_STRING([--with-systemd@<:@=UNITDIR@:>@], [Include systemd support. UNITDIR is where systemd system .service files are located, default is to ask systemctl.]),
   [
       if test "$withval" != "no"; then
	   if test "$withval" = "yes"; then
	       SYSTEMD_UNITDIR="`systemctl show | grep UnitPath | cut -d " " -f2`"
	   else
	       SYSTEMD_UNITDIR="${withval}"
	   fi

	   PFILES="${PFILES} \
		   platforms/systemd/Makefile \
		   platforms/systemd/bareos.conf \
		   platforms/systemd/bareos-dir.service \
		   platforms/systemd/bareos-fd.service \
		   platforms/systemd/bareos-sd.service"
	   AC_DEFINE(HAVE_SYSTEMD, 1, [Define to 1 if systemd support should be enabled])
	   AC_MSG_RESULT(yes)
	   support_systemd="yes"
       else
	   AC_MSG_RESULT(no)
	   support_systemd="no"
       fi
   ],[
       support_systemd="no"
       AC_MSG_RESULT(no)
   ]
)
AC_SUBST(SYSTEMD_UNITDIR)

AC_SUBST(hostname)

LIBS="$PTHREAD_LIB $LIBS"

AC_DEFINE_UNQUOTED(lld, "$lld", [Set to correct scanf value for long long int])
AC_DEFINE_UNQUOTED(llu, "$llu", [Set to correct scanf value for long long unsigned int])
AC_SUBST(TAPEDRIVE)
AC_SUBST(PSCMD)
AC_SUBST(MACOSX)
AC_SUBST(DISTNAME)
AC_SUBST(DISTVER)
AC_SUBST(COMPRESS_MANPAGES)

dnl common parts of the Makefile
MCOMMON=./autoconf/Make.common
AC_SUBST_FILE(MCOMMON)

dnl Insanity check
if test "x${subsysdir}" = "x${sbindir}" ; then
   echo " "
   echo " "
   echo "You have set both --sbindir and --with-subsys-dir"
   echo "  equal to: ${subsysdir} "
   echo "This is not permitted. Please reconfigure."
   echo " "
   echo "Aborting configuration ..."
   echo " "
   echo " "
   exit 1
fi

AC_CONFIG_FILES([
autoconf/Make.common \
Makefile \
manpages/Makefile \
debian/bareos-common.preinst \
debian/bareos-database-common.config \
debian/bareos-database-common.postinst \
debian/bareos-filedaemon.bareos-fd.init \
debian/bareos-filedaemon.preinst \
debian/bareos-director.bareos-dir.init \
debian/bareos-director.preinst \
debian/bareos-storage.bareos-sd.init \
debian/bareos-storage.preinst \
scripts/bareos-config \
scripts/bareos-config-lib.sh \
scripts/bareos-explorer \
scripts/btraceback \
scripts/bconsole \
scripts/bareos \
scripts/bareos-ctl-dir \
scripts/bareos-ctl-fd \
scripts/bareos-ctl-sd \
scripts/devel_bareos \
scripts/Makefile \
scripts/logrotate \
scripts/mtx-changer \
scripts/disk-changer \
scripts/logwatch/Makefile \
scripts/logwatch/logfile.bareos.conf \
scripts/bat.console_apps \
src/Makefile \
src/include/host.h \
src/console/Makefile \
src/console/bconsole.conf \
src/qt-tray-monitor/bareos-tray-monitor.desktop \
src/qt-tray-monitor/tray-monitor.conf \
src/qt-tray-monitor/tray-monitor.pro \
src/qt-console/bat.conf \
src/qt-console/bat.desktop \
src/qt-console/bat.pro \
src/qt-console/install_conf_file \
src/dird/Makefile \
src/dird/bareos-dir.conf \
src/lib/Makefile \
src/stored/Makefile \
src/stored/bareos-sd.conf \
src/filed/Makefile \
src/filed/bareos-fd.conf \
src/cats/Makefile \
src/cats/make_catalog_backup.pl \
src/cats/make_catalog_backup \
src/cats/delete_catalog_backup \
src/cats/create_bareos_database \
src/cats/update_bareos_tables \
src/cats/grant_bareos_privileges \
src/cats/make_bareos_tables \
src/cats/drop_bareos_tables \
src/cats/drop_bareos_database \
src/cats/install-default-backend \
src/cats/ddl/versions.map \
src/findlib/Makefile \
src/lmdb/Makefile \
src/ndmp/Makefile \
src/tests/Makefile \
src/tools/Makefile \
src/plugins/filed/Makefile \
src/plugins/stored/Makefile \
src/plugins/dird/Makefile \
po/Makefile.in \
src/defaultconfigs/diskonly/bareos-sd.conf \
src/defaultconfigs/diskonly/bareos-dir.conf \
$PFILES
])
AC_OUTPUT

if test "${support_bat}" = "yes" ; then
   if test "x$QMAKE" = "xnone"; then
      AC_MSG_ERROR([Could not find qmake $PATH. Check your Qt installation])
   fi

   cd src/qt-console
   echo "Creating bat Makefile"
   # hack: required to get "make install" to work
   touch bat
   chmod 755 bat
   rm -f Makefile
   $QMAKE
   ${MAKE:-make} clean
   cd ${BUILD_DIR}
fi

if test "${support_traymonitor}" = "yes" ; then
   if test "x$QMAKE" = "xnone"; then
      AC_MSG_ERROR([Could not find qmake $PATH. Check your Qt installation])
   fi

   cd src/qt-tray-monitor
   echo "Creating tray-monitor Makefile"
   # hack: required to get "make install" to work
   touch bareos-tray-monitor
   chmod 755 bareos-tray-monitor
   rm -f Makefile
   $QMAKE
   ${MAKE:-make} clean
   cd ${BUILD_DIR}
fi


dnl
dnl if CC is gcc, we can rebuild the dependencies (since the depend rule
dnl requires gcc).  If it's not, don't rebuild dependencies
dnl
if test X"$GCC" = "Xyes" ; then
  echo "Doing make of dependencies"
  ${MAKE:-make} depend
fi

cd src/qt-console
chmod 755 install_conf_file
cd ${BUILD_DIR}

cd scripts
chmod 755 bareos btraceback mtx-changer
chmod 755 bconsole mtx-changer devel_bareos logrotate
cd ..

c=src/cats

chmod 755 $c/create_bareos_database   $c/update_bareos_tables  $c/make_bareos_tables
chmod 755 $c/grant_bareos_privileges  $c/drop_bareos_tables    $c/drop_bareos_database
chmod 755 $c/make_catalog_backup $c/delete_catalog_backup  $c/make_catalog_backup.pl
chmod 755 $c/install-default-backend

if test "x$ac_cv_sys_largefile_CFLAGS" != "xno" ; then
   largefile_support="yes"
fi

dnl Only try to find out the version number of the compiler when we know its some kind of GCC compiler
if test X"$GCC" = "Xyes" ; then
   dnl
   dnl A whole lot of hand springs to get the compiler version.
   dnl	This is because gcc changed the output in version 3.0
   dnl
   CCVERSION=`${CC} --version | tr '\n' ' ' | cut -f 3 -d ' '`
   if test "x${CCVERSION}" = "x" ; then
      CCVERSION=`${CC} --version | tr '\n' ' ' | cut -f 1 -d ' '`
   fi
   CXXVERSION=`${CXX} --version | tr '\n' ' ' | cut -f 3 -d ' '`
   if test x"${CXXVERSION}" = x ; then
      CXXVERSION=`${CXX} --version | tr '\n' ' ' | cut -f 1 -d ' '`
   fi
fi

# clean up any old junk
echo " "
echo "Cleaning up"
echo " "
${MAKE:-make} clean

dnl for some Debian based distribution, e.g. Univention, there are additional packages to build
dnl must run after clean
cp ${BUILD_DIR}/debian/control.common ${BUILD_DIR}/debian/control
DEBIAN_CONTROL_ADDITIONAL=${BUILD_DIR}/platforms/$DISTNAME/debian/control.additional
if test -e "$DEBIAN_CONTROL_ADDITIONAL"; then
    cat $DEBIAN_CONTROL_ADDITIONAL >> ${BUILD_DIR}/debian/control
fi

echo "
Configuration on `date`:

   Host:                    ${host}${post_host} -- ${DISTNAME} ${DISTVER}
   Bareos version:          ${BAREOS} ${VERSION} (${DATE})
   Distribution:            ${DISTNAME}
   Source code location:    ${srcdir}
   Install binaries:        ${sbindir}
   Install libraries:       ${libdir}
   Install config files:    ${sysconfdir}
   Scripts directory:       ${scriptdir}
   Archive directory:       ${archivedir}
   Working directory:       ${working_dir}
   PID directory:           ${piddir}
   Subsys directory:        ${subsysdir}
   Man directory:           ${mandir}
   Data directory:          ${datarootdir}
   Plugin directory:        ${plugindir}
   C Compiler:              ${CC} ${CCVERSION}
   C++ Compiler:            ${CXX} ${CXXVERSION}
   Compiler flags:          ${WCFLAGS} ${CFLAGS}
   Linker flags:            ${WLDFLAGS} ${LDFLAGS}
   Libraries:               ${LIBS}
   Statically Linked Tools: ${support_static_tools}
   Statically Linked FD:    ${support_static_fd}
   Statically Linked SD:    ${support_static_sd}
   Statically Linked DIR:   ${support_static_dir}
   Statically Linked CONS:  ${support_static_cons}
   Database backends:       ${db_backends}
   Database port:           ${db_port}
   Database name:           ${db_name}
   Database user:           ${db_user}
   Database version:        ${BDB_VERSION}

   Job Output Email:        ${job_email}
   Traceback Email:         ${dump_email}
   SMTP Host Address:       ${smtp_host}

   Director Port:           ${dir_port}
   File daemon Port:        ${fd_port}
   Storage daemon Port:     ${sd_port}

   Director User:           ${dir_user}
   Director Group:          ${dir_group}
   Storage Daemon User:     ${sd_user}
   Storage DaemonGroup:     ${sd_group}
   File Daemon User:        ${fd_user}
   File Daemon Group:       ${fd_group}

   Large file support:      $largefile_support
   Bareos conio support:    ${got_conio} ${CONS_LIBS}
   readline support:        ${got_readline} ${PRTREADLINE_SRC}
   TCP Wrappers support:    ${TCPW_MSG} ${WRAPLIBS}
   TLS support:             ${have_tls}
   Encryption support:      ${have_crypto}
   OpenSSL support:         ${have_openssl}
   GNUTLS support:          ${have_gnutls}
   ZLIB support:            ${have_zlib}
   LZO support:             ${have_lzo}
   FASTLZ support:          ${have_fastlz}
   LMDB support:            ${support_lmdb}
   NDMP support:            ${support_ndmp}
   enable-smartalloc:       ${support_smartalloc}
   enable-lockmgr:          ${support_lockmgr}
   bat support:             ${support_bat}
   tray-monitor support:    ${support_traymonitor}
   client-only:             ${build_client_only}
   build-dird:              ${build_dird}
   build-stored:            ${build_stored}
   Plugin support:          ${have_plugins}
   AFS support:             ${have_afs}
   ACL support:             ${have_acl}
   XATTR support:           ${have_xattr}
   SCSI Crypto support:     ${have_scsi_crypto}
   GLUSTERFS support:       ${have_glusterfs}
   DROPLET support:         ${have_droplet}
   CEPH support:            ${have_ceph}
   Python support:          ${support_python} ${PYTHON_LIBS}
   systemd support:         ${support_systemd} ${SYSTEMD_UNITDIR}
   Batch insert enabled:    ${batch_insert_db_backends}

  " > config.out

# create a small shell script useful for support with
# configure options and config.out info
cat > scripts/bareos_config << EOF
#!/bin/sh
cat << __EOC__
$ $0 $ac_configure_args
EOF
cat config.out >> scripts/bareos_config
echo __EOC__ >> scripts/bareos_config
chmod 755 scripts/bareos_config

cat config.out
